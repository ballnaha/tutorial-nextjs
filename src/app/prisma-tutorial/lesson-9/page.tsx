'use client';
import {
  Container,
  Typography,
  Box,
  Paper,
  Alert,
  Button,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Chip,
  Tab,
  Tabs,
  Card,
  CardContent,
  Stack,
  Avatar,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  IconButton,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Stepper,
  Step,
  StepLabel,
  StepContent,
  Divider,
} from '@mui/material';
import {
  CheckCircle,
  Code,
  ArrowBack,
  Assignment,
  Timer,
  ContentCopy,
  Palette,
  Visibility,
  Build,
  TableView,
  Storage,
  Check,
  ExpandMore,
  Warning,
  Lightbulb,
  OpenInNew,
  Search,
  Add,
  Edit,
  Delete,
  DataObject,
  Dashboard,
  Settings,
  ViewQuilt,
  DataArray,
  BugReport,
  Refresh,
  PlayArrow,
  Terminal,
  CloudDownload,
  Folder,
  Description,
  Web,
} from '@mui/icons-material';
import Link from 'next/link';
import { useState } from 'react';

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`lesson-tabpanel-${index}`}
      aria-labelledby={`lesson-tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box sx={{ p: 3 }}>
          {children}
        </Box>
      )}
    </div>
  );
}

function a11yProps(index: number) {
  return {
    id: `lesson-tab-${index}`,
    'aria-controls': `lesson-tabpanel-${index}`,
  };
}

export default function Lesson9() {
  const [tabValue, setTabValue] = useState(0);
  const [activeStep, setActiveStep] = useState(0);

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setTabValue(newValue);
  };

  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };

  const handleReset = () => {
    setActiveStep(0);
  };

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
  };

  return (
    <Container maxWidth="lg">
      {/* Header */}
      <Box sx={{ mb: 4 }}>
        <Button
          component={Link}
          href="/prisma-tutorial"
          startIcon={<ArrowBack />}
          sx={{ mb: 2 }}
        >
          ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
        </Button>
        
        <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
          <Avatar sx={{ bgcolor: 'primary.main', width: 56, height: 56 }}>
            <Palette sx={{ fontSize: 32 }} />
          </Avatar>
          <Box>
            <Typography variant="h4" component="h1" fontWeight="bold">
              ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 9: Prisma Studio ‡πÅ‡∏•‡∏∞ Tools
            </Typography>
            <Typography variant="subtitle1" color="text.secondary">
              ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Prisma Studio ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            </Typography>
          </Box>
        </Stack>

        <Stack direction="row" spacing={2} sx={{ mb: 3 }}>
          <Chip icon={<Timer />} label="20 ‡∏ô‡∏≤‡∏ó‡∏µ" color="primary" />
          <Chip icon={<Assignment />} label="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô" color="success" />
          <Chip icon={<Palette />} label="Tools" color="secondary" />
        </Stack>

        <Alert severity="info" sx={{ mb: 3 }}>
          <Typography variant="body2">
            <strong>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ:</strong> ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Prisma Studio, Database Browser, Visual Query Builder, Data Seeding ‡πÅ‡∏•‡∏∞ Database Introspection
          </Typography>
        </Alert>
      </Box>

      {/* Tabs */}
      <Paper sx={{ mb: 4 }}>
        <Tabs 
          value={tabValue} 
          onChange={handleTabChange} 
          variant="scrollable"
          scrollButtons="auto"
          allowScrollButtonsMobile
        >
          <Tab icon={<Visibility />} label="Prisma Studio" {...a11yProps(0)} />
          <Tab icon={<TableView />} label="Database Browser" {...a11yProps(1)} />
          <Tab icon={<Search />} label="Query Builder" {...a11yProps(2)} />
          <Tab icon={<DataArray />} label="Data Seeding" {...a11yProps(3)} />
          <Tab icon={<CloudDownload />} label="Introspection" {...a11yProps(4)} />
          <Tab icon={<Build />} label="CLI Tools" {...a11yProps(5)} />
        </Tabs>
      </Paper>

      {/* Tab 1: Prisma Studio */}
      <TabPanel value={tabValue} index={0}>
        <Typography variant="h4" gutterBottom color="primary" fontWeight="bold">
          üé® Prisma Studio - GUI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </Typography>

        <Alert severity="info" sx={{ mb: 4 }}>
          Prisma Studio ‡πÄ‡∏õ‡πá‡∏ô visual database editor ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏ú‡πà‡∏≤‡∏ô web interface
        </Alert>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üöÄ ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î Prisma Studio
        </Typography>

        <Paper sx={{ p: 3, mb: 4, bgcolor: 'grey.50' }}>
          <Stack direction="row" justifyContent="space-between" alignItems="center" sx={{ mb: 2 }}>
            <Typography variant="h6">Terminal Commands</Typography>
            <IconButton onClick={() => copyToClipboard(`# ‡πÄ‡∏õ‡∏¥‡∏î Prisma Studio
npx prisma studio

# ‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡πâ‡∏ß‡∏¢ port ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
npx prisma studio --port 3000

# ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î browser ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
npx prisma studio --browser none`)} size="small">
              <ContentCopy />
            </IconButton>
          </Stack>
          <Box component="pre" sx={{ 
            bgcolor: '#1e1e1e', 
            color: '#d4d4d4', 
            p: 2, 
            borderRadius: 1, 
            overflow: 'auto',
            fontSize: '0.875rem',
            fontFamily: 'Consolas, Monaco, monospace'
          }}>
{`# ‡πÄ‡∏õ‡∏¥‡∏î Prisma Studio
npx prisma studio

# ‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡πâ‡∏ß‡∏¢ port ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
npx prisma studio --port 3000

# ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î browser ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
npx prisma studio --browser none`}
          </Box>
        </Paper>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          ‚ú® ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á Prisma Studio
        </Typography>

        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr 1fr' }, gap: 3, mb: 4 }}>
          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <TableView color="primary" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Visual Table Editor</Typography>
              </Stack>
              <Typography variant="body2" color="text.secondary" paragraph>
                ‡∏î‡∏π‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡πà‡∏≤‡∏ô GUI ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Filter ‡πÅ‡∏•‡∏∞ Sort" />
                </ListItem>
              </List>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <Search color="secondary" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Query Interface</Typography>
              </Stack>
              <Typography variant="body2" color="text.secondary" paragraph>
                ‡∏™‡∏£‡πâ‡∏≤‡∏á query ‡πÅ‡∏ö‡∏ö visual ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô code
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Visual query builder" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Real-time preview" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Export queries" />
                </ListItem>
              </List>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <Storage color="warning" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Database Schema</Typography>
              </Stack>
              <Typography variant="body2" color="text.secondary" paragraph>
                ‡∏î‡∏π database schema ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Schema visualization" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Relation explorer" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Field information" />
                </ListItem>
              </List>
            </CardContent>
          </Card>
        </Box>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üìù ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
        </Typography>

        <Paper sx={{ p: 3, mb: 4 }}>
          <Stepper orientation="vertical" activeStep={-1}>
            <Step>
              <StepLabel>
                <Typography variant="h6">1. ‡πÄ‡∏õ‡∏¥‡∏î Prisma Studio</Typography>
              </StepLabel>
              <StepContent>
                <Typography>‡∏£‡∏±‡∏ô <code>npx prisma studio</code> ‡πÉ‡∏ô terminal ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î browser ‡∏ó‡∏µ‡πà http://localhost:5555</Typography>
              </StepContent>
            </Step>

            <Step>
              <StepLabel>
                <Typography variant="h6">2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</Typography>
              </StepLabel>
              <StepContent>
                <Typography>‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á</Typography>
              </StepContent>
            </Step>

            <Step>
              <StepLabel>
                <Typography variant="h6">3. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</Typography>
              </StepLabel>
              <StepContent>
                <Typography>‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏° Add record ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏ã‡∏•‡∏•‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</Typography>
              </StepContent>
            </Step>

            <Step>
              <StepLabel>
                <Typography variant="h6">4. ‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</Typography>
              </StepLabel>
              <StepContent>
                <Typography>‡πÉ‡∏ä‡πâ Filter panel ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</Typography>
              </StepContent>
            </Step>
          </Stepper>
        </Paper>

        <Alert severity="success" sx={{ mb: 3 }}>
          <Typography variant="h6" gutterBottom>üéØ ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á Prisma Studio</Typography>
          <List dense>
            <ListItem>
              <ListItemIcon><CheckCircle color="success" /></ListItemIcon>
              <ListItemText primary="‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô SQL ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" />
            </ListItem>
            <ListItem>
              <ListItemIcon><CheckCircle color="success" /></ListItemIcon>
              <ListItemText primary="‡πÅ‡∏™‡∏î‡∏á relationship ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÑ‡∏î‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô" />
            </ListItem>
            <ListItem>
              <ListItemIcon><CheckCircle color="success" /></ListItemIcon>
              <ListItemText primary="‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ SQL ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á" />
            </ListItem>
          </List>
        </Alert>
      </TabPanel>

      {/* Tab 2: Database Browser */}
      <TabPanel value={tabValue} index={1}>
        <Typography variant="h4" gutterBottom color="primary" fontWeight="bold">
          üóÑÔ∏è Database Browser ‡πÅ‡∏•‡∏∞ Data Explorer
        </Typography>

        <Alert severity="info" sx={{ mb: 4 }}>
          Database Browser ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≥‡∏£‡∏ß‡∏à‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        </Alert>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üìä ‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à Database Structure
        </Typography>

        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3, mb: 4 }}>
          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <ViewQuilt color="primary" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Tables Overview</Typography>
              </Stack>
              <Typography variant="body2" color="text.secondary" paragraph>
                ‡∏î‡∏π‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô records ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏≤‡∏£‡∏≤‡∏á" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Column types ‡πÅ‡∏•‡∏∞ constraints" />
                </ListItem>
              </List>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <DataObject color="secondary" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Relations Explorer</Typography>
              </Stack>
              <Typography variant="body2" color="text.secondary" paragraph>
                ‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Foreign key relationships" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="One-to-one, One-to-many relations" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Many-to-many through tables" />
                </ListItem>
              </List>
            </CardContent>
          </Card>
        </Box>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üîç ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </Typography>

        <TableContainer component={Paper} sx={{ mb: 4 }}>
          <Table>
            <TableHead>
              <TableRow sx={{ bgcolor: 'primary.50' }}>
                <TableCell><strong>Filter Type</strong></TableCell>
                <TableCell><strong>‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</strong></TableCell>
                <TableCell><strong>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á</strong></TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell>Text Search</TableCell>
                <TableCell>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå</TableCell>
                <TableCell>name contains "John"</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>Numeric Filter</TableCell>
                <TableCell>‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç</TableCell>
                <TableCell>age &gt; 18</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>Date Range</TableCell>
                <TableCell>‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</TableCell>
                <TableCell>createdAt between dates</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>Boolean Filter</TableCell>
                <TableCell>‡∏Å‡∏£‡∏≠‡∏á‡∏Ñ‡πà‡∏≤ true/false</TableCell>
                <TableCell>isActive = true</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>Null Check</TableCell>
                <TableCell>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ null</TableCell>
                <TableCell>description is not null</TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </TableContainer>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üìà ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á
        </Typography>

        <Box sx={{ mb: 4 }}>
          <Accordion>
            <AccordionSummary expandIcon={<ExpandMore />}>
              <Typography variant="h6">Bulk Operations</Typography>
            </AccordionSummary>
            <AccordionDetails>
              <Typography paragraph>
                ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô:
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="primary" /></ListItemIcon>
                  <ListItemText primary="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏≤‡∏¢ records ‡πÅ‡∏•‡∏∞‡∏•‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="primary" /></ListItemIcon>
                  <ListItemText primary="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏´‡∏•‡∏≤‡∏¢ records" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="primary" /></ListItemIcon>
                  <ListItemText primary="Export ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô CSV ‡∏´‡∏£‡∏∑‡∏≠ JSON" />
                </ListItem>
              </List>
            </AccordionDetails>
          </Accordion>

          <Accordion>
            <AccordionSummary expandIcon={<ExpandMore />}>
              <Typography variant="h6">Data Import/Export</Typography>
            </AccordionSummary>
            <AccordionDetails>
              <Typography paragraph>
                ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="primary" /></ListItemIcon>
                  <ListItemText primary="Import ‡∏à‡∏≤‡∏Å CSV file" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="primary" /></ListItemIcon>
                  <ListItemText primary="Export ‡πÄ‡∏õ‡πá‡∏ô JSON, CSV, ‡∏´‡∏£‡∏∑‡∏≠ SQL" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="primary" /></ListItemIcon>
                  <ListItemText primary="Validation ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô import" />
                </ListItem>
              </List>
            </AccordionDetails>
          </Accordion>

          <Accordion>
            <AccordionSummary expandIcon={<ExpandMore />}>
              <Typography variant="h6">Performance Monitoring</Typography>
            </AccordionSummary>
            <AccordionDetails>
              <Typography paragraph>
                ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="primary" /></ListItemIcon>
                  <ListItemText primary="Query execution time" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="primary" /></ListItemIcon>
                  <ListItemText primary="Database size ‡πÅ‡∏•‡∏∞ table statistics" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="primary" /></ListItemIcon>
                  <ListItemText primary="Connection pool status" />
                </ListItem>
              </List>
            </AccordionDetails>
          </Accordion>
        </Box>
      </TabPanel>

      {/* Tab 3: Query Builder */}
      <TabPanel value={tabValue} index={2}>
        <Typography variant="h4" gutterBottom color="primary" fontWeight="bold">
          üîç Visual Query Builder
        </Typography>

        <Alert severity="info" sx={{ mb: 4 }}>
          Query Builder ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á complex queries ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô code ‡πÉ‡∏ä‡πâ drag-and-drop interface
        </Alert>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üéØ ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Query ‡πÅ‡∏ö‡∏ö Visual
        </Typography>

        <Paper sx={{ p: 3, mb: 4, bgcolor: 'grey.50' }}>
          <Stack direction="row" justifyContent="space-between" alignItems="center" sx={{ mb: 2 }}>
            <Typography variant="h6">Query Builder Interface</Typography>
            <IconButton onClick={() => copyToClipboard(`// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Query ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å Visual Builder
const users = await prisma.user.findMany({
  where: {
    AND: [
      { age: { gte: 18 } },
      { isActive: true },
      {
        posts: {
          some: {
            published: true,
            createdAt: {
              gte: new Date('2024-01-01')
            }
          }
        }
      }
    ]
  },
  include: {
    posts: {
      where: { published: true },
      orderBy: { createdAt: 'desc' },
      take: 5
    },
    profile: true
  },
  orderBy: { createdAt: 'desc' },
  take: 10
})`)} size="small">
              <ContentCopy />
            </IconButton>
          </Stack>
          <Box component="pre" sx={{ 
            bgcolor: '#1e1e1e', 
            color: '#d4d4d4', 
            p: 2, 
            borderRadius: 1, 
            overflow: 'auto',
            fontSize: '0.875rem',
            fontFamily: 'Consolas, Monaco, monospace'
          }}>
{`// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Query ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å Visual Builder
const users = await prisma.user.findMany({
  where: {
    AND: [
      { age: { gte: 18 } },
      { isActive: true },
      {
        posts: {
          some: {
            published: true,
            createdAt: {
              gte: new Date('2024-01-01')
            }
          }
        }
      }
    ]
  },
  include: {
    posts: {
      where: { published: true },
      orderBy: { createdAt: 'desc' },
      take: 5
    },
    profile: true
  },
  orderBy: { createdAt: 'desc' },
  take: 10
})`}
          </Box>
        </Paper>

        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr 1fr' }, gap: 3, mb: 4 }}>
          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <Search color="primary" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Where Conditions</Typography>
              </Stack>
              <Typography variant="body2" color="text.secondary" paragraph>
                ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ö‡∏ö visual
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Drag & Drop fields" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Multiple operators" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Nested conditions" />
                </ListItem>
              </List>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <DataObject color="secondary" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Joins & Relations</Typography>
              </Stack>
              <Typography variant="body2" color="text.secondary" paragraph>
                ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ relationships ‡πÅ‡∏•‡∏∞ joins ‡∏ú‡πà‡∏≤‡∏ô GUI
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Visual join builder" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Include/select relations" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Nested relation queries" />
                </ListItem>
              </List>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <Dashboard color="warning" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Result Preview</Typography>
              </Stack>
              <Typography variant="body2" color="text.secondary" paragraph>
                ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏ö‡∏ö real-time
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Live query preview" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Execution time" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Export generated code" />
                </ListItem>
              </List>
            </CardContent>
          </Card>
        </Box>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          ‚ö° Advanced Query Features
        </Typography>

        <TableContainer component={Paper} sx={{ mb: 4 }}>
          <Table>
            <TableHead>
              <TableRow sx={{ bgcolor: 'secondary.50' }}>
                <TableCell><strong>Feature</strong></TableCell>
                <TableCell><strong>Description</strong></TableCell>
                <TableCell><strong>Use Case</strong></TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell>Aggregations</TableCell>
                <TableCell>COUNT, SUM, AVG, MIN, MAX</TableCell>
                <TableCell>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>Grouping</TableCell>
                <TableCell>GROUP BY operations</TableCell>
                <TableCell>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>Subqueries</TableCell>
                <TableCell>Nested query conditions</TableCell>
                <TableCell>Query ‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>Window Functions</TableCell>
                <TableCell>ROW_NUMBER, RANK, etc.</TableCell>
                <TableCell>‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á</TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </TableContainer>
      </TabPanel>

      {/* Tab 4: Data Seeding */}
      <TabPanel value={tabValue} index={3}>
        <Typography variant="h4" gutterBottom color="primary" fontWeight="bold">
          üå± Data Seeding - ‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        </Typography>

        <Alert severity="info" sx={{ mb: 4 }}>
          Data Seeding ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏•‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏£‡∏∑‡∏≠ development
        </Alert>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üìÑ ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Seed Script
        </Typography>

        <Paper sx={{ p: 3, mb: 4, bgcolor: 'grey.50' }}>
          <Stack direction="row" justifyContent="space-between" alignItems="center" sx={{ mb: 2 }}>
            <Typography variant="h6">prisma/seed.ts</Typography>
            <IconButton onClick={() => copyToClipboard(`import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Starting seed...')

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á users
  const users = await Promise.all([
    prisma.user.create({
      data: {
        email: 'admin@example.com',
        name: 'Admin User',
        password: await bcrypt.hash('password123', 12),
        role: 'ADMIN',
        posts: {
          create: [
            {
              title: 'Getting Started with Prisma',
              content: 'This is a comprehensive guide...',
              published: true,
            },
            {
              title: 'Advanced Prisma Techniques',
              content: 'Learn advanced patterns...',
              published: false,
            }
          ]
        }
      }
    }),
    prisma.user.create({
      data: {
        email: 'john@example.com',
        name: 'John Doe',
        password: await bcrypt.hash('password123', 12),
        role: 'USER',
        posts: {
          create: {
            title: 'My First Post',
            content: 'Hello world!',
            published: true,
          }
        }
      }
    })
  ])

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á categories
  const categories = await Promise.all([
    prisma.category.create({
      data: {
        name: 'Technology',
        description: 'Tech-related posts'
      }
    }),
    prisma.category.create({
      data: {
        name: 'Tutorial',
        description: 'Step-by-step guides'
      }
    })
  ])

  console.log('‚úÖ Seed completed')
  console.log(\`Created \${users.length} users\`)
  console.log(\`Created \${categories.length} categories\`)
}

main()
  .catch((e) => {
    console.error('‚ùå Seed failed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })`)} size="small">
              <ContentCopy />
            </IconButton>
          </Stack>
          <Box component="pre" sx={{ 
            bgcolor: '#1e1e1e', 
            color: '#d4d4d4', 
            p: 2, 
            borderRadius: 1, 
            overflow: 'auto',
            fontSize: '0.875rem',
            fontFamily: 'Consolas, Monaco, monospace'
          }}>
{`import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Starting seed...')

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á users
  const users = await Promise.all([
    prisma.user.create({
      data: {
        email: 'admin@example.com',
        name: 'Admin User',
        password: await bcrypt.hash('password123', 12),
        role: 'ADMIN',
        posts: {
          create: [
            {
              title: 'Getting Started with Prisma',
              content: 'This is a comprehensive guide...',
              published: true,
            },
            {
              title: 'Advanced Prisma Techniques',
              content: 'Learn advanced patterns...',
              published: false,
            }
          ]
        }
      }
    }),
    prisma.user.create({
      data: {
        email: 'john@example.com',
        name: 'John Doe',
        password: await bcrypt.hash('password123', 12),
        role: 'USER',
        posts: {
          create: {
            title: 'My First Post',
            content: 'Hello world!',
            published: true,
          }
        }
      }
    })
  ])

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á categories
  const categories = await Promise.all([
    prisma.category.create({
      data: {
        name: 'Technology',
        description: 'Tech-related posts'
      }
    }),
    prisma.category.create({
      data: {
        name: 'Tutorial',
        description: 'Step-by-step guides'
      }
    })
  ])

  console.log('‚úÖ Seed completed')
  console.log(\`Created \${users.length} users\`)
  console.log(\`Created \${categories.length} categories\`)
}

main()
  .catch((e) => {
    console.error('‚ùå Seed failed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })`}
          </Box>
        </Paper>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          ‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Package.json
        </Typography>

        <Paper sx={{ p: 3, mb: 4, bgcolor: 'grey.50' }}>
          <Stack direction="row" justifyContent="space-between" alignItems="center" sx={{ mb: 2 }}>
            <Typography variant="h6">package.json</Typography>
            <IconButton onClick={() => copyToClipboard(`{
  "name": "my-prisma-app",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "db:seed": "tsx prisma/seed.ts",
    "db:reset": "prisma db reset --force"
  },
  "prisma": {
    "seed": "tsx prisma/seed.ts"
  }
}`)} size="small">
              <ContentCopy />
            </IconButton>
          </Stack>
          <Box component="pre" sx={{ 
            bgcolor: '#1e1e1e', 
            color: '#d4d4d4', 
            p: 2, 
            borderRadius: 1, 
            overflow: 'auto',
            fontSize: '0.875rem',
            fontFamily: 'Consolas, Monaco, monospace'
          }}>
{`{
  "name": "my-prisma-app",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "db:seed": "tsx prisma/seed.ts",
    "db:reset": "prisma db reset --force"
  },
  "prisma": {
    "seed": "tsx prisma/seed.ts"
  }
}`}
          </Box>
        </Paper>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üöÄ ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô Seed Commands
        </Typography>

        <Paper sx={{ p: 3, mb: 4, bgcolor: 'grey.50' }}>
          <Stack direction="row" justifyContent="space-between" alignItems="center" sx={{ mb: 2 }}>
            <Typography variant="h6">Terminal Commands</Typography>
            <IconButton onClick={() => copyToClipboard(`# ‡∏£‡∏±‡∏ô seed script
npm run db:seed

# ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ npx
npx prisma db seed

# Reset database ‡πÅ‡∏•‡∏∞ seed ‡πÉ‡∏´‡∏°‡πà
npm run db:reset

# Seed ‡∏´‡∏•‡∏±‡∏á migrate
npx prisma migrate dev --name init
# Prisma ‡∏à‡∏∞‡∏£‡∏±‡∏ô seed ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á migrate

# Seed ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
npx tsx prisma/seed.ts`)} size="small">
              <ContentCopy />
            </IconButton>
          </Stack>
          <Box component="pre" sx={{ 
            bgcolor: '#1e1e1e', 
            color: '#d4d4d4', 
            p: 2, 
            borderRadius: 1, 
            overflow: 'auto',
            fontSize: '0.875rem',
            fontFamily: 'Consolas, Monaco, monospace'
          }}>
{`# ‡∏£‡∏±‡∏ô seed script
npm run db:seed

# ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ npx
npx prisma db seed

# Reset database ‡πÅ‡∏•‡∏∞ seed ‡πÉ‡∏´‡∏°‡πà
npm run db:reset

# Seed ‡∏´‡∏•‡∏±‡∏á migrate
npx prisma migrate dev --name init
# Prisma ‡∏à‡∏∞‡∏£‡∏±‡∏ô seed ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á migrate

# Seed ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
npx tsx prisma/seed.ts`}
          </Box>
        </Paper>

        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3, mb: 4 }}>
          <Card>
            <CardContent>
              <Typography variant="h6" gutterBottom color="primary">
                ‚úÖ Best Practices
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" /></ListItemIcon>
                  <ListItemText primary="‡πÉ‡∏ä‡πâ async/await ‡πÅ‡∏•‡∏∞ Promise.all" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" /></ListItemIcon>
                  <ListItemText primary="‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏à‡∏£‡∏¥‡∏á" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" /></ListItemIcon>
                  <ListItemText primary="‡πÉ‡∏ä‡πâ faker.js ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" /></ListItemIcon>
                  <ListItemText primary="Handle errors ‡πÅ‡∏•‡∏∞ cleanup" />
                </ListItem>
              </List>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Typography variant="h6" gutterBottom color="warning.main">
                ‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Warning color="warning" /></ListItemIcon>
                  <ListItemText primary="‡∏≠‡∏¢‡πà‡∏≤‡∏£‡∏±‡∏ô seed ‡πÉ‡∏ô production" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Warning color="warning" /></ListItemIcon>
                  <ListItemText primary="‡∏£‡∏∞‡∏ß‡∏±‡∏á duplicate data" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Warning color="warning" /></ListItemIcon>
                  <ListItemText primary="Test seed script ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Warning color="warning" /></ListItemIcon>
                  <ListItemText primary="Backup ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô reset" />
                </ListItem>
              </List>
            </CardContent>
          </Card>
        </Box>
      </TabPanel>

      {/* Tab 5: Introspection */}
      <TabPanel value={tabValue} index={4}>
        <Typography variant="h4" gutterBottom color="primary" fontWeight="bold">
          üîç Database Introspection
        </Typography>

        <Alert severity="info" sx={{ mb: 4 }}>
          Introspection ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á Prisma schema ‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        </Alert>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üéØ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Introspection
        </Typography>

        <Paper sx={{ p: 3, mb: 4, bgcolor: 'grey.50' }}>
          <Stack direction="row" justifyContent="space-between" alignItems="center" sx={{ mb: 2 }}>
            <Typography variant="h6">Basic Introspection</Typography>
            <IconButton onClick={() => copyToClipboard(`# ‡∏™‡∏£‡πâ‡∏≤‡∏á Prisma schema ‡∏à‡∏≤‡∏Å existing database
npx prisma db pull

# ‡∏´‡∏£‡∏∑‡∏≠ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô)
npx prisma introspect

# Generate Prisma Client ‡∏´‡∏•‡∏±‡∏á introspect
npx prisma generate

# ‡∏î‡∏π schema ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á
cat prisma/schema.prisma`)} size="small">
              <ContentCopy />
            </IconButton>
          </Stack>
          <Box component="pre" sx={{ 
            bgcolor: '#1e1e1e', 
            color: '#d4d4d4', 
            p: 2, 
            borderRadius: 1, 
            overflow: 'auto',
            fontSize: '0.875rem',
            fontFamily: 'Consolas, Monaco, monospace'
          }}>
{`# ‡∏™‡∏£‡πâ‡∏≤‡∏á Prisma schema ‡∏à‡∏≤‡∏Å existing database
npx prisma db pull

# ‡∏´‡∏£‡∏∑‡∏≠ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô)
npx prisma introspect

# Generate Prisma Client ‡∏´‡∏•‡∏±‡∏á introspect
npx prisma generate

# ‡∏î‡∏π schema ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á
cat prisma/schema.prisma`}
          </Box>
        </Paper>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£ Introspect
        </Typography>

        <Paper sx={{ p: 3, mb: 4 }}>
          <Stepper orientation="vertical" activeStep={-1}>
            <Step>
              <StepLabel>
                <Typography variant="h6">1. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Database URL</Typography>
              </StepLabel>
              <StepContent>
                <Typography>‡πÄ‡∏û‡∏¥‡πà‡∏° DATABASE_URL ‡πÉ‡∏ô .env ‡∏ó‡∏µ‡πà‡∏ä‡∏µ‡πâ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà</Typography>
                <Box component="pre" sx={{ 
                  bgcolor: '#f5f5f5', 
                  p: 1, 
                  borderRadius: 1, 
                  mt: 1,
                  fontSize: '0.875rem'
                }}>
{`DATABASE_URL="postgresql://user:password@localhost:5432/existing_db"`}
                </Box>
              </StepContent>
            </Step>

            <Step>
              <StepLabel>
                <Typography variant="h6">2. ‡∏£‡∏±‡∏ô Introspection</Typography>
              </StepLabel>
              <StepContent>
                <Typography>‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á <code>npx prisma db pull</code> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå database structure</Typography>
              </StepContent>
            </Step>

            <Step>
              <StepLabel>
                <Typography variant="h6">3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Schema</Typography>
              </StepLabel>
              <StepContent>
                <Typography>‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå prisma/schema.prisma ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö models ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á</Typography>
              </StepContent>
            </Step>

            <Step>
              <StepLabel>
                <Typography variant="h6">4. ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á Schema</Typography>
              </StepLabel>
              <StepContent>
                <Typography>‡πÄ‡∏û‡∏¥‡πà‡∏° relations, validators ‡∏´‡∏£‡∏∑‡∏≠ customizations ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô</Typography>
              </StepContent>
            </Step>

            <Step>
              <StepLabel>
                <Typography variant="h6">5. Generate Client</Typography>
              </StepLabel>
              <StepContent>
                <Typography>‡∏£‡∏±‡∏ô <code>npx prisma generate</code> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á Prisma Client</Typography>
              </StepContent>
            </Step>
          </Stepper>
        </Paper>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          ‚ö° Advanced Introspection Features
        </Typography>

        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3, mb: 4 }}>
          <Card>
            <CardContent>
              <Typography variant="h6" gutterBottom color="primary">
                üîß Customization Options
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Settings color="primary" /></ListItemIcon>
                  <ListItemText primary="Map table names to model names" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Settings color="primary" /></ListItemIcon>
                  <ListItemText primary="Configure field naming conventions" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Settings color="primary" /></ListItemIcon>
                  <ListItemText primary="Exclude specific tables" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Settings color="primary" /></ListItemIcon>
                  <ListItemText primary="Handle complex relationships" />
                </ListItem>
              </List>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Typography variant="h6" gutterBottom color="warning.main">
                ‚ö†Ô∏è Limitations
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Warning color="warning" /></ListItemIcon>
                  <ListItemText primary="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ detect ‡∏ö‡∏≤‡∏á relations" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Warning color="warning" /></ListItemIcon>
                  <ListItemText primary="Model names ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Warning color="warning" /></ListItemIcon>
                  <ListItemText primary="Missing business logic constraints" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Warning color="warning" /></ListItemIcon>
                  <ListItemText primary="‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏≠‡∏á" />
                </ListItem>
              </List>
            </CardContent>
          </Card>
        </Box>

        <Paper sx={{ p: 3, mb: 4, bgcolor: 'grey.50' }}>
          <Typography variant="h6" gutterBottom>
            ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Schema ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å Introspection
          </Typography>
          <Box component="pre" sx={{ 
            bgcolor: '#1e1e1e', 
            color: '#d4d4d4', 
            p: 2, 
            borderRadius: 1, 
            overflow: 'auto',
            fontSize: '0.875rem',
            fontFamily: 'Consolas, Monaco, monospace'
          }}>
{`// Auto-generated by Prisma introspection
model users {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  posts      posts[]

  @@map("users")
}

model posts {
  id         Int      @id @default(autoincrement())
  title      String
  content    String?
  published  Boolean  @default(false)
  author_id  Int
  created_at DateTime @default(now())
  users      users    @relation(fields: [author_id], references: [id])

  @@map("posts")
}`}
          </Box>
        </Paper>
      </TabPanel>

      {/* Tab 6: CLI Tools */}
      <TabPanel value={tabValue} index={5}>
        <Typography variant="h4" gutterBottom color="primary" fontWeight="bold">
          üõ†Ô∏è Prisma CLI Tools ‡πÅ‡∏•‡∏∞ Commands
        </Typography>

        <Alert severity="info" sx={{ mb: 4 }}>
          Prisma CLI ‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </Alert>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üìã ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
        </Typography>

        <TableContainer component={Paper} sx={{ mb: 4 }}>
          <Table>
            <TableHead>
              <TableRow sx={{ bgcolor: 'primary.50' }}>
                <TableCell><strong>Command</strong></TableCell>
                <TableCell><strong>Description</strong></TableCell>
                <TableCell><strong>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á</strong></TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell><code>prisma init</code></TableCell>
                <TableCell>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ Prisma ‡πÉ‡∏´‡∏°‡πà</TableCell>
                <TableCell>npx prisma init</TableCell>
              </TableRow>
              <TableRow>
                <TableCell><code>prisma generate</code></TableCell>
                <TableCell>‡∏™‡∏£‡πâ‡∏≤‡∏á Prisma Client</TableCell>
                <TableCell>npx prisma generate</TableCell>
              </TableRow>
              <TableRow>
                <TableCell><code>prisma db push</code></TableCell>
                <TableCell>Push schema ‡πÑ‡∏õ‡∏¢‡∏±‡∏á database</TableCell>
                <TableCell>npx prisma db push</TableCell>
              </TableRow>
              <TableRow>
                <TableCell><code>prisma db pull</code></TableCell>
                <TableCell>Pull schema ‡∏à‡∏≤‡∏Å database</TableCell>
                <TableCell>npx prisma db pull</TableCell>
              </TableRow>
              <TableRow>
                <TableCell><code>prisma studio</code></TableCell>
                <TableCell>‡πÄ‡∏õ‡∏¥‡∏î Prisma Studio</TableCell>
                <TableCell>npx prisma studio</TableCell>
              </TableRow>
              <TableRow>
                <TableCell><code>prisma migrate</code></TableCell>
                <TableCell>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ database migrations</TableCell>
                <TableCell>npx prisma migrate dev</TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </TableContainer>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üîß Migration Commands
        </Typography>

        <Paper sx={{ p: 3, mb: 4, bgcolor: 'grey.50' }}>
          <Stack direction="row" justifyContent="space-between" alignItems="center" sx={{ mb: 2 }}>
            <Typography variant="h6">Migration Commands</Typography>
            <IconButton onClick={() => copyToClipboard(`# ‡∏™‡∏£‡πâ‡∏≤‡∏á migration ‡πÉ‡∏´‡∏°‡πà
npx prisma migrate dev --name add-user-table

# Apply migrations ‡πÉ‡∏ô production
npx prisma migrate deploy

# Reset database ‡πÅ‡∏•‡∏∞ apply migrations
npx prisma migrate reset

# ‡∏î‡∏π migration status
npx prisma migrate status

# Resolve migration conflicts
npx prisma migrate resolve --rolled-back 20230101000000_migration_name

# Create migration ‡∏à‡∏≤‡∏Å schema changes
npx prisma migrate diff \\
  --from-schema-datamodel prisma/schema.prisma \\
  --to-schema-datasource prisma/schema.prisma`)} size="small">
              <ContentCopy />
            </IconButton>
          </Stack>
          <Box component="pre" sx={{ 
            bgcolor: '#1e1e1e', 
            color: '#d4d4d4', 
            p: 2, 
            borderRadius: 1, 
            overflow: 'auto',
            fontSize: '0.875rem',
            fontFamily: 'Consolas, Monaco, monospace'
          }}>
{`# ‡∏™‡∏£‡πâ‡∏≤‡∏á migration ‡πÉ‡∏´‡∏°‡πà
npx prisma migrate dev --name add-user-table

# Apply migrations ‡πÉ‡∏ô production
npx prisma migrate deploy

# Reset database ‡πÅ‡∏•‡∏∞ apply migrations
npx prisma migrate reset

# ‡∏î‡∏π migration status
npx prisma migrate status

# Resolve migration conflicts
npx prisma migrate resolve --rolled-back 20230101000000_migration_name

# Create migration ‡∏à‡∏≤‡∏Å schema changes
npx prisma migrate diff \\
  --from-schema-datamodel prisma/schema.prisma \\
  --to-schema-datasource prisma/schema.prisma`}
          </Box>
        </Paper>

        <Typography variant="h5" gutterBottom sx={{ mt: 4 }} fontWeight="bold">
          üé® Prisma Studio Features
        </Typography>

        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr 1fr' }, gap: 3, mb: 4 }}>
          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <Web color="primary" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Web Interface</Typography>
              </Stack>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ú‡πà‡∏≤‡∏ô web browser" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Dark/Light theme" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Responsive design" />
                </ListItem>
              </List>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <DataArray color="secondary" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Data Management</Typography>
              </Stack>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="CRUD operations" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Bulk operations" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Data validation" />
                </ListItem>
              </List>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Stack direction="row" alignItems="center" spacing={2} sx={{ mb: 2 }}>
                <BugReport color="warning" sx={{ fontSize: 32 }} />
                <Typography variant="h6">Development Tools</Typography>
              </Stack>
              <List dense>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Query debugging" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Schema exploration" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Check color="success" /></ListItemIcon>
                  <ListItemText primary="Relation navigation" />
                </ListItem>
              </List>
            </CardContent>
          </Card>
        </Box>

        <Alert severity="success" sx={{ mb: 3 }}>
          <Typography variant="h6" gutterBottom>üéâ ‡∏Ç‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏î‡∏µ!</Typography>
          <Typography>
            ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Prisma Studio ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏≠‡∏á Prisma ‡πÅ‡∏•‡πâ‡∏ß 
            ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û!
          </Typography>
        </Alert>

        <Box sx={{ mt: 4, p: 3, bgcolor: 'primary.50', borderRadius: 2 }}>
          <Typography variant="h6" gutterBottom color="primary">
            üìö ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ:
          </Typography>
          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 2 }}>
            <List dense>
              <ListItem>
                <ListItemIcon><CheckCircle color="primary" /></ListItemIcon>
                <ListItemText primary="‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Prisma Studio ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô" />
              </ListItem>
              <ListItem>
                <ListItemIcon><CheckCircle color="primary" /></ListItemIcon>
                <ListItemText primary="Database Browser ‡πÅ‡∏•‡∏∞ Data Explorer" />
              </ListItem>
              <ListItem>
                <ListItemIcon><CheckCircle color="primary" /></ListItemIcon>
                <ListItemText primary="Visual Query Builder" />
              </ListItem>
            </List>
            <List dense>
              <ListItem>
                <ListItemIcon><CheckCircle color="primary" /></ListItemIcon>
                <ListItemText primary="Data Seeding ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á" />
              </ListItem>
              <ListItem>
                <ListItemIcon><CheckCircle color="primary" /></ListItemIcon>
                <ListItemText primary="Database Introspection" />
              </ListItem>
              <ListItem>
                <ListItemIcon><CheckCircle color="primary" /></ListItemIcon>
                <ListItemText primary="Prisma CLI Tools ‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô" />
              </ListItem>
            </List>
          </Box>
        </Box>
      </TabPanel>
    </Container>
  );
} 