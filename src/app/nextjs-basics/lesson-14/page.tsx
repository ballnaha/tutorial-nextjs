'use client';
import {
  Container,
  Typography,
  Box,
  Paper,
  Alert,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Chip,
  Button,
  Card,
  CardContent,
  Tabs,
  Tab,
  Stack,
  Avatar,
  LinearProgress,
  CircularProgress,
  Tooltip,
} from '@mui/material';
import {
  ArrowBack,
  ArrowForward,
  CheckCircle,
  Warning,
  Error as ErrorIcon,
  Speed,
  PlayArrow,
  Lightbulb,
  Timer,
  Refresh,
  Image,
  Memory,
  TrendingUp,
  Analytics,
  Cached,
  PhotoSizeSelectActual,
  CompareArrows,
  Insights,
  CheckBox,
  Build,
  Assessment,
  Code,
} from '@mui/icons-material';
import Link from 'next/link';
import { useState } from 'react';

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;
  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`lesson-tabpanel-${index}`}
      aria-labelledby={`lesson-tab-${index}`}
      {...other}
    >
      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}
    </div>
  );
}

// Demo Components
interface PerformanceMetric {
  name: string;
  value: number;
  unit: string;
  status: 'good' | 'needs-improvement' | 'poor';
  description: string;
}

function PerformanceMetricsDemo() {
  const [metrics, setMetrics] = useState<PerformanceMetric[]>([
    { name: 'First Contentful Paint (FCP)', value: 1.2, unit: 's', status: 'good', description: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏£‡∏Å' },
    { name: 'Largest Contentful Paint (LCP)', value: 2.1, unit: 's', status: 'good', description: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å' },
    { name: 'Cumulative Layout Shift (CLS)', value: 0.08, unit: '', status: 'needs-improvement', description: '‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏≠‡∏≤‡∏ï‡πå' },
    { name: 'First Input Delay (FID)', value: 45, unit: 'ms', status: 'good', description: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡πÅ‡∏£‡∏Å' },
  ]);

  const [isOptimized, setIsOptimized] = useState(false);

  const optimizePerformance = () => {
    setIsOptimized(true);
    setMetrics([
      { name: 'First Contentful Paint (FCP)', value: 0.8, unit: 's', status: 'good', description: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏£‡∏Å' },
      { name: 'Largest Contentful Paint (LCP)', value: 1.4, unit: 's', status: 'good', description: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å' },
      { name: 'Cumulative Layout Shift (CLS)', value: 0.02, unit: '', status: 'good', description: '‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏≠‡∏≤‡∏ï‡πå' },
      { name: 'First Input Delay (FID)', value: 12, unit: 'ms', status: 'good', description: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡πÅ‡∏£‡∏Å' },
    ]);
  };

  const resetMetrics = () => {
    setIsOptimized(false);
    setMetrics([
      { name: 'First Contentful Paint (FCP)', value: 1.2, unit: 's', status: 'good', description: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏£‡∏Å' },
      { name: 'Largest Contentful Paint (LCP)', value: 2.1, unit: 's', status: 'good', description: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å' },
      { name: 'Cumulative Layout Shift (CLS)', value: 0.08, unit: '', status: 'needs-improvement', description: '‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏≠‡∏≤‡∏ï‡πå' },
      { name: 'First Input Delay (FID)', value: 45, unit: 'ms', status: 'good', description: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡πÅ‡∏£‡∏Å' },
    ]);
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'good': return 'success';
      case 'needs-improvement': return 'warning';
      case 'poor': return 'error';
      default: return 'default';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'good': return '‡∏î‡∏µ';
      case 'needs-improvement': return '‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á';
      case 'poor': return '‡∏¢‡πà‡∏≥‡πÅ‡∏¢‡πà';
      default: return '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö';
    }
  };

  return (
    <Card>
      <CardContent>
        <Typography variant="h6" sx={{ mb: 2 }}>
          üìä Web Vitals Performance Demo
        </Typography>
        
        <Box sx={{ mb: 3 }}>
          <Button
            variant="contained"
            onClick={optimizePerformance}
            disabled={isOptimized}
            startIcon={<TrendingUp />}
            sx={{ mr: 2 }}
          >
            ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
          </Button>
          <Button
            variant="outlined"
            onClick={resetMetrics}
            startIcon={<Refresh />}
          >
            ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
          </Button>
        </Box>

        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: 'repeat(2, 1fr)' }, gap: 2 }}>
          {metrics.map((metric, index) => (
            <Paper key={index} sx={{ p: 2, bgcolor: 'grey.50' }}>
              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>
                <Typography variant="subtitle2" sx={{ fontWeight: 600 }}>
                  {metric.name}
                </Typography>
                <Chip 
                  label={getStatusText(metric.status)}
                  color={getStatusColor(metric.status) as any}
                  size="small"
                />
              </Box>
              <Typography variant="h4" sx={{ fontFamily: 'monospace', mb: 1 }}>
                {metric.value}{metric.unit}
              </Typography>
              <Typography variant="caption" color="text.secondary">
                {metric.description}
              </Typography>
            </Paper>
          ))}
        </Box>

        {isOptimized && (
          <Alert severity="success" sx={{ mt: 2 }}>
            <Typography variant="body2">
              üéâ <strong>‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°!</strong> ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ‡∏ä‡∏±‡∏î! 
              ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏´‡∏•‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
            </Typography>
          </Alert>
        )}
      </CardContent>
    </Card>
  );
}

function ImageOptimizationDemo() {
  const [currentImage, setCurrentImage] = useState<'unoptimized' | 'optimized'>('unoptimized');
  const [loadingTime, setLoadingTime] = useState(0);
  const [isLoading, setIsLoading] = useState(false);

  const images = {
    unoptimized: {
      size: '2.4 MB',
      loadTime: 3200,
      format: 'PNG',
      dimensions: '4000x3000',
      description: '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á'
    },
    optimized: {
      size: '185 KB',
      loadTime: 420,
      format: 'WebP',
      dimensions: '1200x900',
      description: '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞ format ‡πÅ‡∏•‡πâ‡∏ß'
    }
  };

  const switchImage = (type: 'unoptimized' | 'optimized') => {
    setIsLoading(true);
    setLoadingTime(0);
    
    const interval = setInterval(() => {
      setLoadingTime(prev => prev + 100);
    }, 100);

    setTimeout(() => {
      clearInterval(interval);
      setCurrentImage(type);
      setIsLoading(false);
    }, images[type].loadTime);
  };

  return (
    <Card>
      <CardContent>
        <Typography variant="h6" sx={{ mb: 2 }}>
          üñºÔ∏è Image Optimization Demo
        </Typography>
        
        <Box sx={{ mb: 3 }}>
          <Button
            variant={currentImage === 'unoptimized' ? 'contained' : 'outlined'}
            onClick={() => switchImage('unoptimized')}
            disabled={isLoading}
            sx={{ mr: 2 }}
          >
            ‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
          </Button>
          <Button
            variant={currentImage === 'optimized' ? 'contained' : 'outlined'}
            onClick={() => switchImage('optimized')}
            disabled={isLoading}
            color="success"
          >
            ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
          </Button>
        </Box>

        <Paper sx={{ p: 3, mb: 2, bgcolor: 'grey.50' }}>
          <Box sx={{ textAlign: 'center', mb: 2 }}>
            {isLoading ? (
              <Box>
                <CircularProgress sx={{ mb: 2 }} />
                <Typography variant="body2" color="text.secondary">
                  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î... {loadingTime}ms
                </Typography>
              </Box>
            ) : (
              <Box>
                <PhotoSizeSelectActual 
                  sx={{ 
                    fontSize: 120, 
                    color: currentImage === 'optimized' ? 'success.main' : 'grey.400',
                    mb: 2 
                  }} 
                />
                <Typography variant="h6" sx={{ mb: 1 }}>
                  {images[currentImage].description}
                </Typography>
              </Box>
            )}
          </Box>

          <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: 2 }}>
            <Box>
              <Typography variant="body2" color="text.secondary">‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå:</Typography>
              <Typography variant="h6" sx={{ fontFamily: 'monospace' }}>
                {images[currentImage].size}
              </Typography>
            </Box>
            <Box>
              <Typography variant="body2" color="text.secondary">‡πÄ‡∏ß‡∏•‡∏≤‡πÇ‡∏´‡∏•‡∏î:</Typography>
              <Typography variant="h6" sx={{ fontFamily: 'monospace' }}>
                {images[currentImage].loadTime}ms
              </Typography>
            </Box>
            <Box>
              <Typography variant="body2" color="text.secondary">‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö:</Typography>
              <Typography variant="h6" sx={{ fontFamily: 'monospace' }}>
                {images[currentImage].format}
              </Typography>
            </Box>
            <Box>
              <Typography variant="body2" color="text.secondary">‡∏Ç‡∏ô‡∏≤‡∏î:</Typography>
              <Typography variant="h6" sx={{ fontFamily: 'monospace' }}>
                {images[currentImage].dimensions}
              </Typography>
            </Box>
          </Box>
        </Paper>

        <Alert 
          severity={currentImage === 'optimized' ? 'success' : 'warning'} 
          sx={{ mb: 2 }}
        >
          <Typography variant="body2">
            {currentImage === 'optimized' ? (
              <>
                ‚úÖ <strong>‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°!</strong> ‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÅ‡∏•‡πâ‡∏ß 
                ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏•‡∏á 92% ‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô 87%
              </>
            ) : (
              <>
                ‚ö†Ô∏è <strong>‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á:</strong> ‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏ä‡πâ‡∏≤ 
                ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô format
              </>
            )}
          </Typography>
        </Alert>
      </CardContent>
    </Card>
  );
}

export default function Lesson14Page() {
  const [activeTab, setActiveTab] = useState(0);

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setActiveTab(newValue);
  };

  return (
    <Box sx={{
      minHeight: '100vh',
      maxWidth: '100vw',
      px: { xs: 2, sm: 3, md: 4 },
      py: { xs: 2, sm: 3 },
      overflow: 'hidden',
    }}>
      {/* Header */}
      <Box sx={{ mb: { xs: 3, sm: 4 } }}>
        <Button
          startIcon={<ArrowBack />}
          component={Link}
          href="/nextjs-basics"
          sx={{ mb: 2, fontSize: { xs: '0.85rem', sm: '0.9rem' } }}
        >
          ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
        </Button>
        <Typography variant="h2" component="h1" sx={{ fontSize: { xs: '1.8rem', sm: '2.5rem', md: '3rem' }, fontWeight: 600, mb: 2, lineHeight: 1.2, display: 'flex', alignItems: 'center', gap: 2 }}>
          <Speed color="primary" sx={{ fontSize: { xs: '2.2rem', sm: '3rem' } }} />
          ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 14: Performance
        </Typography>
        <Stack direction="row" spacing={1} sx={{ flexWrap: 'wrap', gap: 1, mb: 3, '& .MuiChip-root': { fontSize: { xs: '0.75rem', sm: '0.8rem' } } }}>
          <Chip icon={<Speed />} label="Optimize" color="primary" size="small" />
          <Chip icon={<Build />} label="Tools" color="secondary" size="small" />
          <Chip icon={<Assessment />} label="Analyze" color="info" size="small" />
          <Chip icon={<Code />} label="Best Practice" color="success" size="small" />
        </Stack>
        <Alert severity="info" sx={{ mb: 3, fontSize: { xs: '0.85rem', sm: '0.9rem' } }}>
          <Typography variant="body2">
            ‚è±Ô∏è <strong>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤:</strong> 40 ‡∏ô‡∏≤‡∏ó‡∏µ | 
            üìä <strong>‡∏£‡∏∞‡∏î‡∏±‡∏ö:</strong> ‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á | 
            üéØ <strong>‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢:</strong> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ Performance & Best Practices ‡πÉ‡∏ô Next.js
          </Typography>
        </Alert>
      </Box>

      {/* Tabs */}
      <Paper sx={{ mb: { xs: 3, sm: 4 } }}>
        <Tabs
          value={activeTab}
          onChange={handleTabChange}
          variant="scrollable"
          scrollButtons="auto"
          sx={{ borderBottom: 1, borderColor: 'divider' }}
        >
          <Tab label="‚ö° Optimize" sx={{ fontSize: { xs: '0.9rem', sm: '1rem' } }} />
          <Tab label="üîß Tools" sx={{ fontSize: { xs: '0.9rem', sm: '1rem' } }} />
          <Tab label="üìä Analyze" sx={{ fontSize: { xs: '0.9rem', sm: '1rem' } }} />
          <Tab label="üí° Best Practice" sx={{ fontSize: { xs: '0.9rem', sm: '1rem' } }} />
        </Tabs>
      </Paper>

      {/* Tab Panels */}
      <TabPanel value={activeTab} index={0}>
        <Typography variant="h3" sx={{ mb: 3 }}>üí° ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏±‡∏ö Performance</Typography>
        
        {/* Why Performance Matters */}
        <Paper sx={{ p: 3, mb: 4, bgcolor: 'warning.50', border: '2px solid', borderColor: 'warning.200' }}>
          <Typography variant="h6" sx={{ mb: 2, color: 'warning.main' }}>
            ‚ö†Ô∏è ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ä‡πâ‡∏≤ = ‡πÄ‡∏™‡∏µ‡∏¢‡πÇ‡∏≠‡∏Å‡∏≤‡∏™!
          </Typography>
          
          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3 }}>
            <Box>
              <Typography variant="subtitle2" sx={{ mb: 1, color: 'warning.main' }}>üìâ ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏ï‡∏Å‡πÉ‡∏à:</Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><Timer color="warning" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText 
                    primary="1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ = ‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢ 7% conversion" 
                    secondary="‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏´‡∏≤‡∏¢‡πÑ‡∏õ!"
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon><TrendingUp color="error" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText 
                    primary="3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ = 53% ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö" 
                    secondary="‡∏ú‡∏π‡πâ‡∏Ñ‡∏ô‡πÑ‡∏°‡πà‡∏≠‡∏î‡∏ó‡∏ô‡∏£‡∏≠"
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon><ErrorIcon color="error" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText 
                    primary="Google ‡∏•‡∏î‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö SEO" 
                    secondary="‡πÄ‡∏ß‡πá‡∏ö‡∏ä‡πâ‡∏≤ = ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡πÅ‡∏¢‡πà"
                  />
                </ListItem>
              </List>
            </Box>
            
            <Box>
              <Typography variant="subtitle2" sx={{ mb: 1, color: 'success.main' }}>‚úÖ ‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏£‡πá‡∏ß = ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏µ‡∏¢‡∏ö:</Typography>
              <List dense>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText primary="‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText primary="Google ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏î‡∏µ" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText primary="‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Ñ‡πà‡∏≤ server" />
                </ListItem>
              </List>
            </Box>
          </Box>
        </Paper>

        {/* Core Web Vitals */}
        <Typography variant="h5" sx={{ mb: 2 }}>üìä Core Web Vitals (‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏´‡∏•‡∏±‡∏Å)</Typography>
        
        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: 'repeat(3, 1fr)' }, gap: 3, mb: 4 }}>
          <Card>
            <CardContent>
              <Typography variant="h6" sx={{ mb: 2, color: 'info.main', display: 'flex', alignItems: 'center', gap: 1 }}>
                <Timer color="info" /> LCP
              </Typography>
              <Typography variant="body2" sx={{ mb: 2 }}>
                <strong>Largest Contentful Paint</strong>
              </Typography>
              <Typography variant="body2" sx={{ mb: 1 }}>
                ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏£‡∏ö
              </Typography>
              <Typography variant="body2" color="success.main">
                ‚úÖ ‡∏î‡∏µ: ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 2.5s
              </Typography>
              <Typography variant="body2" color="warning.main">
                ‚ö†Ô∏è ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á: 2.5-4s
              </Typography>
              <Typography variant="body2" color="error.main">
                ‚ùå ‡πÅ‡∏¢‡πà: ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 4s
              </Typography>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Typography variant="h6" sx={{ mb: 2, color: 'warning.main', display: 'flex', alignItems: 'center', gap: 1 }}>
                <CompareArrows color="warning" /> FID/INP
              </Typography>
              <Typography variant="body2" sx={{ mb: 2 }}>
                <strong>First Input Delay</strong>
              </Typography>
              <Typography variant="body2" sx={{ mb: 1 }}>
                ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å
              </Typography>
              <Typography variant="body2" color="success.main">
                ‚úÖ ‡∏î‡∏µ: ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 100ms
              </Typography>
              <Typography variant="body2" color="warning.main">
                ‚ö†Ô∏è ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á: 100-300ms
              </Typography>
              <Typography variant="body2" color="error.main">
                ‚ùå ‡πÅ‡∏¢‡πà: ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 300ms
              </Typography>
            </CardContent>
          </Card>

          <Card>
            <CardContent>
              <Typography variant="h6" sx={{ mb: 2, color: 'error.main', display: 'flex', alignItems: 'center', gap: 1 }}>
                <Insights color="error" /> CLS
              </Typography>
              <Typography variant="body2" sx={{ mb: 2 }}>
                <strong>Cumulative Layout Shift</strong>
              </Typography>
              <Typography variant="body2" sx={{ mb: 1 }}>
                ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏≠‡∏≤‡∏ï‡πå
              </Typography>
              <Typography variant="body2" color="success.main">
                ‚úÖ ‡∏î‡∏µ: ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 0.1
              </Typography>
              <Typography variant="body2" color="warning.main">
                ‚ö†Ô∏è ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á: 0.1-0.25
              </Typography>
              <Typography variant="body2" color="error.main">
                ‚ùå ‡πÅ‡∏¢‡πà: ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0.25
              </Typography>
            </CardContent>
          </Card>
        </Box>

        {/* Performance Tools */}
        <Typography variant="h5" sx={{ mb: 2 }}>üõ†Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏±‡∏î Performance</Typography>
        
        <Paper sx={{ p: 3, mb: 4 }}>
          <Typography variant="body1" sx={{ mb: 2 }}>
            ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å:
          </Typography>
          
          <Box sx={{ p: 2, bgcolor: 'grey.100', borderRadius: 1, mb: 3 }}>
            <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace' }}>
{`# 1. Lighthouse (‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå)
- ‡πÄ‡∏õ‡∏¥‡∏î Chrome DevTools (F12)
- ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö Lighthouse
- ‡∏Ñ‡∏•‡∏¥‡∏Å "Generate report"

# 2. PageSpeed Insights (‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå)
https://pagespeed.web.dev/

# 3. Next.js Bundle Analyzer
npm install --save-dev @next/bundle-analyzer

# 4. Web Vitals ‡πÉ‡∏ô Next.js
npm install web-vitals`}
            </Typography>
          </Box>

          <Alert severity="info">
            <Typography variant="body2">
              üí° <strong>‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ:</strong> ‡∏ß‡∏±‡∏î performance ‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á
              ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
            </Typography>
          </Alert>
        </Paper>
      </TabPanel>

      <TabPanel value={activeTab} index={1}>
        <Typography variant="h3" sx={{ mb: 3 }}>üñºÔ∏è Image Optimization</Typography>
        
        <Typography variant="body1" sx={{ mb: 3 }}>
          ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ä‡πâ‡∏≤ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞!
        </Typography>

        <Typography variant="h5" sx={{ mb: 2 }}>1. Next.js Image Component</Typography>
        <Box sx={{ p: 2, bgcolor: 'grey.100', borderRadius: 1, mb: 3 }}>
          <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace' }}>
{`// ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà <img> ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏î‡πâ‡∏ß‡∏¢ Next.js Image
import Image from 'next/image';

// ‚ùå ‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤ (‡πÑ‡∏°‡πà‡∏î‡∏µ)
<img 
  src="/photo.jpg" 
  alt="Photo" 
  style={{ width: '100%', height: 'auto' }}
/>

// ‚úÖ ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà (‡∏î‡∏µ)
<Image
  src="/photo.jpg"
  alt="Photo"
  width={800}
  height={600}
  priority={true}  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
  placeholder="blur" // ‡πÅ‡∏™‡∏î‡∏á blur ‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î
  sizes="(max-width: 768px) 100vw, 50vw"
/>`}
          </Typography>
        </Box>

        <Alert severity="success" sx={{ mb: 3 }}>
          <Typography variant="body2">
            ‚ú® <strong>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:</strong> Next.js Image ‡∏à‡∏∞‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ 
            ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å format ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
          </Typography>
        </Alert>
      </TabPanel>

      <TabPanel value={activeTab} index={2}>
        <Typography variant="h3" sx={{ mb: 3 }}>‚ö° Code Splitting & Lazy Loading</Typography>
        
        <Typography variant="body1" sx={{ mb: 3 }}>
          ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡πà‡∏≠‡∏ô
        </Typography>

        <Typography variant="h5" sx={{ mb: 2 }}>1. Dynamic Imports</Typography>
        <Box sx={{ p: 2, bgcolor: 'grey.100', borderRadius: 1, mb: 3 }}>
          <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace' }}>
{`// ‡πÇ‡∏´‡∏•‡∏î component ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
import dynamic from 'next/dynamic';

// ‚ùå ‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤ (‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ)
import HeavyChart from '../components/HeavyChart';

// ‚úÖ ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà (‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ)
const HeavyChart = dynamic(() => import('../components/HeavyChart'), {
  loading: () => <p>Loading chart...</p>,
  ssr: false,
});`}
          </Typography>
        </Box>

        <Alert severity="info" sx={{ mb: 3 }}>
          <Typography variant="body2">
            üí° <strong>‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ:</strong> ‡πÉ‡∏ä‡πâ Bundle Analyzer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤ library ‡πÑ‡∏´‡∏ô‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
            ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏≥‡∏°‡∏≤ dynamic import
          </Typography>
        </Alert>
      </TabPanel>

      <TabPanel value={activeTab} index={3}>
        <Typography variant="h3" sx={{ mb: 3 }}>üóÑÔ∏è Caching Strategies</Typography>
        
        <Typography variant="body1" sx={{ mb: 3 }}>
          ‡∏Å‡∏≤‡∏£ cache ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Ñ‡πà‡∏≤ server
        </Typography>

        <Typography variant="h5" sx={{ mb: 2 }}>1. Browser Caching</Typography>
        <Box sx={{ p: 2, bgcolor: 'grey.100', borderRadius: 1, mb: 3 }}>
          <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace' }}>
{`// next.config.js - ‡∏Å‡∏≥‡∏´‡∏ô‡∏î cache headers
module.exports = {
  async headers() {
    return [
      {
        source: '/_next/static/:path*',
        headers: [
          {
            key: 'Cache-Control',
            value: 'public, max-age=31536000, immutable'
          }
        ]
      }
    ];
  }
};`}
          </Typography>
        </Box>
      </TabPanel>

      <TabPanel value={activeTab} index={4}>
        <Typography variant="h3" sx={{ mb: 3 }}>üéÆ ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</Typography>
        
        <Typography variant="body1" sx={{ mb: 3 }}>
          ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö Interactive
        </Typography>

        <Stack spacing={4}>
          <PerformanceMetricsDemo />
          <ImageOptimizationDemo />
        </Stack>

        {/* Code Comparison Section */}
        <Typography variant="h4" sx={{ mb: 3, mt: 6 }}>
          üìù ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î: ‡∏Å‡πà‡∏≠‡∏ô VS ‡∏´‡∏•‡∏±‡∏á ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
        </Typography>

        {/* Image Optimization Code Comparison */}
        <Paper sx={{ p: 3, mb: 4 }}>
          <Typography variant="h6" sx={{ mb: 2, color: 'primary.main' }}>
            üñºÔ∏è ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
          </Typography>
          
          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3 }}>
            <Box>
              <Typography variant="subtitle1" sx={{ mb: 2, color: 'error.main', fontWeight: 600 }}>
                ‚ùå ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
              </Typography>
              <Box sx={{ p: 2, bgcolor: 'error.50', borderRadius: 1, border: '1px solid', borderColor: 'error.200' }}>
                <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace', fontSize: '0.85rem' }}>
{`// ‡πÑ‡∏°‡πà‡∏î‡∏µ - ‡πÉ‡∏ä‡πâ <img> ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
function ProductCard() {
  return (
    <div>
      <img 
        src="/product-large.jpg" 
        alt="Product"
        style={{ width: '100%' }}
      />
      <h3>Product Name</h3>
    </div>
  );
}

// ‡∏õ‡∏±‡∏ç‡∏´‡∏≤:
// ‚ùå ‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏ç‡πà 5MB ‡πÇ‡∏´‡∏•‡∏î‡∏ä‡πâ‡∏≤
// ‚ùå ‡πÑ‡∏°‡πà responsive 
// ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ lazy loading
// ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ placeholder`}
                </Typography>
              </Box>
              <Alert severity="error" sx={{ mt: 2 }}>
                <Typography variant="body2">
                  <strong>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:</strong> ‡πÇ‡∏´‡∏•‡∏î‡∏ä‡πâ‡∏≤ 8-15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ, ‡πÉ‡∏ä‡πâ bandwidth ‡∏°‡∏≤‡∏Å
                </Typography>
              </Alert>
            </Box>

            <Box>
              <Typography variant="subtitle1" sx={{ mb: 2, color: 'success.main', fontWeight: 600 }}>
                ‚úÖ ‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
              </Typography>
              <Box sx={{ p: 2, bgcolor: 'success.50', borderRadius: 1, border: '1px solid', borderColor: 'success.200' }}>
                <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace', fontSize: '0.85rem' }}>
{`// ‡∏î‡∏µ - ‡πÉ‡∏ä‡πâ Next.js Image
import Image from 'next/image';

function ProductCard() {
  return (
    <div>
      <Image 
        src="/product-large.jpg" 
        alt="Product"
        width={400}
        height={300}
        placeholder="blur"
        blurDataURL="data:image/jpeg..."
        sizes="(max-width: 768px) 100vw, 400px"
        loading="lazy"
      />
      <h3>Product Name</h3>
    </div>
  );
}

// ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ:
// ‚úÖ Auto optimization -> WebP/AVIF
// ‚úÖ Responsive images
// ‚úÖ Lazy loading built-in
// ‚úÖ Blur placeholder`}
                </Typography>
              </Box>
              <Alert severity="success" sx={{ mt: 2 }}>
                <Typography variant="body2">
                  <strong>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:</strong> ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡πá‡∏ß 0.5-2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ, ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î bandwidth 80%
                </Typography>
              </Alert>
            </Box>
          </Box>
        </Paper>

        {/* Component Loading Code Comparison */}
        <Paper sx={{ p: 3, mb: 4 }}>
          <Typography variant="h6" sx={{ mb: 2, color: 'primary.main' }}>
            ‚ö° ‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î Component
          </Typography>
          
          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3 }}>
            <Box>
              <Typography variant="subtitle1" sx={{ mb: 2, color: 'error.main', fontWeight: 600 }}>
                ‚ùå ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
              </Typography>
              <Box sx={{ p: 2, bgcolor: 'error.50', borderRadius: 1, border: '1px solid', borderColor: 'error.200' }}>
                <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace', fontSize: '0.85rem' }}>
{`// ‡πÑ‡∏°‡πà‡∏î‡∏µ - ‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
import Chart from 'recharts';
import Calendar from 'react-big-calendar';
import DataTable from 'react-data-table';

function Dashboard() {
  const [showChart, setShowChart] = useState(false);
  
  return (
    <div>
      <h1>Dashboard</h1>
      {showChart && <Chart />}
      <Calendar />
      <DataTable />
    </div>
  );
}

// ‡∏õ‡∏±‡∏ç‡∏´‡∏≤:
// ‚ùå Bundle size ‡πÉ‡∏´‡∏ç‡πà 2.5MB
// ‚ùå ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏°‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
// ‚ùå First load ‡∏ä‡πâ‡∏≤`}
                </Typography>
              </Box>
              <Alert severity="error" sx={{ mt: 2 }}>
                <Typography variant="body2">
                  <strong>Bundle Size:</strong> 2.5MB, <strong>First Load:</strong> 8 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                </Typography>
              </Alert>
            </Box>

            <Box>
              <Typography variant="subtitle1" sx={{ mb: 2, color: 'success.main', fontWeight: 600 }}>
                ‚úÖ ‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
              </Typography>
              <Box sx={{ p: 2, bgcolor: 'success.50', borderRadius: 1, border: '1px solid', borderColor: 'success.200' }}>
                <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace', fontSize: '0.85rem' }}>
{`// ‡∏î‡∏µ - ‡πÉ‡∏ä‡πâ Dynamic imports
import dynamic from 'next/dynamic';

const Chart = dynamic(() => import('recharts'), {
  loading: () => <p>Loading chart...</p>,
  ssr: false
});

const Calendar = dynamic(() => import('react-big-calendar'));
const DataTable = dynamic(() => import('react-data-table'));

function Dashboard() {
  const [showChart, setShowChart] = useState(false);
  
  return (
    <div>
      <h1>Dashboard</h1>
      {showChart && <Chart />}
      <Calendar />
      <DataTable />
    </div>
  );
}

// ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ:
// ‚úÖ ‡πÅ‡∏¢‡∏Å bundle ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÜ
// ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
// ‚úÖ First load ‡πÄ‡∏£‡πá‡∏ß`}
                </Typography>
              </Box>
              <Alert severity="success" sx={{ mt: 2 }}>
                <Typography variant="body2">
                  <strong>Initial Bundle:</strong> 450KB, <strong>First Load:</strong> 1.2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                </Typography>
              </Alert>
            </Box>
          </Box>
        </Paper>

        {/* API Caching Code Comparison */}
        <Paper sx={{ p: 3, mb: 4 }}>
          <Typography variant="h6" sx={{ mb: 2, color: 'primary.main' }}>
            üóÑÔ∏è ‡∏Å‡∏≤‡∏£ Cache API
          </Typography>
          
          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3 }}>
            <Box>
              <Typography variant="subtitle1" sx={{ mb: 2, color: 'error.main', fontWeight: 600 }}>
                ‚ùå ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
              </Typography>
              <Box sx={{ p: 2, bgcolor: 'error.50', borderRadius: 1, border: '1px solid', borderColor: 'error.200' }}>
                <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace', fontSize: '0.85rem' }}>
{`// API Route - ‡πÑ‡∏°‡πà‡∏°‡∏µ cache
export async function GET() {
  const data = await db.posts.findMany();
  
  return NextResponse.json(data);
}

// ‡∏õ‡∏±‡∏ç‡∏´‡∏≤:
// ‚ùå Query database ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
// ‚ùå Response time ‡∏ä‡πâ‡∏≤ 2-5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
// ‚ùå Server load ‡∏™‡∏π‡∏á

// ‡πÉ‡∏ô Component
useEffect(() => {
  fetch('/api/posts')
    .then(res => res.json())
    .then(setData);
}, []); // ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á`}
                </Typography>
              </Box>
              <Alert severity="error" sx={{ mt: 2 }}>
                <Typography variant="body2">
                  <strong>Response Time:</strong> 3.2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ, <strong>DB Queries:</strong> 50+ ‡∏ï‡πà‡∏≠‡∏ô‡∏≤‡∏ó‡∏µ
                </Typography>
              </Alert>
            </Box>

            <Box>
              <Typography variant="subtitle1" sx={{ mb: 2, color: 'success.main', fontWeight: 600 }}>
                ‚úÖ ‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
              </Typography>
              <Box sx={{ p: 2, bgcolor: 'success.50', borderRadius: 1, border: '1px solid', borderColor: 'success.200' }}>
                <Typography variant="body2" component="pre" sx={{ fontFamily: 'monospace', fontSize: '0.85rem' }}>
{`// API Route - ‡∏°‡∏µ cache
export async function GET() {
  const data = await db.posts.findMany();
  
  return NextResponse.json(data, {
    headers: {
      'Cache-Control': 'public, s-maxage=300, stale-while-revalidate=60'
    }
  });
}

// ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ:
// ‚úÖ Cache 5 ‡∏ô‡∏≤‡∏ó‡∏µ
// ‚úÖ Response time ‡πÄ‡∏£‡πá‡∏ß 0.1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
// ‚úÖ ‡∏•‡∏î server load 90%

// ‡πÉ‡∏ô Component - ‡πÉ‡∏ä‡πâ SWR
import useSWR from 'swr';

const { data } = useSWR('/api/posts', fetcher, {
  revalidateOnFocus: false,
  refreshInterval: 300000 // 5 ‡∏ô‡∏≤‡∏ó‡∏µ
});`}
                </Typography>
              </Box>
              <Alert severity="success" sx={{ mt: 2 }}>
                <Typography variant="body2">
                  <strong>Response Time:</strong> 0.1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ, <strong>DB Queries:</strong> 5 ‡∏ï‡πà‡∏≠‡∏ô‡∏≤‡∏ó‡∏µ
                </Typography>
              </Alert>
            </Box>
          </Box>
        </Paper>

        {/* Performance Impact Summary */}
        <Paper sx={{ p: 3, mb: 4, bgcolor: 'info.50', border: '2px solid', borderColor: 'info.200' }}>
          <Typography variant="h6" sx={{ mb: 2, color: 'info.main' }}>
            üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
          </Typography>
          
          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: 'repeat(3, 1fr)' }, gap: 3 }}>
            <Card>
              <CardContent sx={{ textAlign: 'center' }}>
                <Typography variant="h4" sx={{ color: 'success.main', fontWeight: 'bold' }}>
                  87%
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  ‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
                </Typography>
                <Typography variant="caption" color="text.secondary">
                  ‡∏à‡∏≤‡∏Å 8s ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 1s
                </Typography>
              </CardContent>
            </Card>

            <Card>
              <CardContent sx={{ textAlign: 'center' }}>
                <Typography variant="h4" sx={{ color: 'warning.main', fontWeight: 'bold' }}>
                  82%
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  ‡∏•‡∏î Bundle Size
                </Typography>
                <Typography variant="caption" color="text.secondary">
                  ‡∏à‡∏≤‡∏Å 2.5MB ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 450KB
                </Typography>
              </CardContent>
            </Card>

            <Card>
              <CardContent sx={{ textAlign: 'center' }}>
                <Typography variant="h4" sx={{ color: 'error.main', fontWeight: 'bold' }}>
                  95%
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  ‡∏•‡∏î Server Load
                </Typography>
                <Typography variant="caption" color="text.secondary">
                  ‡∏à‡∏≤‡∏Å 50 ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 5 queries/min
                </Typography>
              </CardContent>
            </Card>
          </Box>

          <Alert severity="info" sx={{ mt: 3 }}>
            <Typography variant="body2">
              üí° <strong>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏£‡∏ß‡∏°:</strong> ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô 8 ‡πÄ‡∏ó‡πà‡∏≤, ‡∏Ñ‡πà‡∏≤ hosting ‡∏•‡∏î‡∏•‡∏á 60%, 
              ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô Lighthouse ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 45 ‡πÄ‡∏õ‡πá‡∏ô 95 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô, ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏≠‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô 73%
            </Typography>
          </Alert>
        </Paper>

        <Paper sx={{ p: 3, mt: 4 }}>
          <Typography variant="h6" sx={{ mb: 2 }}>
            üéØ Performance Checklist
          </Typography>
          <Typography variant="body2" sx={{ mb: 2 }}>
            ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î:
          </Typography>
          
          <List>
            <ListItem>
              <ListItemIcon><CheckBox color="success" /></ListItemIcon>
              <ListItemText primary="‡πÉ‡∏ä‡πâ Next.js Image component ‡πÅ‡∏ó‡∏ô <img> ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤" />
            </ListItem>
            <ListItem>
              <ListItemIcon><CheckBox color="success" /></ListItemIcon>
              <ListItemText primary="‡πÉ‡∏ä‡πâ Dynamic imports ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö component ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà" />
            </ListItem>
            <ListItem>
              <ListItemIcon><CheckBox color="success" /></ListItemIcon>
              <ListItemText primary="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Cache-Control headers ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°" />
            </ListItem>
            <ListItem>
              <ListItemIcon><CheckBox color="success" /></ListItemIcon>
              <ListItemText primary="‡∏ß‡∏±‡∏î Performance ‡∏î‡πâ‡∏ß‡∏¢ Lighthouse ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥" />
            </ListItem>
          </List>

          <Alert severity="success" sx={{ mt: 2 }}>
            <Typography variant="body2">
              üéâ <strong>‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢:</strong> LCP ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 2.5s, FID ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 100ms, CLS ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 0.1 
              ‡πÅ‡∏•‡∏∞ Lighthouse Score ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 90 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
            </Typography>
          </Alert>
        </Paper>
      </TabPanel>

      {/* Conclusion */}
      <Paper sx={{ p: 4, bgcolor: 'success.50', border: '2px solid', borderColor: 'success.200' }}>
        <Typography variant="h5" sx={{ mb: 2, color: 'success.main' }}>
          üéØ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏ö‡∏ö‡∏ó‡∏ó‡∏µ‡πà 14 ‡πÅ‡∏•‡πâ‡∏ß
        </Typography>
        <Typography variant="body1" sx={{ mb: 3 }}>
          ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå Next.js ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏ô‡∏±‡∏¢‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß!
          ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡πá‡∏ß ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
        </Typography>
        
        <Alert severity="success" sx={{ mb: 3 }}>
          <Typography variant="body2">
            üöÄ <strong>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:</strong> ‡∏ô‡∏≥‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏à‡∏£‡∏¥‡∏á 
            ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏î performance ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥
          </Typography>
        </Alert>
      </Paper>

      {/* Navigation */}
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: { xs: 4, sm: 6 }, flexDirection: { xs: 'column', sm: 'row' }, gap: { xs: 2, sm: 0 } }}>
        <Button
          startIcon={<ArrowBack />}
          component={Link}
          href="/nextjs-basics/lesson-13"
          variant="outlined"
          sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' }, order: { xs: 2, sm: 1 } }}
        >
          ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 13: Testing
        </Button>
        <Chip
          label="14 / 18"
          color="primary"
          variant="outlined"
          sx={{ fontSize: { xs: '0.8rem', sm: '0.85rem' }, order: { xs: 1, sm: 2 } }}
        />
        <Button
          endIcon={<ArrowForward />}
          component={Link}
          href="/nextjs-basics/lesson-15"
          variant="contained"
          color="primary"
          sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' }, order: { xs: 3, sm: 3 } }}
        >
          ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 15: Deployment
        </Button>
      </Box>
    </Box>
  );
} 