'use client';
import {
  Container,
  Typography,
  Box,
  Paper,
  Alert,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Chip,
  Button,
  Stepper,
  Step,
  StepLabel,
  StepContent,
  Card,
  CardContent,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Tabs,
  Tab,
  Divider,
} from '@mui/material';
import {
  CheckCircle,
  Code,
  PlayArrow,
  ExpandMore,
  Lightbulb,
  Warning,
  Info,
  Computer,
  CloudQueue,
  Security,
  Speed,
  Web,
  Storage as StorageIcon,
  Cloud,
  Phone,
  Visibility,
  Compare,
  ArrowBack,
  ArrowForward,
} from '@mui/icons-material';
import Link from 'next/link';
import { useState } from 'react';

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function CustomTabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`simple-tabpanel-${index}`}
      aria-labelledby={`simple-tab-${index}`}
      {...other}
    >
      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}
    </div>
  );
}

const componentComparison = [
  {
    feature: '‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô',
    server: '‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå',
    client: '‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå',
    serverColor: 'success',
    clientColor: 'info'
  },
  {
    feature: 'JavaScript Bundle',
    server: '‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á client',
    client: '‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á client',
    serverColor: 'success',
    clientColor: 'warning'
  },
  {
    feature: 'State Management',
    server: '‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö',
    client: '‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö (useState, useEffect)',
    serverColor: 'error',
    clientColor: 'success'
  },
  {
    feature: 'Event Handlers',
    server: '‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö',
    client: '‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö (onClick, onChange)',
    serverColor: 'error',
    clientColor: 'success'
  },
  {
    feature: 'Browser APIs',
    server: '‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ',
    client: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ (localStorage, window)',
    serverColor: 'error',
    clientColor: 'success'
  },
  {
    feature: 'Data Fetching',
    server: '‡πÉ‡∏ä‡πâ async/await ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á',
    client: '‡πÉ‡∏ä‡πâ useEffect + fetch',
    serverColor: 'success',
    clientColor: 'info'
  },
  {
    feature: 'SEO',
    server: '‡∏î‡∏µ‡∏°‡∏≤‡∏Å (‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå)',
    client: '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ hydration',
    serverColor: 'success',
    clientColor: 'warning'
  },
  {
    feature: 'Performance',
    server: 'Bundle ‡πÄ‡∏•‡πá‡∏Å, ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡πá‡∏ß',
    client: 'Bundle ‡πÉ‡∏´‡∏ç‡πà‡∏Å‡∏ß‡πà‡∏≤',
    serverColor: 'success',
    clientColor: 'warning'
  }
];

const useCases = {
  server: [
    {
      title: '‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API (React 19)',
      description: '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠ external API ‡∏î‡πâ‡∏ß‡∏¢ async/await ‡πÉ‡∏ô React 19',
      example: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ, ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏û‡∏£‡πâ‡∏≠‡∏° enhanced caching',
      icon: <StorageIcon />
    },
    {
      title: '‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏á‡∏ó‡∏µ‡πà',
      description: '‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ interaction ‡∏û‡∏£‡πâ‡∏≠‡∏° Static Route Indicator',
      example: '‡∏´‡∏ô‡πâ‡∏≤ About, Footer, Header (‡∏à‡∏∞‡∏°‡∏µ static indicator ‡πÉ‡∏ô dev)',
      icon: <Web />
    },
    {
      title: '‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
      description: '‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢ React 19 Server Components',
      example: '‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥, ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏î‡πâ‡∏ß‡∏¢ async functions',
      icon: <Computer />
    },
    {
      title: '‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
      description: '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ enhanced caching',
      example: 'Prisma queries, MongoDB operations (‡πÑ‡∏°‡πà cache by default ‡πÉ‡∏ô Next.js 15)',
      icon: <Cloud />
    }
  ],
  client: [
    {
      title: '‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (React 19)',
      description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ events ‡πÅ‡∏•‡∏∞ user interactions ‡∏î‡πâ‡∏ß‡∏¢ React 19 features',
      example: '‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î, forms, dropdowns ‡∏û‡∏£‡πâ‡∏≠‡∏° React 19 Actions',
      icon: <Phone />
    },
    {
      title: 'State Management (Enhanced)',
      description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á components ‡∏î‡πâ‡∏ß‡∏¢ React 19 hooks',
      example: 'useActionState, useState, useOptimistic',
      icon: <Visibility />
    },
    {
      title: 'Browser APIs',
      description: '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô browser-specific features',
      example: 'localStorage, geolocation, notifications',
      icon: <Computer />
    },
    {
      title: 'Real-time Updates',
      description: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö real-time ‡∏î‡πâ‡∏ß‡∏¢ React 19 concurrent features',
      example: 'chat applications, live feeds, streaming data',
      icon: <Speed />
    }
  ]
};

export default function Lesson3Page() {
  const [activeStep, setActiveStep] = useState(0);
  const [tabValue, setTabValue] = useState(0);

  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };

  const handleReset = () => {
    setActiveStep(0);
  };

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setTabValue(newValue);
  };

  return (
    <Container maxWidth="lg">
      {/* Header */}
      <Box sx={{ py: 4 }}>
        <Typography variant="h1" sx={{ mb: 2 }}>
          üîÑ ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 3: Server Components vs Client Components
        </Typography>
        <Typography variant="h5" color="text.secondary" sx={{ mb: 4 }}>
          ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Components ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡πÉ‡∏ô Next.js 13+
        </Typography>

        <Box sx={{ display: 'flex', gap: 2, mb: 4 }}>
          <Chip label="30 ‡∏ô‡∏≤‡∏ó‡∏µ" color="primary" />
          <Chip label="‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á" color="secondary" />
          <Chip label="‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å" color="error" />
        </Box>
      </Box>

      {/* Learning Objectives */}
      <Paper sx={{ p: 3, mb: 4, bgcolor: 'primary.light', color: 'primary.contrastText' }}>
        <Typography variant="h6" sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1 }}>
          <Lightbulb /> ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ
        </Typography>
        <List dense>
          <ListItem>
            <ListItemIcon sx={{ color: 'inherit' }}>
              <CheckCircle />
            </ListItemIcon>
            <ListItemText primary="‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Server Components ‡πÅ‡∏•‡∏∞ Client Components" />
          </ListItem>
          <ListItem>
            <ListItemIcon sx={{ color: 'inherit' }}>
              <CheckCircle />
            </ListItemIcon>
            <ListItemText primary="‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ Server Components ‡∏´‡∏£‡∏∑‡∏≠ Client Components" />
          </ListItem>
          <ListItem>
            <ListItemIcon sx={{ color: 'inherit' }}>
              <CheckCircle />
            </ListItemIcon>
            <ListItemText primary="‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ 'use client' directive ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" />
          </ListItem>
          <ListItem>
            <ListItemIcon sx={{ color: 'inherit' }}>
              <CheckCircle />
            </ListItemIcon>
            <ListItemText primary="‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏≤‡∏£ fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Server Components" />
          </ListItem>
        </List>
      </Paper>

      {/* Introduction */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" sx={{ mb: 3 }}>
          ü§î React Server Components ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?
        </Typography>
        
        <Typography variant="body1" sx={{ mb: 3, lineHeight: 1.7 }}>
          <strong>React Server Components</strong> ‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå React components ‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ 
          ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á JavaScript ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏µ bundle size ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á
        </Typography>

        <Alert severity="info" sx={{ mb: 3 }}>
          <Typography variant="body2">
            üí° <strong>‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:</strong> ‡πÉ‡∏ô Next.js 13+ App Router, components ‡πÄ‡∏õ‡πá‡∏ô Server Components ‡πÇ‡∏î‡∏¢ default 
            ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô Client Component ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° 'use client' ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
          </Typography>
        </Alert>

        {/* Visual Comparison */}
        <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 3, mb: 4 }}>
          <Paper sx={{ p: 3, flex: 1, bgcolor: 'success.light' }}>
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
              <Cloud sx={{ color: 'success.dark' }} />
              <Typography variant="h6" sx={{ color: 'success.dark' }}>
                Server Components
              </Typography>
            </Box>
            <Typography variant="body2" sx={{ mb: 2 }}>
              ‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô HTML ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
            </Typography>
            <List dense>
              <ListItem sx={{ py: 0 }}>
                <ListItemText primary="‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ JavaScript ‡∏™‡πà‡∏á‡πÑ‡∏õ client" />
              </ListItem>
              <ListItem sx={{ py: 0 }}>
                <ListItemText primary="‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á" />
              </ListItem>
              <ListItem sx={{ py: 0 }}>
                <ListItemText primary="‚úÖ SEO-friendly" />
              </ListItem>
              <ListItem sx={{ py: 0 }}>
                <ListItemText primary="‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö interactivity" />
              </ListItem>
            </List>
          </Paper>

          <Paper sx={{ p: 3, flex: 1, bgcolor: 'info.light' }}>
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
              <Computer sx={{ color: 'info.dark' }} />
              <Typography variant="h6" sx={{ color: 'info.dark' }}>
                Client Components
              </Typography>
            </Box>
            <Typography variant="body2" sx={{ mb: 2 }}>
              ‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ö‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö React components ‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
            </Typography>
            <List dense>
              <ListItem sx={{ py: 0 }}>
                <ListItemText primary="‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö interactivity ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö" />
              </ListItem>
              <ListItem sx={{ py: 0 }}>
                <ListItemText primary="‚úÖ ‡πÉ‡∏ä‡πâ React hooks ‡πÑ‡∏î‡πâ" />
              </ListItem>
              <ListItem sx={{ py: 0 }}>
                <ListItemText primary="‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á browser APIs ‡πÑ‡∏î‡πâ" />
              </ListItem>
              <ListItem sx={{ py: 0 }}>
                <ListItemText primary="‚ùå ‡∏™‡πà‡∏á JavaScript ‡πÑ‡∏õ client" />
              </ListItem>
            </List>
          </Paper>
        </Box>
      </Paper>

      {/* Detailed Comparison */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" sx={{ mb: 3 }}>
          üìä ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        </Typography>

        <TableContainer component={Paper} sx={{ mb: 3 }}>
          <Table>
            <TableHead>
              <TableRow>
                <TableCell><strong>‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥</strong></TableCell>
                <TableCell><strong>Server Components</strong></TableCell>
                <TableCell><strong>Client Components</strong></TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {componentComparison.map((item, index) => (
                <TableRow key={index}>
                  <TableCell>{item.feature}</TableCell>
                  <TableCell>
                    <Chip 
                      label={item.server} 
                      color={item.serverColor as any}
                      size="small" 
                    />
                  </TableCell>
                  <TableCell>
                    <Chip 
                      label={item.client} 
                      color={item.clientColor as any}
                      size="small" 
                    />
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>
      </Paper>

      {/* When to Use */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" sx={{ mb: 3 }}>
          üéØ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏≠‡∏±‡∏ô‡πÑ‡∏´‡∏ô?
        </Typography>

        <Tabs value={tabValue} onChange={handleTabChange} sx={{ mb: 3 }}>
          <Tab label="Server Components" />
          <Tab label="Client Components" />
          <Tab label="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö Use Cases" />
        </Tabs>

        <CustomTabPanel value={tabValue} index={0}>
          <Typography variant="h6" sx={{ mb: 3, color: 'success.main' }}>
            üñ•Ô∏è ‡πÉ‡∏ä‡πâ Server Components ‡πÄ‡∏°‡∏∑‡πà‡∏≠:
          </Typography>
          
          <Box sx={{ 
            display: 'flex', 
            flexDirection: { xs: 'column', sm: 'row' }, 
            gap: 2,
            flexWrap: 'wrap'
          }}>
            {useCases.server.map((useCase, index) => (
              <Box key={index} sx={{ flex: 1, minWidth: '250px' }}>
                <Card sx={{ height: '100%' }}>
                  <CardContent>
                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
                      <Box sx={{ color: 'success.main' }}>
                        {useCase.icon}
                      </Box>
                      <Typography variant="h6">
                        {useCase.title}
                      </Typography>
                    </Box>
                    <Typography variant="body2" sx={{ mb: 2 }}>
                      {useCase.description}
                    </Typography>
                    <Typography variant="body2" color="text.secondary">
                      <strong>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:</strong> {useCase.example}
                    </Typography>
                  </CardContent>
                </Card>
              </Box>
            ))}
          </Box>
        </CustomTabPanel>

        <CustomTabPanel value={tabValue} index={1}>
          <Typography variant="h6" sx={{ mb: 3, color: 'info.main' }}>
            üíª ‡πÉ‡∏ä‡πâ Client Components ‡πÄ‡∏°‡∏∑‡πà‡∏≠:
          </Typography>
          
          <Box sx={{ 
            display: 'flex', 
            flexDirection: { xs: 'column', sm: 'row' }, 
            gap: 2,
            flexWrap: 'wrap'
          }}>
            {useCases.client.map((useCase, index) => (
              <Box key={index} sx={{ flex: 1, minWidth: '250px' }}>
                <Card sx={{ height: '100%' }}>
                  <CardContent>
                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
                      <Box sx={{ color: 'info.main' }}>
                        {useCase.icon}
                      </Box>
                      <Typography variant="h6">
                        {useCase.title}
                      </Typography>
                    </Box>
                    <Typography variant="body2" sx={{ mb: 2 }}>
                      {useCase.description}
                    </Typography>
                    <Typography variant="body2" color="text.secondary">
                      <strong>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:</strong> {useCase.example}
                    </Typography>
                  </CardContent>
                </Card>
              </Box>
            ))}
          </Box>
        </CustomTabPanel>

        <CustomTabPanel value={tabValue} index={2}>
          <Alert severity="warning" sx={{ mb: 3 }}>
            <Typography variant="body2">
              üí° <strong>‡∏Å‡∏é‡∏á‡πà‡∏≤‡∏¢‡πÜ:</strong> ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Server Components ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏™‡∏°‡∏≠ 
              ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Client Components ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ interactivity ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
            </Typography>
          </Alert>

          <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 3 }}>
            <Paper sx={{ p: 3, flex: 1, bgcolor: 'success.light' }}>
              <Typography variant="h6" sx={{ mb: 2, color: 'success.dark' }}>
                ‚úÖ Server Components ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
              </Typography>
              <List dense>
                <ListItem sx={{ py: 0 }}>
                  <ListItemText primary="‚Ä¢ ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" />
                </ListItem>
                <ListItem sx={{ py: 0 }}>
                  <ListItemText primary="‚Ä¢ ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà" />
                </ListItem>
                <ListItem sx={{ py: 0 }}>
                  <ListItemText primary="‚Ä¢ Dashboard ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" />
                </ListItem>
                <ListItem sx={{ py: 0 }}>
                  <ListItemText primary="‚Ä¢ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥" />
                </ListItem>
              </List>
            </Paper>

            <Paper sx={{ p: 3, flex: 1, bgcolor: 'info.light' }}>
              <Typography variant="h6" sx={{ mb: 2, color: 'info.dark' }}>
                ‚úÖ Client Components ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
              </Typography>
              <List dense>
                <ListItem sx={{ py: 0 }}>
                  <ListItemText primary="‚Ä¢ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏•‡∏∞ input fields" />
                </ListItem>
                <ListItem sx={{ py: 0 }}>
                  <ListItemText primary="‚Ä¢ ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞ interactive elements" />
                </ListItem>
                <ListItem sx={{ py: 0 }}>
                  <ListItemText primary="‚Ä¢ Modal ‡πÅ‡∏•‡∏∞ dropdown" />
                </ListItem>
                <ListItem sx={{ py: 0 }}>
                  <ListItemText primary="‚Ä¢ Real-time features" />
                </ListItem>
              </List>
            </Paper>
          </Box>
        </CustomTabPanel>
      </Paper>

      {/* Hydration Section */}
      <Card sx={{ mb: 4 }}>
        <CardContent>
          <Typography variant="h4" sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
            <Speed color="primary" />
            Hydration ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤
          </Typography>

          <Alert severity="info" sx={{ mb: 3 }}>
            <Typography variant="body1" sx={{ fontWeight: 600, mb: 1 }}>
              üí° Hydration ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?
            </Typography>
            <Typography variant="body2">
              <strong>Hydration</strong> ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà Next.js ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Server-rendered HTML 
              ‡∏Å‡∏±‡∏ö Client-side JavaScript ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏°‡∏µ interactivity
            </Typography>
          </Alert>

          <Box sx={{ mb: 4 }}>
            <Typography variant="h5" sx={{ mb: 2 }}>
              üîÑ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Hydration
            </Typography>
            
            <Stepper orientation="vertical">
              <Step active>
                <StepLabel>
                  <Typography variant="h6">1. Server Rendering</Typography>
                </StepLabel>
                <StepContent>
                  <Typography variant="body2" color="text.secondary">
                    ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏à‡∏≤‡∏Å Server Components ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
                  </Typography>
                </StepContent>
              </Step>
              
              <Step active>
                <StepLabel>
                  <Typography variant="h6">2. HTML Display</Typography>
                </StepLabel>
                <StepContent>
                  <Typography variant="body2" color="text.secondary">
                    ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏™‡∏î‡∏á HTML ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏Å‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ)
                  </Typography>
                </StepContent>
              </Step>
              
              <Step active>
                <StepLabel>
                  <Typography variant="h6">3. JavaScript Loading</Typography>
                </StepLabel>
                <StepContent>
                  <Typography variant="body2" color="text.secondary">
                    ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô JavaScript ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Client Components
                  </Typography>
                </StepContent>
              </Step>
              
              <Step active>
                <StepLabel>
                  <Typography variant="h6">4. Hydration Complete</Typography>
                </StepLabel>
                <StepContent>
                  <Typography variant="body2" color="text.secondary">
                    React ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ event handlers ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå interactive
                  </Typography>
                </StepContent>
              </Step>
            </Stepper>
          </Box>

          <Box sx={{ mb: 4 }}>
            <Typography variant="h5" sx={{ mb: 2, color: 'error.main' }}>
              ‚ö†Ô∏è Hydration Errors ‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢
            </Typography>

            <Accordion>
              <AccordionSummary expandIcon={<ExpandMore />}>
                <Typography variant="h6">1. Text Content Mismatch</Typography>
              </AccordionSummary>
              <AccordionDetails>
                <Alert severity="error" sx={{ mb: 2 }}>
                  <Typography variant="body2" sx={{ fontFamily: 'monospace' }}>
                    Warning: Text content does not match. Server: "..." Client: "..."
                  </Typography>
                </Alert>
                <Typography variant="body2" sx={{ mb: 2 }}>
                  <strong>‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ö‡∏ô client
                </Typography>
                
                <Paper className="code-block" sx={{ p: 2, mb: 2 }}>
                  <Typography variant="body2" component="pre">
{`// ‚ùå ‡∏ú‡∏¥‡∏î - ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á server ‡πÅ‡∏•‡∏∞ client
function CurrentTime() {
  return <div>‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {new Date().toLocaleTimeString()}</div>
}

// ‚úÖ ‡∏ñ‡∏π‡∏Å - ‡πÉ‡∏ä‡πâ useEffect
function CurrentTime() {
  const [time, setTime] = useState('')
  
  useEffect(() => {
    setTime(new Date().toLocaleTimeString())
  }, [])
  
  return <div>‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {time || '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...'}</div>
}`}
                  </Typography>
                </Paper>
              </AccordionDetails>
            </Accordion>

            <Accordion>
              <AccordionSummary expandIcon={<ExpandMore />}>
                <Typography variant="h6">2. Browser-only APIs</Typography>
              </AccordionSummary>
              <AccordionDetails>
                <Alert severity="error" sx={{ mb: 2 }}>
                  <Typography variant="body2" sx={{ fontFamily: 'monospace' }}>
                    ReferenceError: window is not defined
                  </Typography>
                </Alert>
                
                <Paper className="code-block" sx={{ p: 2, mb: 2 }}>
                  <Typography variant="body2" component="pre">
{`// ‚ùå ‡∏ú‡∏¥‡∏î - window ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏ô server
function WindowWidth() {
  return <div>‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏ß‡πâ‡∏≤‡∏á: {window.innerWidth}px</div>
}

// ‚úÖ ‡∏ñ‡∏π‡∏Å - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ
function WindowWidth() {
  const [width, setWidth] = useState(0)
  
  useEffect(() => {
    setWidth(window.innerWidth)
    
    const handleResize = () => setWidth(window.innerWidth)
    window.addEventListener('resize', handleResize)
    
    return () => window.removeEventListener('resize', handleResize)
  }, [])
  
  return <div>‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏ß‡πâ‡∏≤‡∏á: {width || '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö...'}px</div>
}`}
                  </Typography>
                </Paper>
              </AccordionDetails>
            </Accordion>

            <Accordion>
              <AccordionSummary expandIcon={<ExpandMore />}>
                <Typography variant="h6">3. Random Values</Typography>
              </AccordionSummary>
              <AccordionDetails>
                <Paper className="code-block" sx={{ p: 2, mb: 2 }}>
                  <Typography variant="body2" component="pre">
{`// ‚ùå ‡∏ú‡∏¥‡∏î - Math.random() ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á server ‡πÅ‡∏•‡∏∞ client
function RandomColor() {
  const color = \`#\${Math.floor(Math.random() * 16777215).toString(16)}\`
  return <div style={{ color }}>‡∏™‡∏µ‡∏™‡∏∏‡πà‡∏°</div>
}

// ‚úÖ ‡∏ñ‡∏π‡∏Å - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏á hydration
function RandomColor() {
  const [color, setColor] = useState('#000000')
  
  useEffect(() => {
    const randomColor = \`#\${Math.floor(Math.random() * 16777215).toString(16)}\`
    setColor(randomColor)
  }, [])
  
  return <div style={{ color }}>‡∏™‡∏µ‡∏™‡∏∏‡πà‡∏°</div>
}`}
                  </Typography>
                </Paper>
              </AccordionDetails>
            </Accordion>
          </Box>

          <Box sx={{ mb: 4 }}>
            <Typography variant="h5" sx={{ mb: 2, color: 'success.main' }}>
              ‚úÖ ‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå Client ‡πÅ‡∏•‡∏∞ Server Components
            </Typography>

            <Alert severity="success" sx={{ mb: 3 }}>
              <Typography variant="body1" sx={{ fontWeight: 600, mb: 1 }}>
                üéØ Best Practice: ‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
              </Typography>
              <Typography variant="body2">
                ‡πÅ‡∏¢‡∏Å Server Components (page.tsx) ‡πÅ‡∏•‡∏∞ Client Components (client.tsx) 
                ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
              </Typography>
            </Alert>

            <Tabs value={tabValue} onChange={handleTabChange} sx={{ mb: 2 }}>
              <Tab label="üìÑ page.tsx (Server)" />
              <Tab label="üíª client.tsx (Client)" />
              <Tab label="üîß ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô" />
            </Tabs>

            <CustomTabPanel value={tabValue} index={0}>
              <Typography variant="h6" sx={{ mb: 2 }}>
                üìÑ app/products/page.tsx (Server Component)
              </Typography>
              <Paper className="code-block" sx={{ p: 2 }}>
                <Typography variant="body2" component="pre">
{`// Server Component - ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
import { ProductList } from './client'

// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÉ‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á useEffect)
async function getProducts() {
  const res = await fetch('https://api.example.com/products', {
    cache: 'force-cache' // Next.js 15 caching
  })
  return res.json()
}

export default async function ProductsPage() {
  // Server Component ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡πá‡∏ô async function
  const products = await getProducts()
  
  return (
    <div>
      <h1>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>
      <p>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• {products.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
      
      {/* ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Client Component */}
      <ProductList initialProducts={products} />
    </div>
  )
}

// Export metadata ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SEO
export const metadata = {
  title: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
  description: '‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤'
}`}
                </Typography>
              </Paper>
            </CustomTabPanel>

            <CustomTabPanel value={tabValue} index={1}>
              <Typography variant="h6" sx={{ mb: 2 }}>
                üíª app/products/client.tsx (Client Component)
              </Typography>
              <Paper className="code-block" sx={{ p: 2 }}>
                <Typography variant="body2" component="pre">
{`'use client'
import { useState, useEffect } from 'react'

interface Product {
  id: number
  name: string
  price: number
}

interface Props {
  initialProducts: Product[]
}

export function ProductList({ initialProducts }: Props) {
  const [products, setProducts] = useState(initialProducts)
  const [filter, setFilter] = useState('')
  const [loading, setLoading] = useState(false)

  // Client-side filtering
  const filteredProducts = products.filter(product =>
    product.name.toLowerCase().includes(filter.toLowerCase())
  )

  // Client-side data refresh
  const refreshData = async () => {
    setLoading(true)
    try {
      const res = await fetch('/api/products')
      const newProducts = await res.json()
      setProducts(newProducts)
    } catch (error) {
      console.error('Failed to refresh:', error)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div>
      {/* Interactive elements - ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Client Component */}
      <input
        type="text"
        placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤..."
        value={filter}
        onChange={(e) => setFilter(e.target.value)}
        style={{ 
          padding: '8px',
          marginBottom: '16px',
          border: '1px solid #ccc',
          borderRadius: '4px'
        }}
      />
      
      <button 
        onClick={refreshData}
        disabled={loading}
        style={{
          padding: '8px 16px',
          marginLeft: '8px',
          backgroundColor: '#007bff',
          color: 'white',
          border: 'none',
          borderRadius: '4px',
          cursor: loading ? 'not-allowed' : 'pointer'
        }}
      >
        {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...' : '‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä'}
      </button>

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå */}
      <div style={{ marginTop: '16px' }}>
        {filteredProducts.map(product => (
          <div 
            key={product.id}
            style={{
              padding: '12px',
              border: '1px solid #eee',
              marginBottom: '8px',
              borderRadius: '4px'
            }}
          >
            <h3>{product.name}</h3>
            <p>‡∏£‡∏≤‡∏Ñ‡∏≤: ‡∏ø{product.price}</p>
          </div>
        ))}
      </div>
      
      {filteredProducts.length === 0 && (
        <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
      )}
    </div>
  )
}`}
                </Typography>
              </Paper>
            </CustomTabPanel>

            <CustomTabPanel value={tabValue} index={2}>
              <Typography variant="h6" sx={{ mb: 2 }}>
                üîß ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå
              </Typography>
              
              <List>
                <ListItem>
                  <ListItemIcon>
                    <CheckCircle color="success" />
                  </ListItemIcon>
                  <ListItemText
                    primary="‡πÇ‡∏Ñ‡πâ‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢"
                    secondary="‡πÅ‡∏¢‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á server ‡πÅ‡∏•‡∏∞ client logic"
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon>
                    <CheckCircle color="success" />
                  </ListItemIcon>
                  <ListItemText
                    primary="Performance ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô"
                    secondary="Client Component ‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Server Component"
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon>
                    <CheckCircle color="success" />
                  </ListItemIcon>
                  <ListItemText
                    primary="‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏á‡πà‡∏≤‡∏¢"
                    secondary="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô"
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon>
                    <CheckCircle color="success" />
                  </ListItemIcon>
                  <ListItemText
                    primary="SEO Friendly"
                    secondary="Server Component ‡πÉ‡∏´‡πâ HTML ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö search engines"
                  />
                </ListItem>
              </List>

              <Alert severity="info" sx={{ mt: 2 }}>
                <Typography variant="body2">
                  <strong>üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö:</strong> ‡πÉ‡∏ä‡πâ Server Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• 
                  ‡∏™‡πà‡∏ß‡∏ô Client Component ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö user interactions ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
                </Typography>
              </Alert>
            </CustomTabPanel>
          </Box>

          <Box sx={{ mb: 4 }}>
            <Typography variant="h5" sx={{ mb: 2 }}>
              üõ†Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠ Debug Hydration
            </Typography>

            <Paper className="code-block" sx={{ p: 2, mb: 3 }}>
              <Typography variant="body2" component="pre">
{`// next.config.js - ‡πÄ‡∏õ‡∏¥‡∏î debug mode
/** @type {import('next').NextConfig} */
const nextConfig = {
  experimental: {
    // ‡πÅ‡∏™‡∏î‡∏á hydration errors ‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    serverComponentsExternalPackages: [],
  },
  // Development mode - ‡πÅ‡∏™‡∏î‡∏á warnings
  reactStrictMode: true,
}

module.exports = nextConfig`}
              </Typography>
            </Paper>

            <Alert severity="warning" sx={{ mb: 2 }}>
              <Typography variant="body1" sx={{ fontWeight: 600, mb: 1 }}>
                üîç ‡∏ß‡∏¥‡∏ò‡∏µ Debug Hydration Issues
              </Typography>
              <List dense>
                <ListItem>
                  <ListItemText
                    primary="1. ‡πÄ‡∏õ‡∏¥‡∏î Chrome DevTools Console"
                    secondary="‡∏î‡∏π error messages ‡∏ó‡∏µ‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ 'Warning: Text content does not match'"
                  />
                </ListItem>
                <ListItem>
                  <ListItemText
                    primary="2. ‡πÉ‡∏ä‡πâ suppressHydrationWarning"
                    secondary="‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ (‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ß‡∏•‡∏≤, random values)"
                  />
                </ListItem>
                <ListItem>
                  <ListItemText
                    primary="3. ‡πÉ‡∏ä‡πâ useEffect ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö browser-only code"
                    secondary="‡∏ß‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ browser APIs ‡πÉ‡∏ô useEffect ‡πÄ‡∏™‡∏°‡∏≠"
                  />
                </ListItem>
              </List>
            </Alert>

            <Paper className="code-block" sx={{ p: 2 }}>
              <Typography variant="body2" component="pre">
{`// suppressHydrationWarning - ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
function CurrentDateTime() {
  const [dateTime, setDateTime] = useState('')
  
  useEffect(() => {
    setDateTime(new Date().toLocaleString('th-TH'))
  }, [])
  
  return (
    <div suppressHydrationWarning>
      {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á server ‡πÅ‡∏•‡∏∞ client */}
      ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {dateTime || '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...'}
    </div>
  )
}`}
              </Typography>
            </Paper>
          </Box>
        </CardContent>
      </Card>

      {/* Best Practices */}
      <Paper sx={{ p: 4, mb: 4, bgcolor: 'warning.light' }}>
        <Typography variant="h5" sx={{ mb: 2, color: 'warning.dark' }}>
          üí° Best Practices ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
        </Typography>
        <List>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Server Components ‡πÄ‡∏™‡∏°‡∏≠"
              secondary="‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Client Components ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
            />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡πÉ‡∏ä‡πâ 'use client' ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ components ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£"
              secondary="‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î bundle size"
            />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="Server Components ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö data fetching"
              secondary="Client Components ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö user interactions"
            />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡πÉ‡∏ä‡πâ composition pattern"
              secondary="‡∏™‡πà‡∏á Client Components ‡πÄ‡∏õ‡πá‡∏ô children ‡∏Ç‡∏≠‡∏á Server Components"
            />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ browser APIs"
              secondary="‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô Client Components ‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ error handling"
            />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡πÉ‡∏ä‡πâ useEffect ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö hydration-safe code"
              secondary="‡∏ß‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î hydration mismatch ‡πÉ‡∏ô useEffect"
            />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå client.tsx ‡πÅ‡∏•‡∏∞ page.tsx"
              secondary="‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡πÅ‡∏•‡∏∞‡∏á‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡πâ‡∏î"
            />
          </ListItem>
        </List>
      </Paper>

      {/* Next Steps */}
      <Paper sx={{ p: 4, bgcolor: 'success.light', color: 'success.dark' }}>
        <Typography variant="h5" sx={{ mb: 2 }}>
          üéØ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏ö‡∏ö‡∏ó‡∏ó‡∏µ‡πà 3 ‡πÅ‡∏•‡πâ‡∏ß
        </Typography>
        <Typography variant="body1" sx={{ mb: 3 }}>
          ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Server ‡πÅ‡∏•‡∏∞ Client Components ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Hydration ‡πÅ‡∏•‡πâ‡∏ß! 
          ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á Link ‡πÅ‡∏•‡∏∞ Navigation ‡πÉ‡∏ô‡∏ö‡∏ó‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        </Typography>
        
        <Alert severity="info" sx={{ mb: 3 }}>
          <Typography variant="body2">
            üí° <strong>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ:</strong> Server vs Client Components, Hydration Process, 
            ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Hydration Errors, ‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÅ‡∏•‡∏∞ Best Practices ‡∏ï‡πà‡∏≤‡∏á‡πÜ
          </Typography>
        </Alert>

        <Alert severity="info" sx={{ mb: 3 }}>
          <Typography variant="body2">
            üí° <strong>‡∏ö‡∏ó‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:</strong> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ Link ‡πÅ‡∏•‡∏∞ Navigation ‡πÉ‡∏ô Next.js ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ
          </Typography>
        </Alert>
      </Paper>

      {/* Navigation */}
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 6 }}>
        <Button
          startIcon={<ArrowBack />}
          component={Link}
          href="/nextjs-basics/lesson-2"
          variant="outlined"
        >
          ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 2: File-based Routing
        </Button>
        
        <Chip 
          label="3 / 16"
          color="primary"
          variant="outlined"
        />
        
        <Button
          endIcon={<ArrowForward />}
          component={Link}
          href="/nextjs-basics/lesson-4"
          variant="contained"
          color="primary"
        >
          ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 4: Link ‡πÅ‡∏•‡∏∞ Navigation
        </Button>
      </Box>
    </Container>
  );
} 