'use client';
import React from 'react';
import {
  Box,
  Typography,
  Alert,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Chip,
  Button,
  Stepper,
  Step,
  StepLabel,
  StepContent,
  Card,
  CardContent,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Tabs,
  Tab,
  Stack,
} from '@mui/material';
import {
  CheckCircle,
  Code,
  PlayArrow,
  ExpandMore,
  Lightbulb,
  Warning,
  Info,
  Computer,
  CloudQueue,
  Security,
  Speed,
  Web,
  Storage as StorageIcon,
  Cloud,
  Phone,
  Visibility,
  Compare,
  ArrowBack,
  ArrowForward,
} from '@mui/icons-material';
import Link from 'next/link';
import { useState } from 'react';

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function CustomTabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`simple-tabpanel-${index}`}
      aria-labelledby={`simple-tab-${index}`}
      {...other}
    >
      {value === index && <Box sx={{ p: { xs: 2, sm: 3 } }}>{children}</Box>}
    </div>
  );
}

const componentComparison = [
  {
    feature: '‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô',
    server: '‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå',
    client: '‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå',
    serverColor: 'success',
    clientColor: 'info'
  },
  {
    feature: 'JavaScript Bundle',
    server: '‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á client',
    client: '‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á client',
    serverColor: 'success',
    clientColor: 'warning'
  },
  {
    feature: 'State Management',
    server: '‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö',
    client: '‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö (useState, useEffect)',
    serverColor: 'error',
    clientColor: 'success'
  },
  {
    feature: 'Event Handlers',
    server: '‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö',
    client: '‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö (onClick, onChange)',
    serverColor: 'error',
    clientColor: 'success'
  },
  {
    feature: 'Browser APIs',
    server: '‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ',
    client: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ (localStorage, window)',
    serverColor: 'error',
    clientColor: 'success'
  },
  {
    feature: 'Data Fetching',
    server: '‡πÉ‡∏ä‡πâ async/await ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á',
    client: '‡πÉ‡∏ä‡πâ useEffect + fetch',
    serverColor: 'success',
    clientColor: 'info'
  },
  {
    feature: 'SEO',
    server: '‡∏î‡∏µ‡∏°‡∏≤‡∏Å (‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå)',
    client: '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ hydration',
    serverColor: 'success',
    clientColor: 'warning'
  },
  {
    feature: 'Performance',
    server: 'Bundle ‡πÄ‡∏•‡πá‡∏Å, ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡πá‡∏ß',
    client: 'Bundle ‡πÉ‡∏´‡∏ç‡πà‡∏Å‡∏ß‡πà‡∏≤',
    serverColor: 'success',
    clientColor: 'warning'
  }
];

const useCases = {
  server: [
    {
      title: '‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API (React 19)',
      description: '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠ external API ‡∏î‡πâ‡∏ß‡∏¢ async/await ‡πÉ‡∏ô React 19',
      example: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ, ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏û‡∏£‡πâ‡∏≠‡∏° enhanced caching',
      icon: <StorageIcon />
    },
    {
      title: '‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏á‡∏ó‡∏µ‡πà',
      description: '‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ interaction ‡∏û‡∏£‡πâ‡∏≠‡∏° Static Route Indicator',
      example: '‡∏´‡∏ô‡πâ‡∏≤ About, Footer, Header (‡∏à‡∏∞‡∏°‡∏µ static indicator ‡πÉ‡∏ô dev)',
      icon: <Web />
    },
    {
      title: '‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
      description: '‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢ React 19 Server Components',
      example: '‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥, ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏î‡πâ‡∏ß‡∏¢ async functions',
      icon: <Computer />
    },
    {
      title: '‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
      description: '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ enhanced caching',
      example: 'Prisma queries, MongoDB operations (‡πÑ‡∏°‡πà cache by default ‡πÉ‡∏ô Next.js 15)',
      icon: <Cloud />
    }
  ],
  client: [
    {
      title: '‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (React 19)',
      description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ events ‡πÅ‡∏•‡∏∞ user interactions ‡∏î‡πâ‡∏ß‡∏¢ React 19 features',
      example: '‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î, forms, dropdowns ‡∏û‡∏£‡πâ‡∏≠‡∏° React 19 Actions',
      icon: <Phone />
    },
    {
      title: 'State Management (Enhanced)',
      description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á components ‡∏î‡πâ‡∏ß‡∏¢ React 19 hooks',
      example: 'useActionState, useState, useOptimistic',
      icon: <Visibility />
    },
    {
      title: 'Browser APIs',
      description: '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô browser-specific features',
      example: 'localStorage, geolocation, notifications',
      icon: <Computer />
    },
    {
      title: 'Real-time Updates',
      description: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö real-time ‡∏î‡πâ‡∏ß‡∏¢ React 19 concurrent features',
      example: 'chat applications, live feeds, streaming data',
      icon: <Speed />
    }
  ]
};

export default function Lesson3Page() {
  const [activeStep, setActiveStep] = useState(0);
  const [tabValue, setTabValue] = useState(0);

  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };

  const handleReset = () => {
    setActiveStep(0);
  };

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setTabValue(newValue);
  };

  return (
    <Box sx={{ 
      minHeight: '100vh',
      px: { xs: 2, sm: 3, md: 4 },
      py: { xs: 2, sm: 3 },
      maxWidth: '100vw',
      overflow: 'hidden'
    }}>
      {/* Header Section */}
      <Box sx={{ mb: { xs: 3, sm: 4 } }}>
        <Typography 
          variant="h2" 
          component="h1"
          sx={{ 
            fontSize: { xs: '1.8rem', sm: '2.5rem', md: '3rem' },
            fontWeight: 600,
            mb: 2,
            lineHeight: 1.2
          }}
        >
          ‚öõÔ∏è ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 3: Server Components vs Client Components
        </Typography>
        
        <Typography 
          variant="h6" 
          sx={{ 
            color: 'text.secondary', 
            mb: 3,
            fontSize: { xs: '1rem', sm: '1.1rem' },
            lineHeight: 1.5
          }}
        >
          ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Server Components ‡πÅ‡∏•‡∏∞ Client Components ‡πÉ‡∏ô Next.js 15 + React 19
        </Typography>

        <Stack 
          direction="row" 
          spacing={1} 
          sx={{ 
            flexWrap: 'wrap', 
            gap: 1,
            '& .MuiChip-root': {
              fontSize: { xs: '0.75rem', sm: '0.8rem' }
            }
          }}
        >
          <Chip label="35 ‡∏ô‡∏≤‡∏ó‡∏µ" color="primary" size="small" />
          <Chip label="‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á" color="secondary" size="small" />
          <Chip label="‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å" color="error" size="small" />
        </Stack>
      </Box>

      {/* Learning Objectives */}
      <Card sx={{ 
        mb: { xs: 3, sm: 4 }, 
        bgcolor: 'primary.light', 
        color: 'primary.contrastText',
        border: 'none',
        boxShadow: 1
      }}>
        <CardContent sx={{ p: { xs: 2, sm: 3 } }}>
          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>
            <Lightbulb sx={{ fontSize: { xs: 20, sm: 24 } }} />
            <Typography 
              variant="h6" 
              sx={{ 
                fontSize: { xs: '1.1rem', sm: '1.25rem' },
                fontWeight: 600
              }}
            >
              ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ
            </Typography>
          </Box>
          
          <Stack spacing={1}>
            {[
              '‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Server Components ‡πÅ‡∏•‡∏∞ Client Components',
              '‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ Server Components ‡∏´‡∏£‡∏∑‡∏≠ Client Components',
              '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Server Components ‡∏û‡∏£‡πâ‡∏≠‡∏° React 19',
              '‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á hydration ‡πÅ‡∏•‡∏∞ React 19 concurrent features'
            ].map((objective, index) => (
              <Box key={index} sx={{ display: 'flex', alignItems: 'flex-start', gap: 1 }}>
                <CheckCircle sx={{ 
                  fontSize: { xs: 16, sm: 20 }, 
                  mt: 0.5,
                  flexShrink: 0
                }} />
                <Typography 
                  variant="body2" 
                  sx={{ 
                    fontSize: { xs: '0.85rem', sm: '0.9rem' },
                    lineHeight: 1.4
                  }}
                >
                  {objective}
                </Typography>
              </Box>
            ))}
          </Stack>
        </CardContent>
      </Card>

      {/* Introduction */}
      <Card sx={{ mb: { xs: 3, sm: 4 }, boxShadow: 1 }}>
        <CardContent sx={{ p: { xs: 2, sm: 3, md: 4 } }}>
          <Typography 
            variant="h4" 
            sx={{ 
              mb: 3,
              fontSize: { xs: '1.5rem', sm: '2rem' },
              fontWeight: 600
            }}
          >
            ü§î React Server Components ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?
          </Typography>
          
          <Typography 
            variant="body1" 
            sx={{ 
              mb: 3, 
              lineHeight: 1.7,
              fontSize: { xs: '0.95rem', sm: '1rem' }
            }}
          >
            <strong>React Server Components</strong> ‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå React components ‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ 
            ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á JavaScript ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏µ bundle size ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á
          </Typography>

          <Alert severity="info" sx={{ mb: 3, fontSize: { xs: '0.85rem', sm: '0.9rem' } }}>
            üí° <strong>‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:</strong> ‡πÉ‡∏ô Next.js 15 + React 19, components ‡πÄ‡∏õ‡πá‡∏ô Server Components ‡πÇ‡∏î‡∏¢ default 
            ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô Client Component ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° 'use client' ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
          </Alert>

          {/* Visual Comparison */}
          <Stack 
            direction={{ xs: 'column', md: 'row' }} 
            spacing={2} 
            sx={{ mb: 4 }}
          >
            <Card sx={{ flex: 1, bgcolor: 'success.light', boxShadow: 1 }}>
              <CardContent sx={{ p: { xs: 2, sm: 3 } }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
                  <Cloud sx={{ 
                    color: 'success.dark',
                    fontSize: { xs: 20, sm: 24 }
                  }} />
                  <Typography 
                    variant="h6" 
                    sx={{ 
                      color: 'success.dark',
                      fontSize: { xs: '1rem', sm: '1.1rem' }
                    }}
                  >
                    Server Components
                  </Typography>
                </Box>
                <Typography 
                  variant="body2" 
                  sx={{ 
                    mb: 2,
                    fontSize: { xs: '0.85rem', sm: '0.9rem' },
                    lineHeight: 1.4
                  }}
                >
                  ‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô HTML ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
                </Typography>
                <Stack spacing={0.5}>
                  {[
                    '‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ JavaScript ‡∏™‡πà‡∏á‡πÑ‡∏õ client',
                    '‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á',
                    '‚úÖ SEO-friendly',
                    '‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö interactivity'
                  ].map((item, index) => (
                    <Typography 
                      key={index}
                      variant="body2" 
                      sx={{ fontSize: { xs: '0.8rem', sm: '0.85rem' } }}
                    >
                      {item}
                    </Typography>
                  ))}
                </Stack>
              </CardContent>
            </Card>

            <Card sx={{ flex: 1, bgcolor: 'info.light', boxShadow: 1 }}>
              <CardContent sx={{ p: { xs: 2, sm: 3 } }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
                  <Computer sx={{ 
                    color: 'info.dark',
                    fontSize: { xs: 20, sm: 24 }
                  }} />
                  <Typography 
                    variant="h6" 
                    sx={{ 
                      color: 'info.dark',
                      fontSize: { xs: '1rem', sm: '1.1rem' }
                    }}
                  >
                    Client Components
                  </Typography>
                </Box>
                <Typography 
                  variant="body2" 
                  sx={{ 
                    mb: 2,
                    fontSize: { xs: '0.85rem', sm: '0.9rem' },
                    lineHeight: 1.4
                  }}
                >
                  ‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ö‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö React components ‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
                </Typography>
                <Stack spacing={0.5}>
                  {[
                    '‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö interactivity ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö',
                    '‚úÖ ‡πÉ‡∏ä‡πâ React hooks ‡πÑ‡∏î‡πâ',
                    '‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á browser APIs ‡πÑ‡∏î‡πâ',
                    '‚ùå ‡∏™‡πà‡∏á JavaScript ‡πÑ‡∏õ client'
                  ].map((item, index) => (
                    <Typography 
                      key={index}
                      variant="body2" 
                      sx={{ fontSize: { xs: '0.8rem', sm: '0.85rem' } }}
                    >
                      {item}
                    </Typography>
                  ))}
                </Stack>
              </CardContent>
            </Card>
          </Stack>
        </CardContent>
      </Card>

      {/* Detailed Comparison */}
      <Card sx={{ mb: { xs: 3, sm: 4 }, boxShadow: 1 }}>
        <CardContent sx={{ p: { xs: 2, sm: 3, md: 4 } }}>
          <Typography 
            variant="h4" 
            sx={{ 
              mb: 3,
              fontSize: { xs: '1.5rem', sm: '2rem' },
              fontWeight: 600
            }}
          >
            üìä ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
          </Typography>

          <Card sx={{ boxShadow: 1 }}>
            <TableContainer>
              <Table size="small">
                <TableHead>
                  <TableRow>
                    <TableCell sx={{ fontSize: { xs: '0.8rem', sm: '0.9rem' } }}>
                      <strong>‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥</strong>
                    </TableCell>
                    <TableCell sx={{ fontSize: { xs: '0.8rem', sm: '0.9rem' } }}>
                      <strong>Server Components</strong>
                    </TableCell>
                    <TableCell sx={{ fontSize: { xs: '0.8rem', sm: '0.9rem' } }}>
                      <strong>Client Components</strong>
                    </TableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  {componentComparison.map((item, index) => (
                    <TableRow key={index}>
                      <TableCell sx={{ fontSize: { xs: '0.75rem', sm: '0.85rem' } }}>
                        {item.feature}
                      </TableCell>
                      <TableCell>
                        <Chip 
                          label={item.server} 
                          color={item.serverColor as any}
                          size="small" 
                          sx={{ fontSize: { xs: '0.7rem', sm: '0.75rem' } }}
                        />
                      </TableCell>
                      <TableCell>
                        <Chip 
                          label={item.client} 
                          color={item.clientColor as any}
                          size="small" 
                          sx={{ fontSize: { xs: '0.7rem', sm: '0.75rem' } }}
                        />
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </TableContainer>
          </Card>
        </CardContent>
      </Card>

      {/* When to Use */}
      <Card sx={{ mb: { xs: 3, sm: 4 }, boxShadow: 1 }}>
        <CardContent sx={{ p: { xs: 2, sm: 3, md: 4 } }}>
          <Typography 
            variant="h4" 
            sx={{ 
              mb: 3,
              fontSize: { xs: '1.5rem', sm: '2rem' },
              fontWeight: 600
            }}
          >
            üéØ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏≠‡∏±‡∏ô‡πÑ‡∏´‡∏ô?
          </Typography>

          <Tabs 
            value={tabValue} 
            onChange={handleTabChange} 
            sx={{ 
              mb: 3,
              '& .MuiTab-root': {
                fontSize: { xs: '0.8rem', sm: '0.9rem' },
                minWidth: { xs: 'auto', sm: 120 },
                px: { xs: 1, sm: 2 }
              }
            }}
            variant="scrollable"
            scrollButtons="auto"
          >
            <Tab label="Server Components" />
            <Tab label="Client Components" />
            <Tab label="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö Use Cases" />
          </Tabs>

          <CustomTabPanel value={tabValue} index={0}>
            <Typography 
              variant="h6" 
              sx={{ 
                mb: 3, 
                color: 'success.main',
                fontSize: { xs: '1.1rem', sm: '1.25rem' }
              }}
            >
              üñ•Ô∏è ‡πÉ‡∏ä‡πâ Server Components ‡πÄ‡∏°‡∏∑‡πà‡∏≠:
            </Typography>
            
            <Stack spacing={2}>
              {useCases.server.map((useCase, index) => (
                <Card key={index} sx={{ boxShadow: 1 }}>
                  <CardContent sx={{ p: { xs: 2, sm: 3 } }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
                      <Box sx={{ color: 'success.main' }}>
                        {React.cloneElement(useCase.icon, { 
                          sx: { fontSize: { xs: 20, sm: 24 } }
                        })}
                      </Box>
                      <Typography 
                        variant="h6"
                        sx={{ fontSize: { xs: '1rem', sm: '1.1rem' } }}
                      >
                        {useCase.title}
                      </Typography>
                    </Box>
                    <Typography 
                      variant="body2" 
                      sx={{ 
                        mb: 2,
                        fontSize: { xs: '0.85rem', sm: '0.9rem' },
                        lineHeight: 1.4
                      }}
                    >
                      {useCase.description}
                    </Typography>
                    <Typography 
                      variant="body2" 
                      color="text.secondary"
                      sx={{ fontSize: { xs: '0.8rem', sm: '0.85rem' } }}
                    >
                      <strong>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:</strong> {useCase.example}
                    </Typography>
                  </CardContent>
                </Card>
              ))}
            </Stack>
          </CustomTabPanel>

          <CustomTabPanel value={tabValue} index={1}>
            <Typography 
              variant="h6" 
              sx={{ 
                mb: 3, 
                color: 'info.main',
                fontSize: { xs: '1.1rem', sm: '1.25rem' }
              }}
            >
              üíª ‡πÉ‡∏ä‡πâ Client Components ‡πÄ‡∏°‡∏∑‡πà‡∏≠:
            </Typography>
            
            <Stack spacing={2}>
              {useCases.client.map((useCase, index) => (
                <Card key={index} sx={{ boxShadow: 1 }}>
                  <CardContent sx={{ p: { xs: 2, sm: 3 } }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
                      <Box sx={{ color: 'info.main' }}>
                        {React.cloneElement(useCase.icon, { 
                          sx: { fontSize: { xs: 20, sm: 24 } }
                        })}
                      </Box>
                      <Typography 
                        variant="h6"
                        sx={{ fontSize: { xs: '1rem', sm: '1.1rem' } }}
                      >
                        {useCase.title}
                      </Typography>
                    </Box>
                    <Typography 
                      variant="body2" 
                      sx={{ 
                        mb: 2,
                        fontSize: { xs: '0.85rem', sm: '0.9rem' },
                        lineHeight: 1.4
                      }}
                    >
                      {useCase.description}
                    </Typography>
                    <Typography 
                      variant="body2" 
                      color="text.secondary"
                      sx={{ fontSize: { xs: '0.8rem', sm: '0.85rem' } }}
                    >
                      <strong>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:</strong> {useCase.example}
                    </Typography>
                  </CardContent>
                </Card>
              ))}
            </Stack>
          </CustomTabPanel>

          <CustomTabPanel value={tabValue} index={2}>
            <Typography 
              variant="h6" 
              sx={{ 
                mb: 3,
                fontSize: { xs: '1.1rem', sm: '1.25rem' }
              }}
            >
              üîÑ ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö Use Cases
            </Typography>
            
            <Stack 
              direction={{ xs: 'column', md: 'row' }} 
              spacing={2}
            >
              <Card sx={{ flex: 1, bgcolor: 'success.light', boxShadow: 1 }}>
                <CardContent sx={{ p: { xs: 2, sm: 3 } }}>
                  <Typography 
                    variant="h6" 
                    sx={{ 
                      mb: 2, 
                      color: 'success.dark',
                      fontSize: { xs: '1rem', sm: '1.1rem' }
                    }}
                  >
                    ‚úÖ Server Components ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
                  </Typography>
                  <Stack spacing={0.5}>
                    {[
                      '‚Ä¢ ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
                      '‚Ä¢ ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà',
                      '‚Ä¢ Dashboard ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
                      '‚Ä¢ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥'
                    ].map((item, index) => (
                      <Typography 
                        key={index}
                        variant="body2" 
                        sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' } }}
                      >
                        {item}
                      </Typography>
                    ))}
                  </Stack>
                </CardContent>
              </Card>

              <Card sx={{ flex: 1, bgcolor: 'info.light', boxShadow: 1 }}>
                <CardContent sx={{ p: { xs: 2, sm: 3 } }}>
                  <Typography 
                    variant="h6" 
                    sx={{ 
                      mb: 2, 
                      color: 'info.dark',
                      fontSize: { xs: '1rem', sm: '1.1rem' }
                    }}
                  >
                    ‚úÖ Client Components ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
                  </Typography>
                  <Stack spacing={0.5}>
                    {[
                      '‚Ä¢ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏•‡∏∞ input fields',
                      '‚Ä¢ ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞ interactive elements',
                      '‚Ä¢ Modal ‡πÅ‡∏•‡∏∞ dropdown',
                      '‚Ä¢ Real-time features'
                    ].map((item, index) => (
                      <Typography 
                        key={index}
                        variant="body2" 
                        sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' } }}
                      >
                        {item}
                      </Typography>
                    ))}
                  </Stack>
                </CardContent>
              </Card>
            </Stack>
          </CustomTabPanel>
        </CardContent>
      </Card>

      {/* Hydration Section */}
      <Card sx={{ mb: { xs: 3, sm: 4 }, boxShadow: 1 }}>
        <CardContent sx={{ p: { xs: 2, sm: 3, md: 4 } }}>
          <Typography 
            variant="h4" 
            sx={{ 
              mb: 3, 
              display: 'flex', 
              alignItems: 'center', 
              gap: 1,
              fontSize: { xs: '1.5rem', sm: '2rem' },
              fontWeight: 600
            }}
          >
            <Speed 
              color="primary" 
              sx={{ fontSize: { xs: 20, sm: 24 } }}
            />
            Hydration ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤
          </Typography>

          <Alert severity="info" sx={{ mb: 3, fontSize: { xs: '0.85rem', sm: '0.9rem' } }}>
            <Typography 
              variant="body1" 
              sx={{ 
                fontWeight: 600, 
                mb: 1,
                fontSize: { xs: '0.9rem', sm: '1rem' }
              }}
            >
              üí° Hydration ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?
            </Typography>
            <Typography 
              variant="body2"
              sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' } }}
            >
              <strong>Hydration</strong> ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà Next.js ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Server-rendered HTML 
              ‡∏Å‡∏±‡∏ö Client-side JavaScript ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏°‡∏µ interactivity
            </Typography>
          </Alert>

          <Box sx={{ mb: 4 }}>
            <Typography 
              variant="h5" 
              sx={{ 
                mb: 2,
                fontSize: { xs: '1.3rem', sm: '1.5rem' },
                fontWeight: 600
              }}
            >
              üîÑ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Hydration
            </Typography>
            
            <Stepper 
              orientation="vertical"
              sx={{
                '& .MuiStepLabel-label': {
                  fontSize: { xs: '0.9rem', sm: '1rem' }
                }
              }}
            >
              {[
                {
                  title: '1. Server Rendering',
                  description: '‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏à‡∏≤‡∏Å Server Components ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå'
                },
                {
                  title: '2. HTML Display',
                  description: '‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏™‡∏î‡∏á HTML ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏Å‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ)'
                },
                {
                  title: '3. JavaScript Loading',
                  description: '‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô JavaScript ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Client Components'
                },
                {
                  title: '4. Hydration Complete',
                  description: 'React ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ event handlers ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå interactive'
                }
              ].map((step, index) => (
                <Step key={index} active>
                  <StepLabel>
                    <Typography 
                      variant="h6"
                      sx={{ fontSize: { xs: '1rem', sm: '1.1rem' } }}
                    >
                      {step.title}
                    </Typography>
                  </StepLabel>
                  <StepContent>
                    <Typography 
                      variant="body2" 
                      color="text.secondary"
                      sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' } }}
                    >
                      {step.description}
                    </Typography>
                  </StepContent>
                </Step>
              ))}
            </Stepper>
          </Box>

          <Box sx={{ mb: 4 }}>
            <Typography 
              variant="h5" 
              sx={{ 
                mb: 2, 
                color: 'error.main',
                fontSize: { xs: '1.3rem', sm: '1.5rem' },
                fontWeight: 600
              }}
            >
              ‚ö†Ô∏è Hydration Errors ‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢
            </Typography>

            <Stack spacing={1.5}>
              <Accordion sx={{ boxShadow: 1 }}>
                <AccordionSummary 
                  expandIcon={<ExpandMore />}
                  sx={{ 
                    '& .MuiAccordionSummary-content': {
                      margin: { xs: '8px 0', sm: '12px 0' }
                    }
                  }}
                >
                  <Typography 
                    variant="h6"
                    sx={{ fontSize: { xs: '1rem', sm: '1.1rem' } }}
                  >
                    1. Text Content Mismatch
                  </Typography>
                </AccordionSummary>
                <AccordionDetails sx={{ pt: 0 }}>
                  <Alert severity="error" sx={{ mb: 2, fontSize: { xs: '0.8rem', sm: '0.85rem' } }}>
                    Warning: Text content does not match. Server: "..." Client: "..."
                  </Alert>
                  <Typography 
                    variant="body2" 
                    sx={{ 
                      mb: 2,
                      fontSize: { xs: '0.85rem', sm: '0.9rem' }
                    }}
                  >
                    <strong>‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ö‡∏ô client
                  </Typography>
                  
                  <Card className="code-block" sx={{ mb: 2, boxShadow: 1 }}>
                    <CardContent sx={{ p: { xs: 1.5, sm: 2 } }}>
                      <Typography 
                        component="pre" 
                        sx={{ 
                          fontFamily: 'monospace',
                          fontSize: { xs: '0.7rem', sm: '0.8rem' },
                          lineHeight: 1.4,
                          margin: 0,
                          overflow: 'auto'
                        }}
                      >
{`// ‚ùå ‡∏ú‡∏¥‡∏î - ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á server ‡πÅ‡∏•‡∏∞ client
function CurrentTime() {
  return <div>‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {new Date().toLocaleTimeString()}</div>
}

// ‚úÖ ‡∏ñ‡∏π‡∏Å - ‡πÉ‡∏ä‡πâ useEffect
function CurrentTime() {
  const [time, setTime] = useState('')
  
  useEffect(() => {
    setTime(new Date().toLocaleTimeString())
  }, [])
  
  return <div>‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {time || '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...'}</div>
}`}
                      </Typography>
                    </CardContent>
                  </Card>
                </AccordionDetails>
              </Accordion>

              <Accordion sx={{ boxShadow: 1 }}>
                <AccordionSummary 
                  expandIcon={<ExpandMore />}
                  sx={{ 
                    '& .MuiAccordionSummary-content': {
                      margin: { xs: '8px 0', sm: '12px 0' }
                    }
                  }}
                >
                  <Typography 
                    variant="h6"
                    sx={{ fontSize: { xs: '1rem', sm: '1.1rem' } }}
                  >
                    2. Browser-only APIs
                  </Typography>
                </AccordionSummary>
                <AccordionDetails sx={{ pt: 0 }}>
                  <Alert severity="error" sx={{ mb: 2, fontSize: { xs: '0.8rem', sm: '0.85rem' } }}>
                    ReferenceError: window is not defined
                  </Alert>
                  
                  <Card className="code-block" sx={{ mb: 2, boxShadow: 1 }}>
                    <CardContent sx={{ p: { xs: 1.5, sm: 2 } }}>
                      <Typography 
                        component="pre" 
                        sx={{ 
                          fontFamily: 'monospace',
                          fontSize: { xs: '0.7rem', sm: '0.8rem' },
                          lineHeight: 1.4,
                          margin: 0,
                          overflow: 'auto'
                        }}
                      >
{`// ‚ùå ‡∏ú‡∏¥‡∏î - window ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏ô server
function WindowWidth() {
  return <div>‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏ß‡πâ‡∏≤‡∏á: {window.innerWidth}px</div>
}

// ‚úÖ ‡∏ñ‡∏π‡∏Å - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ
function WindowWidth() {
  const [width, setWidth] = useState(0)
  
  useEffect(() => {
    setWidth(window.innerWidth)
    
    const handleResize = () => setWidth(window.innerWidth)
    window.addEventListener('resize', handleResize)
    
    return () => window.removeEventListener('resize', handleResize)
  }, [])
  
  return <div>‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏ß‡πâ‡∏≤‡∏á: {width || '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö...'}px</div>
}`}
                      </Typography>
                    </CardContent>
                  </Card>
                </AccordionDetails>
              </Accordion>

              <Accordion sx={{ boxShadow: 1 }}>
                <AccordionSummary 
                  expandIcon={<ExpandMore />}
                  sx={{ 
                    '& .MuiAccordionSummary-content': {
                      margin: { xs: '8px 0', sm: '12px 0' }
                    }
                  }}
                >
                  <Typography 
                    variant="h6"
                    sx={{ fontSize: { xs: '1rem', sm: '1.1rem' } }}
                  >
                    3. Random Values
                  </Typography>
                </AccordionSummary>
                <AccordionDetails sx={{ pt: 0 }}>
                  <Card className="code-block" sx={{ mb: 2, boxShadow: 1 }}>
                    <CardContent sx={{ p: { xs: 1.5, sm: 2 } }}>
                      <Typography 
                        component="pre" 
                        sx={{ 
                          fontFamily: 'monospace',
                          fontSize: { xs: '0.7rem', sm: '0.8rem' },
                          lineHeight: 1.4,
                          margin: 0,
                          overflow: 'auto'
                        }}
                      >
{`// ‚ùå ‡∏ú‡∏¥‡∏î - Math.random() ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á server ‡πÅ‡∏•‡∏∞ client
function RandomColor() {
  const color = \`#\${Math.floor(Math.random() * 16777215).toString(16)}\`
  return <div style={{ color }}>‡∏™‡∏µ‡∏™‡∏∏‡πà‡∏°</div>
}

// ‚úÖ ‡∏ñ‡∏π‡∏Å - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏á hydration
function RandomColor() {
  const [color, setColor] = useState('#000000')
  
  useEffect(() => {
    const randomColor = \`#\${Math.floor(Math.random() * 16777215).toString(16)}\`
    setColor(randomColor)
  }, [])
  
  return <div style={{ color }}>‡∏™‡∏µ‡∏™‡∏∏‡πà‡∏°</div>
}`}
                      </Typography>
                    </CardContent>
                  </Card>
                </AccordionDetails>
              </Accordion>
            </Stack>
          </Box>
        </CardContent>
      </Card>

      {/* Best Practices */}
      <Card sx={{ 
        mb: { xs: 3, sm: 4 }, 
        bgcolor: 'warning.light',
        boxShadow: 1
      }}>
        <CardContent sx={{ p: { xs: 2, sm: 3, md: 4 } }}>
          <Typography 
            variant="h5" 
            sx={{ 
              mb: 2, 
              color: 'warning.dark',
              fontSize: { xs: '1.3rem', sm: '1.5rem' },
              fontWeight: 600
            }}
          >
            üí° Best Practices ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
          </Typography>
          
          <Stack spacing={1.5}>
            {[
              '‡πÉ‡∏ä‡πâ Server Components ‡πÄ‡∏õ‡πá‡∏ô default ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Client ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô',
              '‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå Server ‡πÅ‡∏•‡∏∞ Client Components ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô',
              '‡πÉ‡∏ä‡πâ dynamic imports ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Client Components ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
              '‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ browser APIs ‡πÉ‡∏ô Server Components',
              '‡πÉ‡∏ä‡πâ Suspense boundaries ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö loading states ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô'
            ].map((practice, index) => (
              <Box key={index} sx={{ display: 'flex', alignItems: 'flex-start', gap: 1 }}>
                <CheckCircle 
                  color="success" 
                  sx={{ 
                    fontSize: { xs: 16, sm: 20 }, 
                    mt: 0.5,
                    flexShrink: 0
                  }} 
                />
                <Typography 
                  variant="body2" 
                  sx={{ 
                    fontSize: { xs: '0.85rem', sm: '0.9rem' },
                    lineHeight: 1.4
                  }}
                >
                  {practice}
                </Typography>
              </Box>
            ))}
          </Stack>
        </CardContent>
      </Card>

      {/* Summary */}
      <Card sx={{ 
        mb: { xs: 3, sm: 4 }, 
        bgcolor: 'success.light', 
        color: 'success.dark',
        boxShadow: 1
      }}>
        <CardContent sx={{ p: { xs: 2, sm: 3, md: 4 } }}>
          <Typography 
            variant="h5" 
            sx={{ 
              mb: 2,
              fontSize: { xs: '1.3rem', sm: '1.5rem' },
              fontWeight: 600
            }}
          >
            üéØ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏ö‡∏ö‡∏ó‡∏ó‡∏µ‡πà 3 ‡πÅ‡∏•‡πâ‡∏ß
          </Typography>
          
          <Typography 
            variant="body1" 
            sx={{ 
              mb: 3,
              fontSize: { xs: '0.9rem', sm: '1rem' },
              lineHeight: 1.5
            }}
          >
            ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Server Components ‡πÅ‡∏•‡∏∞ Client Components ‡πÅ‡∏•‡πâ‡∏ß! 
            ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á Data Fetching ‡πÅ‡∏•‡∏∞ Caching ‡πÉ‡∏ô‡∏ö‡∏ó‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
          </Typography>
          
          <Alert 
            severity="info" 
            sx={{ 
              mb: 3,
              fontSize: { xs: '0.8rem', sm: '0.85rem' }
            }}
          >
            üí° <strong>‡∏ö‡∏ó‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:</strong> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á Data Fetching, Caching ‡πÅ‡∏•‡∏∞ Server Actions 
            ‡πÉ‡∏ô Next.js 15 ‡∏û‡∏£‡πâ‡∏≠‡∏° React 19 features
          </Alert>
        </CardContent>
      </Card>

      {/* Navigation */}
      <Box sx={{ 
        display: 'flex', 
        justifyContent: 'space-between', 
        alignItems: 'center',
        flexDirection: { xs: 'column', sm: 'row' },
        gap: { xs: 2, sm: 0 }
      }}>
        <Button
          startIcon={<ArrowBack />}
          component={Link}
          href="/nextjs-basics/lesson-2"
          variant="outlined"
          size="small"
          sx={{ fontSize: { xs: '0.8rem', sm: '0.9rem' } }}
        >
          ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 2
        </Button>
        
        <Chip 
          label="3 / 18"
          color="primary"
          variant="outlined"
          size="small"
        />

        <Button
          endIcon={<ArrowForward />}
          component={Link}
          href="/nextjs-basics/lesson-4"
          variant="contained"
          size="small"
          sx={{ fontSize: { xs: '0.8rem', sm: '0.9rem' } }}
        >
          ‡∏ö‡∏ó‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        </Button>
      </Box>
    </Box>
  );
} 