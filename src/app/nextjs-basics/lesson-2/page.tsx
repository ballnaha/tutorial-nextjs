'use client';
import {
  Container,
  Typography,
  Box,
  Paper,
  Alert,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Chip,
  Divider,
  Grid,
  Button,
  Stepper,
  Step,
  StepLabel,
  StepContent,
  Card,
  CardContent,
  CardActions,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Tabs,
  Tab,
} from '@mui/material';
import {
  CheckCircle,
  Code,
  Folder,
  FolderOpen,
  PlayArrow,
  ExpandMore,
  Lightbulb,
  Warning,
  Info,
  CompareArrows,
  Settings,
  Route,
  Dashboard,
  Article,
  Person,
  ShoppingCart,
  Web,
  FilePresent,
  Build,
  ArrowBack,
  ArrowForward,
} from '@mui/icons-material';
import Link from 'next/link';
import { useState } from 'react';

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function CustomTabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`simple-tabpanel-${index}`}
      aria-labelledby={`simple-tab-${index}`}
      {...other}
    >
      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}
    </div>
  );
}

const routingExamples = [
  {
    type: 'Static Route',
    path: 'app/about/page.tsx',
    url: '/about',
    description: '‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏á‡∏ó‡∏µ‡πà ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡πÑ‡∏ü‡∏•‡πå page.tsx ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå (‡∏à‡∏∞‡∏°‡∏µ Static Route Indicator ‡πÉ‡∏ô Next.js 15)',
    code: `// app/about/page.tsx
export default function AboutPage() {
  return (
    <div>
      <h1>‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤</h1>
      <p>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤</p>
    </div>
  );
}`
  },
  {
    type: 'Dynamic Route',
    path: 'app/blog/[slug]/page.tsx',
    url: '/blog/my-first-post',
    description: 'Route ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏ö‡∏ö‡πÑ‡∏î‡∏ô‡∏≤‡∏°‡∏¥‡∏Å ‡πÉ‡∏ô Next.js 15 params ‡πÄ‡∏õ‡πá‡∏ô async',
    code: `// app/blog/[slug]/page.tsx
interface Props {
  params: Promise<{ slug: string }>;
}

export default async function BlogPost({ params }: Props) {
  const { slug } = await params;
  
  return (
    <div>
      <h1>‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°: {slug}</h1>
      <p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°...</p>
    </div>
  );
}`
  },
  {
    type: 'Nested Route',
    path: 'app/blog/category/[id]/page.tsx',
    url: '/blog/category/tech',
    description: 'Route ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏∞‡∏î‡∏±‡∏ö ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô (Next.js 15 async params)',
    code: `// app/blog/category/[id]/page.tsx
interface Props {
  params: Promise<{ id: string }>;
}

export default async function CategoryPage({ params }: Props) {
  const { id } = await params;
  
  return (
    <div>
      <h1>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {id}</h1>
      <p>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ</p>
    </div>
  );
}`
  },
  {
    type: 'Catch-all Route',
    path: 'app/docs/[...slug]/page.tsx',
    url: '/docs/api/users/create',
    description: 'Route ‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏ö‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏∞‡∏î‡∏±‡∏ö ‡πÉ‡∏ä‡πâ [...slug] (Next.js 15 async params)',
    code: `// app/docs/[...slug]/page.tsx
interface Props {
  params: Promise<{ slug: string[] }>;
}

export default async function DocsPage({ params }: Props) {
  const { slug } = await params;
  const path = slug.join('/');
  
  return (
    <div>
      <h1>‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£: {path}</h1>
      <p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£...</p>
    </div>
  );
}`
  }
];

const routeGroups = [
  {
    name: '(marketing)',
    description: '‡∏Å‡∏•‡∏∏‡πà‡∏° routes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ marketing ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠ URL',
    structure: [
      'app/(marketing)/about/page.tsx ‚Üí /about',
      'app/(marketing)/pricing/page.tsx ‚Üí /pricing',
      'app/(marketing)/contact/page.tsx ‚Üí /contact'
    ]
  },
  {
    name: '(auth)',
    description: '‡∏Å‡∏•‡∏∏‡πà‡∏° routes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö authentication',
    structure: [
      'app/(auth)/login/page.tsx ‚Üí /login',
      'app/(auth)/register/page.tsx ‚Üí /register',
      'app/(auth)/forgot-password/page.tsx ‚Üí /forgot-password'
    ]
  },
  {
    name: '(dashboard)',
    description: '‡∏Å‡∏•‡∏∏‡πà‡∏° routes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ dashboard',
    structure: [
      'app/(dashboard)/admin/page.tsx ‚Üí /admin',
      'app/(dashboard)/settings/page.tsx ‚Üí /settings',
      'app/(dashboard)/profile/page.tsx ‚Üí /profile'
    ]
  }
];

const specialFiles = [
  {
    file: 'layout.tsx',
    description: 'Layout ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö routes ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ô‡∏±‡πâ‡∏ô‡πÜ',
    icon: <Dashboard />,
    color: 'primary'
  },
  {
    file: 'page.tsx',
    description: '‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á route ‡∏ô‡∏±‡πâ‡∏ô‡πÜ',
    icon: <Article />,
    color: 'secondary'
  },
  {
    file: 'loading.tsx',
    description: 'UI ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
    icon: <Settings />,
    color: 'warning'
  },
  {
    file: 'error.tsx',
    description: '‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
    icon: <Warning />,
    color: 'error'
  },
  {
    file: 'not-found.tsx',
    description: '‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö route (404)',
    icon: <Web />,
    color: 'info'
  }
];

export default function Lesson2Page() {
  const [activeStep, setActiveStep] = useState(0);
  const [tabValue, setTabValue] = useState(0);

  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };

  const handleReset = () => {
    setActiveStep(0);
  };

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setTabValue(newValue);
  };

  return (
    <Container maxWidth="lg">
      {/* Header */}
      <Box sx={{ py: 4 }}>
        <Typography variant="h1" sx={{ mb: 2 }}>
          üìÅ ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 2: File-based Routing
        </Typography>
        <Typography variant="h5" color="text.secondary" sx={{ mb: 4 }}>
          ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á routes
        </Typography>

        <Box sx={{ display: 'flex', gap: 2, mb: 4 }}>
          <Chip label="25 ‡∏ô‡∏≤‡∏ó‡∏µ" color="primary" />
          <Chip label="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô" color="secondary" />
          <Chip label="‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç" color="warning" />
        </Box>
      </Box>

      {/* Learning Objectives */}
      <Paper sx={{ p: 3, mb: 4, bgcolor: 'primary.light', color: 'primary.contrastText' }}>
        <Typography variant="h6" sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1 }}>
          <Lightbulb /> ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ
        </Typography>
        <List dense>
          <ListItem>
            <ListItemIcon sx={{ color: 'inherit' }}>
              <CheckCircle />
            </ListItemIcon>
            <ListItemText primary="‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Pages Router ‡πÅ‡∏•‡∏∞ App Router" />
          </ListItem>
          <ListItem>
            <ListItemIcon sx={{ color: 'inherit' }}>
              <CheckCircle />
            </ListItemIcon>
            <ListItemText primary="‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á Static Routes ‡πÅ‡∏•‡∏∞ Dynamic Routes ‡πÑ‡∏î‡πâ" />
          </ListItem>
          <ListItem>
            <ListItemIcon sx={{ color: 'inherit' }}>
              <CheckCircle />
            </ListItemIcon>
            <ListItemText primary="‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Route Groups ‡πÅ‡∏•‡∏∞ Special Files" />
          </ListItem>
          <ListItem>
            <ListItemIcon sx={{ color: 'inherit' }}>
              <CheckCircle />
            </ListItemIcon>
            <ListItemText primary="‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Nested Routes ‡πÅ‡∏•‡∏∞ Catch-all Routes" />
          </ListItem>
        </List>
      </Paper>

      {/* What is File-based Routing */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" sx={{ mb: 3 }}>
          ü§î File-based Routing ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?
        </Typography>
        
        <Typography variant="body1" sx={{ mb: 3, lineHeight: 1.7 }}>
          <strong>File-based Routing</strong> ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á routes ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå 
          ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ routing ‡πÅ‡∏ö‡∏ö manual ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ routes ‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
        </Typography>

        <Alert severity="info" sx={{ mb: 3 }}>
          <Typography variant="body2">
            üí° <strong>‡∏Ç‡πâ‡∏≠‡∏î‡∏µ:</strong> ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô routing config ‡πÅ‡∏¢‡∏Å, ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô, 
            ‡πÅ‡∏¢‡∏Å‡πÅ‡∏¢‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢, ‡πÅ‡∏•‡∏∞ IDE ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ autocomplete path ‡πÑ‡∏î‡πâ
          </Typography>
        </Alert>

        {/* Pages Router vs App Router Comparison */}
        <Typography variant="h5" sx={{ mb: 3 }}>
          üîÑ Pages Router vs App Router
        </Typography>

        <Tabs value={tabValue} onChange={handleTabChange} sx={{ mb: 3 }}>
          <Tab label="Pages Router (‡πÄ‡∏Å‡πà‡∏≤)" />
          <Tab label="App Router (‡πÉ‡∏´‡∏°‡πà)" />
          <Tab label="‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö" />
        </Tabs>

        <CustomTabPanel value={tabValue} index={0}>
          <Paper sx={{ p: 3, bgcolor: 'grey.50' }}>
            <Typography variant="h6" sx={{ mb: 2, color: 'warning.main' }}>
              üìÇ Pages Router (Next.js 12 ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡∏ß‡πà‡∏≤)
            </Typography>
            <Typography variant="body2" sx={{ mb: 2 }}>
              ‡πÉ‡∏ä‡πâ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå `pages/` ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡πá‡∏ô route
            </Typography>
            
            <Box className="code-block" sx={{ p: 2, borderRadius: 1, mb: 2 }}>
              <Typography variant="body2" component="pre">
{`pages/
‚îú‚îÄ‚îÄ index.js        ‚Üí /
‚îú‚îÄ‚îÄ about.js        ‚Üí /about  
‚îú‚îÄ‚îÄ blog/
‚îÇ   ‚îú‚îÄ‚îÄ index.js    ‚Üí /blog
‚îÇ   ‚îî‚îÄ‚îÄ [slug].js   ‚Üí /blog/:slug
‚îî‚îÄ‚îÄ api/
    ‚îî‚îÄ‚îÄ users.js    ‚Üí /api/users`}
              </Typography>
            </Box>

            <Alert severity="warning">
              <Typography variant="body2">
                ‚ö†Ô∏è Pages Router ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà App Router ‡πÄ‡∏õ‡πá‡∏ô default ‡πÉ‡∏ô Next.js 13+
              </Typography>
            </Alert>
          </Paper>
        </CustomTabPanel>

        <CustomTabPanel value={tabValue} index={1}>
          <Paper sx={{ p: 3, bgcolor: 'success.light' }}>
            <Typography variant="h6" sx={{ mb: 2, color: 'success.dark' }}>
              üéØ App Router (Next.js 13+)
            </Typography>
            <Typography variant="body2" sx={{ mb: 2 }}>
              ‡πÉ‡∏ä‡πâ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå `app/` ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå `page.tsx` ‡πÄ‡∏õ‡πá‡∏ô route
            </Typography>
            
            <Box className="code-block" sx={{ p: 2, borderRadius: 1, mb: 2 }}>
              <Typography variant="body2" component="pre">
{`app/
‚îú‚îÄ‚îÄ page.tsx           ‚Üí /
‚îú‚îÄ‚îÄ about/
‚îÇ   ‚îî‚îÄ‚îÄ page.tsx       ‚Üí /about
‚îú‚îÄ‚îÄ blog/
‚îÇ   ‚îú‚îÄ‚îÄ page.tsx       ‚Üí /blog
‚îÇ   ‚îî‚îÄ‚îÄ [slug]/
‚îÇ       ‚îî‚îÄ‚îÄ page.tsx   ‚Üí /blog/:slug
‚îî‚îÄ‚îÄ api/
    ‚îî‚îÄ‚îÄ users/
        ‚îî‚îÄ‚îÄ route.ts   ‚Üí /api/users`}
              </Typography>
            </Box>

            <Alert severity="success">
              <Typography variant="body2">
                ‚úÖ App Router ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Server Components, Streaming, ‡πÅ‡∏•‡∏∞‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡πÜ
              </Typography>
            </Alert>
          </Paper>
        </CustomTabPanel>

        <CustomTabPanel value={tabValue} index={2}>
          <TableContainer component={Paper}>
            <Table>
              <TableHead>
                <TableRow>
                  <TableCell><strong>‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥</strong></TableCell>
                  <TableCell><strong>Pages Router</strong></TableCell>
                  <TableCell><strong>App Router</strong></TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                <TableRow>
                  <TableCell>‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å</TableCell>
                  <TableCell>pages/</TableCell>
                  <TableCell>app/</TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>‡πÑ‡∏ü‡∏•‡πå route</TableCell>
                  <TableCell>index.js, about.js</TableCell>
                  <TableCell>page.tsx</TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>Layout</TableCell>
                  <TableCell>_app.js, _document.js</TableCell>
                  <TableCell>layout.tsx</TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>API Routes</TableCell>
                  <TableCell>pages/api/</TableCell>
                  <TableCell>app/api/.../route.ts</TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>Server Components</TableCell>
                  <TableCell>‚ùå</TableCell>
                  <TableCell>‚úÖ (default)</TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>Streaming</TableCell>
                  <TableCell>‚ùå</TableCell>
                  <TableCell>‚úÖ</TableCell>
                </TableRow>
              </TableBody>
            </Table>
          </TableContainer>
        </CustomTabPanel>
      </Paper>

      {/* Route Types */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" sx={{ mb: 3 }}>
          üõ£Ô∏è ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á Routes
        </Typography>

        {routingExamples.map((example, index) => (
          <Accordion key={index} sx={{ mb: 2 }}>
            <AccordionSummary expandIcon={<ExpandMore />}>
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, width: '100%' }}>
                <Route color="primary" />
                <Box sx={{ flex: 1 }}>
                  <Typography variant="h6">{example.type}</Typography>
                  <Typography variant="body2" color="text.secondary">
                    {example.path} ‚Üí {example.url}
                  </Typography>
                </Box>
                <Chip 
                  label={example.type.split(' ')[0]} 
                  size="small" 
                  color={
                    example.type.includes('Dynamic') ? 'warning' :
                    example.type.includes('Nested') ? 'info' :
                    example.type.includes('Catch') ? 'error' : 'primary'
                  }
                />
              </Box>
            </AccordionSummary>
            <AccordionDetails>
              <Typography variant="body1" sx={{ mb: 2 }}>
                {example.description}
              </Typography>
              
              <Box className="code-block" sx={{ p: 2, fontFamily: 'monospace' }}>
                <Typography variant="body2" component="pre">
                  {example.code}
                </Typography>
              </Box>
            </AccordionDetails>
          </Accordion>
        ))}
      </Paper>

      {/* Route Groups */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" sx={{ mb: 3 }}>
          üì¶ Route Groups
        </Typography>
        
        <Typography variant="body1" sx={{ mb: 3 }}>
          Route Groups ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° routes ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠ URL structure 
          ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö () ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
        </Typography>

        <Alert severity="info" sx={{ mb: 3 }}>
          <Typography variant="body2">
            üí° <strong>‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå:</strong> ‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î, ‡πÅ‡∏¢‡∏Å layout ‡∏ï‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°, 
            ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏µ layout ‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏°
          </Typography>
        </Alert>

        <Box sx={{ 
          display: 'flex', 
          flexDirection: { xs: 'column', md: 'row' }, 
          gap: 3,
          flexWrap: 'wrap'
        }}>
          {routeGroups.map((group, index) => (
            <Box key={index} sx={{ flex: 1, minWidth: '300px' }}>
              <Card sx={{ height: '100%' }}>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2, color: 'primary.main' }}>
                    {group.name}
                  </Typography>
                  <Typography variant="body2" sx={{ mb: 2 }}>
                    {group.description}
                  </Typography>
                  
                  <Box sx={{ bgcolor: 'grey.50', p: 2, borderRadius: 1 }}>
                    {group.structure.map((item, i) => (
                      <Typography key={i} variant="body2" sx={{ fontFamily: 'monospace', mb: 0.5 }}>
                        {item}
                      </Typography>
                    ))}
                  </Box>
                </CardContent>
              </Card>
            </Box>
          ))}
        </Box>
      </Paper>

      {/* Special Files */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" sx={{ mb: 3 }}>
          üìÑ Special Files
        </Typography>
        
        <Typography variant="body1" sx={{ mb: 3 }}>
          App Router ‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á UX ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
        </Typography>

        <Box sx={{ 
          display: 'flex', 
          flexDirection: { xs: 'column', sm: 'row' }, 
          gap: 2,
          flexWrap: 'wrap'
        }}>
          {specialFiles.map((file, index) => (
            <Box key={index} sx={{ flex: 1, minWidth: '200px' }}>
              <Paper sx={{ p: 3, textAlign: 'center', height: '100%' }}>
                <Box sx={{ color: `${file.color}.main`, mb: 2 }}>
                  {file.icon}
                </Box>
                <Typography variant="h6" sx={{ mb: 1, fontFamily: 'monospace' }}>
                  {file.file}
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  {file.description}
                </Typography>
              </Paper>
            </Box>
          ))}
        </Box>

        <Alert severity="warning" sx={{ mt: 3 }}>
          <Typography variant="body2">
            ‚ö†Ô∏è <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ 
            ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Next.js ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå route
          </Typography>
        </Alert>
      </Paper>

      {/* Practical Example */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" sx={{ mb: 3 }}>
          üõ†Ô∏è ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
        </Typography>
        
        <Typography variant="body1" sx={{ mb: 3 }}>
          ‡∏°‡∏≤‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á routes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå e-commerce ‡∏Å‡∏±‡∏ô
        </Typography>

        <Box className="code-block" sx={{ p: 3, borderRadius: 1, fontFamily: 'monospace', mb: 3 }}>
          <Typography variant="body2" component="pre">
{`app/
‚îú‚îÄ‚îÄ (marketing)/
‚îÇ   ‚îú‚îÄ‚îÄ layout.tsx        # Layout ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö marketing pages
‚îÇ   ‚îú‚îÄ‚îÄ page.tsx          # ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å (/)
‚îÇ   ‚îú‚îÄ‚îÄ about/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ page.tsx      # ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤ (/about)
‚îÇ   ‚îî‚îÄ‚îÄ contact/
‚îÇ       ‚îî‚îÄ‚îÄ page.tsx      # ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤ (/contact)
‚îú‚îÄ‚îÄ (shop)/
‚îÇ   ‚îú‚îÄ‚îÄ layout.tsx        # Layout ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö shop pages  
‚îÇ   ‚îú‚îÄ‚îÄ products/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ page.tsx      # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (/products)
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ [id]/
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ page.tsx  # ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (/products/123)
‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ reviews/
‚îÇ   ‚îÇ           ‚îî‚îÄ‚îÄ page.tsx # ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (/products/123/reviews)
‚îÇ   ‚îî‚îÄ‚îÄ cart/
‚îÇ       ‚îî‚îÄ‚îÄ page.tsx      # ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (/cart)
‚îú‚îÄ‚îÄ (auth)/
‚îÇ   ‚îú‚îÄ‚îÄ login/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ page.tsx      # ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö (/login)
‚îÇ   ‚îî‚îÄ‚îÄ register/
‚îÇ       ‚îî‚îÄ‚îÄ page.tsx      # ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (/register)
‚îî‚îÄ‚îÄ api/
    ‚îú‚îÄ‚îÄ products/
    ‚îÇ   ‚îî‚îÄ‚îÄ route.ts      # API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    ‚îî‚îÄ‚îÄ auth/
        ‚îî‚îÄ‚îÄ route.ts      # API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö authentication`}
          </Typography>
        </Box>

        <Typography variant="h6" sx={{ mb: 2 }}>
          üí° ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏µ‡πâ:
        </Typography>
        <List>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText primary="‡πÅ‡∏¢‡∏Å layout ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏ô‡πâ‡∏≤ (marketing, shop, auth)" />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText primary="‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢" />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText primary="‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á layout ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ‡∏≠‡∏¥‡∏™‡∏£‡∏∞" />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText primary="‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö nested routes ‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô" />
          </ListItem>
        </List>
      </Paper>

      {/* Hands-on Practice */}
      <Paper sx={{ p: 4, mb: 4 }}>
        <Typography variant="h4" sx={{ mb: 3 }}>
          ‚úã ‡∏ù‡∏∂‡∏Å‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥: ‡∏™‡∏£‡πâ‡∏≤‡∏á Routes
        </Typography>
        
        <Typography variant="body1" sx={{ mb: 3 }}>
          ‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á routes ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ Next.js ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
        </Typography>

        <Stepper activeStep={activeStep} orientation="vertical">
          <Step>
            <StepLabel>
              <Typography variant="h6">‡∏™‡∏£‡πâ‡∏≤‡∏á Static Route</Typography>
            </StepLabel>
            <StepContent>
              <Typography variant="body1" sx={{ mb: 2 }}>
                ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ About ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:
              </Typography>
              
              <Box className="code-block" sx={{ p: 2, borderRadius: 1, mb: 2 }}>
                <Typography variant="body2">
                  $ mkdir -p app/about<br/>
                  $ touch app/about/page.tsx
                </Typography>
              </Box>

              <Box className="code-block" sx={{ p: 2, borderRadius: 1, mb: 2 }}>
                <Typography variant="body2" component="pre">
{`// app/about/page.tsx
export default function AboutPage() {
  return (
    <div>
      <h1>‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤</h1>
      <p>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤</p>
    </div>
  );
}`}
                </Typography>
              </Box>

              <Alert severity="success" sx={{ mb: 2 }}>
                <Typography variant="body2">
                  ‚úÖ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà http://localhost:3000/about
                </Typography>
              </Alert>

              <Button variant="contained" onClick={handleNext} sx={{ mt: 1, mr: 1 }}>
                ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
              </Button>
            </StepContent>
          </Step>

          <Step>
            <StepLabel>
              <Typography variant="h6">‡∏™‡∏£‡πâ‡∏≤‡∏á Dynamic Route</Typography>
            </StepLabel>
            <StepContent>
              <Typography variant="body1" sx={{ mb: 2 }}>
                ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå slug:
              </Typography>
              
              <Box className="code-block" sx={{ p: 2, borderRadius: 1, mb: 2 }}>
                <Typography variant="body2">
                  $ mkdir -p app/blog/[slug]<br/>
                  $ touch app/blog/[slug]/page.tsx
                </Typography>
              </Box>

              <Box className="code-block" sx={{ p: 2, borderRadius: 1, mb: 2 }}>
                <Typography variant="body2" component="pre">
{`// app/blog/[slug]/page.tsx
interface Props {
  params: Promise<{ slug: string }>;
}

export default async function BlogPost({ params }: Props) {
  const { slug } = await params;
  
  return (
    <div>
      <h1>‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°: {slug}</h1>
      <p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°...</p>
    </div>
  );
}`}
                </Typography>
              </Box>

              <Alert severity="info" sx={{ mb: 2 }}>
                <Typography variant="body2">
                  üí° ‡∏•‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ /blog/my-first-post ‡∏´‡∏£‡∏∑‡∏≠ /blog/learning-nextjs
                </Typography>
              </Alert>

              <Button variant="contained" onClick={handleNext} sx={{ mt: 1, mr: 1 }}>
                ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
              </Button>
              <Button onClick={handleBack} sx={{ mt: 1, mr: 1 }}>
                ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
              </Button>
            </StepContent>
          </Step>

          <Step>
            <StepLabel>
              <Typography variant="h6">‡∏™‡∏£‡πâ‡∏≤‡∏á Route Group</Typography>
            </StepLabel>
            <StepContent>
              <Typography variant="body1" sx={{ mb: 2 }}>
                ‡∏™‡∏£‡πâ‡∏≤‡∏á Route Group ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ dashboard:
              </Typography>
              
              <Box className="code-block" sx={{ p: 2, borderRadius: 1, mb: 2 }}>
                <Typography variant="body2">
                  $ mkdir -p app/(dashboard)/admin<br/>
                  $ touch app/(dashboard)/layout.tsx<br/>
                  $ touch app/(dashboard)/admin/page.tsx
                </Typography>
              </Box>

              <Box className="code-block" sx={{ p: 2, borderRadius: 1, mb: 2 }}>
                <Typography variant="body2" component="pre">
{`// app/(dashboard)/layout.tsx
export default function DashboardLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <div>
      <nav>Dashboard Navigation</nav>
      <main>{children}</main>
    </div>
  );
}`}
                </Typography>
              </Box>

              <Alert severity="success" sx={{ mb: 2 }}>
                <Typography variant="body2">
                  ‚úÖ ‡∏´‡∏ô‡πâ‡∏≤ /admin ‡∏à‡∏∞‡πÉ‡∏ä‡πâ layout ‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö dashboard
                </Typography>
              </Alert>

              <Button variant="contained" onClick={handleNext} sx={{ mt: 1, mr: 1 }}>
                ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
              </Button>
              <Button onClick={handleBack} sx={{ mt: 1, mr: 1 }}>
                ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
              </Button>
            </StepContent>
          </Step>
        </Stepper>

        {activeStep === 3 && (
          <Paper sx={{ p: 3, mt: 3, bgcolor: 'success.light' }}>
            <Typography variant="h6" sx={{ mb: 2 }}>
              üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ File-based Routing ‡πÅ‡∏•‡πâ‡∏ß
            </Typography>
            <Typography variant="body1" sx={{ mb: 2 }}>
              ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á routes ‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á App Router
            </Typography>
            <Button onClick={handleReset} sx={{ mt: 1, mr: 1 }}>
              ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
            </Button>
          </Paper>
        )}
      </Paper>

      {/* Best Practices */}
      <Paper sx={{ p: 4, mb: 4, bgcolor: 'warning.light' }}>
        <Typography variant="h5" sx={{ mb: 2, color: 'warning.dark' }}>
          üí° Best Practices
        </Typography>
        <List>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡πÉ‡∏ä‡πâ Route Groups ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î"
              secondary="‡πÅ‡∏¢‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏° routes ‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà ‡πÄ‡∏ä‡πà‡∏ô (marketing), (dashboard), (auth)"
            />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡∏™‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢"
              secondary="‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÄ‡∏ä‡πà‡∏ô products, user-profile"
            />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡πÉ‡∏ä‡πâ TypeScript ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö props"
              secondary="‡∏Å‡∏≥‡∏´‡∏ô‡∏î type ‡πÉ‡∏´‡πâ params ‡πÅ‡∏•‡∏∞ searchParams ‡πÄ‡∏û‡∏∑‡πà‡∏≠ type safety"
            />
          </ListItem>
          <ListItem>
            <ListItemIcon>
              <CheckCircle color="success" />
            </ListItemIcon>
            <ListItemText 
              primary="‡∏™‡∏£‡πâ‡∏≤‡∏á error.tsx ‡πÅ‡∏•‡∏∞ loading.tsx"
              secondary="‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ UX ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î"
            />
          </ListItem>
        </List>
      </Paper>

      {/* Next Steps */}
      <Paper sx={{ p: 4, bgcolor: 'success.light', color: 'success.dark' }}>
        <Typography variant="h5" sx={{ mb: 2 }}>
          üéØ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏ö‡∏ö‡∏ó‡∏ó‡∏µ‡πà 2 ‡πÅ‡∏•‡πâ‡∏ß
        </Typography>
        <Typography variant="body1" sx={{ mb: 3 }}>
          ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à File-based Routing ‡πÅ‡∏•‡πâ‡∏ß! 
          ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á Server Components vs Client Components ‡πÉ‡∏ô‡∏ö‡∏ó‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        </Typography>
        
        <Alert severity="info" sx={{ mb: 3 }}>
          <Typography variant="body2">
            üí° <strong>‡∏ö‡∏ó‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:</strong> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ Server Components vs Client Components ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á Next.js 13+
          </Typography>
        </Alert>
      </Paper>

      {/* Navigation */}
      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 6 }}>
        <Button
          startIcon={<ArrowBack />}
          component={Link}
          href="/nextjs-basics/lesson-1"
          variant="outlined"
        >
          ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏±‡∏ö Next.js
        </Button>
        
        <Chip 
          label="2 / 16"
          color="primary"
          variant="outlined"
        />
        
        <Button
          endIcon={<ArrowForward />}
          component={Link}
          href="/nextjs-basics/lesson-3"
          variant="contained"
          color="primary"
        >
          ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 3: Server vs Client Components
        </Button>
      </Box>
    </Container>
  );
} 