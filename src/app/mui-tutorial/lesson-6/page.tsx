'use client';
import {
  Container,
  Typography,
  Box,
  Paper,
  Alert,
  Button,
  AppBar,
  Toolbar,
  IconButton,
  Menu,
  MenuItem,
  Drawer,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  ListItemButton,
  Tabs,
  Tab,
  Breadcrumbs,
  Chip,
  Card,
  CardContent,
  Stack,
  Avatar,
  Divider,
  Badge,
  Switch,
  FormControlLabel,
  Collapse,
  Grid,
  useTheme,
  useMediaQuery,
} from '@mui/material';
import {
  ArrowBack,
  ArrowForward,
  CheckCircle,
  Menu as MenuIcon,
  Home,
  Person,
  Settings,
  Notifications,
  Search,
  AccountCircle,
  Mail,
  MoreVert,
  Inbox,
  Drafts,
  Send,
  ExpandLess,
  ExpandMore,
  StarBorder,
  Dashboard,
  ShoppingCart,
  BarChart,
  Layers,
  Assignment,
  PlayArrow,
  Lightbulb,
  Navigation,
  NavigateNext,
  Folder,
  FolderOpen,
  Logout,
} from '@mui/icons-material';
import Link from 'next/link';
import { useState } from 'react';

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;
  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`lesson-tabpanel-${index}`}
      aria-labelledby={`lesson-tab-${index}`}
      {...other}
    >
      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}
    </div>
  );
}

const appBarVariants = [
  {
    variant: 'static',
    description: 'AppBar ‡∏õ‡∏Å‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ï‡∏≤‡∏° scroll',
    usage: '‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ sticky navigation',
    pros: ['‡πÑ‡∏°‡πà‡∏£‡∏ö‡∏Å‡∏ß‡∏ô content', '‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏±‡πâ‡∏ô'],
    cons: ['‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠ scroll ‡∏•‡∏á']
  },
  {
    variant: 'fixed',
    description: 'AppBar ‡∏ï‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏™‡∏°‡∏≠',
    usage: '‡πÅ‡∏≠‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ navigation ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î',
    pros: ['‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤', 'UX ‡∏î‡∏µ'],
    cons: ['‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠', '‡∏≠‡∏≤‡∏à‡∏ö‡∏î‡∏ö‡∏±‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤']
  },
  {
    variant: 'sticky',
    description: 'AppBar ‡∏ó‡∏µ‡πà sticky ‡πÄ‡∏°‡∏∑‡πà‡∏≠ scroll',
    usage: '‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô',
    pros: ['‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô', '‡πÑ‡∏°‡πà‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô'],
    cons: ['‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏ß‡πà‡∏≤']
  }
];

const drawerTypes = [
  {
    type: 'permanent',
    description: 'Drawer ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤',
    usage: 'Desktop app, Admin dashboard',
    icon: <Folder />,
    examples: ['Dashboard ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô', 'File manager', 'IDE sidebar']
  },
  {
    type: 'persistent',
    description: 'Drawer ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà overlay content',
    usage: 'App ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô',
    icon: <FolderOpen />,
    examples: ['Email client', 'Code editor', 'Design tools']
  },
  {
    type: 'temporary',
    description: 'Drawer ‡∏ó‡∏µ‡πà overlay ‡∏ö‡∏ô content',
    usage: 'Mobile app, Responsive design',
    icon: <MenuIcon />,
    examples: ['Mobile navigation', 'Settings panel', 'Filter sidebar']
  }
];

// Working Layout Demo Component
function WorkingLayoutDemo() {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  const [demoDrawerOpen, setDemoDrawerOpen] = useState(false);
  const [demoTabValue, setDemoTabValue] = useState(0);
  const [demoAnchorEl, setDemoAnchorEl] = useState<null | HTMLElement>(null);
  const [selectedMenu, setSelectedMenu] = useState(0);
  const [contentTabValue, setContentTabValue] = useState(0);

  const handleDemoDrawerToggle = () => setDemoDrawerOpen(!demoDrawerOpen);
  const handleDemoTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setDemoTabValue(newValue);
  };
  const handleDemoMenu = (event: React.MouseEvent<HTMLElement>) => {
    setDemoAnchorEl(event.currentTarget);
  };
  const handleDemoCloseMenu = () => setDemoAnchorEl(null);
  const handleMenuClick = (index: number) => {
    setSelectedMenu(index);
    setDemoDrawerOpen(false);
    setContentTabValue(0); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï tab ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏°‡∏ô‡∏π
  };
  const handleContentTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setContentTabValue(newValue);
  };

  const drawerWidth = 240;

  const menuItems = [
    { 
      text: '‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å', 
      icon: <Home />, 
      content: 'dashboard',
      description: '‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ'
    },
    { 
      text: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', 
      icon: <Person />, 
      content: 'users',
      description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
    },
    { 
      text: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô', 
      icon: <BarChart />, 
      content: 'reports',
      description: '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå'
    },
    { 
      text: '‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤', 
      icon: <Settings />, 
      content: 'settings',
      description: '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö'
    },
    { 
      text: '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°', 
      icon: <Mail />, 
      content: 'messages',
      description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°',
      badge: 5
    }
  ];

  const demoDrawer = (
    <Box sx={{ width: drawerWidth }} role="presentation">

      <List>
        {menuItems.map((item, index) => (
          <ListItemButton 
            key={item.text}
            selected={selectedMenu === index}
            onClick={() => handleMenuClick(index)}
            sx={{
              '&.Mui-selected': {
                backgroundColor: 'primary.light',
                color: 'primary.contrastText',
                '&:hover': {
                  backgroundColor: 'primary.main',
                },
              },
            }}
          >
            <ListItemIcon sx={{ 
              color: selectedMenu === index ? 'primary.contrastText' : 'inherit',
              minWidth: 40 
            }}>
              {item.icon}
            </ListItemIcon>
            <ListItemText 
              primary={item.text}
              secondary={selectedMenu === index ? item.description : undefined}
              sx={{ 
                color: selectedMenu === index ? 'primary.contrastText' : 'inherit',
                '& .MuiListItemText-secondary': {
                  color: selectedMenu === index ? 'white' : 'text.secondary',
                  fontSize: '0.75rem'
                }
              }}
            />
            {item.badge && (
              <Badge badgeContent={item.badge} color="error" sx={{ mr: 1 }} />
            )}
          </ListItemButton>
        ))}
      </List>
      <Box sx={{ mt: 'auto', p: 2, borderTop: '1px solid', borderColor: 'divider' }}>
        <Typography variant="caption" color="text.secondary">
          ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 1.0.0
        </Typography>
      </Box>
    </Box>
  );

  const renderSelectedContent = () => {
    const selectedItem = menuItems[selectedMenu];
    
    switch (selectedItem.content) {
      case 'dashboard':
        return (
          <Box>
            <Typography variant="h4" sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
              <Home color="primary" />
              ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å - Dashboard
            </Typography>
            
            {/* Dashboard Tabs */}
            <Box sx={{ width: '100%', mb: 3 }}>
              <Tabs 
                value={contentTabValue} 
                onChange={handleContentTabChange}
                variant="scrollable"
                scrollButtons="auto"
                sx={{ borderBottom: 1, borderColor: 'divider' }}
              >
                <Tab 
                  label="üìà ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°" 
                  icon={<Dashboard />}
                  iconPosition="start"
                />
                <Tab 
                  label="üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥" 
                  icon={<BarChart />}
                  iconPosition="start"
                />
                <Tab 
                  label="üïí ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°" 
                  icon={<Notifications />}
                  iconPosition="start"
                />
              </Tabs>
            </Box>

            {/* Tab Content */}
            {contentTabValue === 0 && (
              <Box>
                {/* Tab 1: ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° - Original Dashboard Content */}
                <Typography variant="h6" sx={{ mb: 2 }}>üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏î‡πà‡∏ß‡∏ô</Typography>
                <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', md: 'repeat(4, 1fr)' }, gap: 2, mb: 4 }}>
                  <Card sx={{ background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)' }}>
                    <CardContent>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', color: 'white' }}>
                        <Box>
                          <Typography variant="h4" component="div" sx={{ fontWeight: 'bold' }}>
                            1,234
                          </Typography>
                          <Typography variant="body2">
                            ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                          </Typography>
                        </Box>
                        <Person sx={{ fontSize: 40, opacity: 0.8 }} />
                      </Box>
                    </CardContent>
                  </Card>
                  
                  <Card sx={{ background: 'linear-gradient(45deg, #4CAF50 30%, #8BC34A 90%)' }}>
                    <CardContent>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', color: 'white' }}>
                        <Box>
                          <Typography variant="h4" component="div" sx={{ fontWeight: 'bold' }}>
                            ‡∏ø89.5K
                          </Typography>
                          <Typography variant="body2">
                            ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
                          </Typography>
                        </Box>
                        <BarChart sx={{ fontSize: 40, opacity: 0.8 }} />
                      </Box>
                    </CardContent>
                  </Card>
                  
                  <Card sx={{ background: 'linear-gradient(45deg, #FF9800 30%, #FFC107 90%)' }}>
                    <CardContent>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', color: 'white' }}>
                        <Box>
                          <Typography variant="h4" component="div" sx={{ fontWeight: 'bold' }}>
                            567
                          </Typography>
                          <Typography variant="body2">
                            ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
                          </Typography>
                        </Box>
                        <ShoppingCart sx={{ fontSize: 40, opacity: 0.8 }} />
                      </Box>
                    </CardContent>
                  </Card>
                  
                  <Card sx={{ background: 'linear-gradient(45deg, #9C27B0 30%, #E91E63 90%)' }}>
                    <CardContent>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', color: 'white' }}>
                        <Box>
                          <Typography variant="h4" component="div" sx={{ fontWeight: 'bold' }}>
                            98.2%
                          </Typography>
                          <Typography variant="body2">
                            ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à
                          </Typography>
                        </Box>
                        <StarBorder sx={{ fontSize: 40, opacity: 0.8 }} />
                      </Box>
                    </CardContent>
                  </Card>
                </Box>
              </Box>
            )}

            {/* Tab 2: ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ */}
            {contentTabValue === 1 && (
              <Box>
                <Typography variant="h5" sx={{ mb: 3 }}>üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å</Typography>
                
                <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3, mb: 3 }}>
                  <Card>
                    <CardContent>
                      <Typography variant="h6" sx={{ mb: 2 }}>üìà ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</Typography>
                      <Box sx={{ height: 200, bgcolor: 'primary.light', borderRadius: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                        <Typography variant="h4" color="white">+25%</Typography>
                      </Box>
                      <Typography variant="body2" color="text.secondary" sx={{ mt: 1 }}>
                        ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
                      </Typography>
                    </CardContent>
                  </Card>
                  
                  <Card>
                    <CardContent>
                      <Typography variant="h6" sx={{ mb: 2 }}>üë• ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô</Typography>
                      <Box sx={{ height: 200, bgcolor: 'success.light', borderRadius: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                        <Typography variant="h4" color="white">+67</Typography>
                      </Box>
                      <Typography variant="body2" color="text.secondary" sx={{ mt: 1 }}>
                        ‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
                      </Typography>
                    </CardContent>
                  </Card>
                </Box>

                {/* Additional Statistics */}
                <Card>
                  <CardContent>
                    <Typography variant="h6" sx={{ mb: 2 }}>üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</Typography>
                    <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: 'repeat(3, 1fr)' }, gap: 2 }}>
                      {[
                        { label: '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°', value: '85.2%', color: 'success' },
                        { label: '‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢', value: '3:45 ‡∏ô‡∏≤‡∏ó‡∏µ', color: 'info' },
                        { label: '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤', value: '72.8%', color: 'warning' }
                      ].map((stat, index) => (
                        <Paper key={index} sx={{ p: 2, textAlign: 'center' }}>
                          <Typography variant="h6" color={`${stat.color}.main`}>
                            {stat.value}
                          </Typography>
                          <Typography variant="body2" color="text.secondary">
                            {stat.label}
                          </Typography>
                        </Paper>
                      ))}
                    </Box>
                  </CardContent>
                </Card>
              </Box>
            )}

            {/* Tab 3: ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° */}
            {contentTabValue === 2 && (
              <Box>
                <Typography variant="h5" sx={{ mb: 3 }}>üïí ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</Typography>
                
                <Card>
                  <CardContent>
                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
                      {[
                        { action: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô', user: 'user@example.com', time: '2 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', type: 'success' },
                        { action: '‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà', user: 'Order #12345', time: '5 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', type: 'info' },
                        { action: '‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', user: 'System', time: '10 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', type: 'warning' },
                        { action: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏∞‡∏ö‡∏ö', user: 'Admin', time: '15 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', type: 'error' },
                        { action: '‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', user: 'Payment #9876', time: '20 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', type: 'success' },
                        { action: '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà', user: 'Support Team', time: '25 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß', type: 'info' }
                      ].map((activity, index) => (
                        <Paper key={index} sx={{ p: 2, display: 'flex', alignItems: 'center', gap: 2 }}>
                          <Avatar sx={{ bgcolor: `${activity.type}.main` }}>
                            {activity.type === 'success' && <CheckCircle />}
                            {activity.type === 'info' && <ShoppingCart />}
                            {activity.type === 'warning' && <Settings />}
                            {activity.type === 'error' && <Dashboard />}
                          </Avatar>
                          <Box sx={{ flex: 1 }}>
                            <Typography variant="subtitle1" sx={{ fontWeight: 600 }}>
                              {activity.action}
                            </Typography>
                            <Typography variant="body2" color="text.secondary">
                              {activity.user} ‚Ä¢ {activity.time}
                            </Typography>
                          </Box>
                          <Chip 
                            label={activity.type} 
                            color={activity.type as any}
                            size="small"
                            variant="outlined"
                          />
                        </Paper>
                      ))}
                    </Box>
                  </CardContent>
                </Card>
              </Box>
            )}
          </Box>
        );

      case 'users':
        return (
          <Box>
            <Typography variant="h4" sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
              <Person color="primary" />
              ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
            </Typography>
            
            {/* Users Tabs */}
            <Box sx={{ width: '100%', mb: 3 }}>
              <Tabs 
                value={contentTabValue} 
                onChange={handleContentTabChange}
                variant="scrollable"
                scrollButtons="auto"
                sx={{ borderBottom: 1, borderColor: 'divider' }}
              >
                <Tab label="üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" />
                <Tab label="‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà" />
                <Tab label="‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£" />
              </Tabs>
            </Box>

            {/* Users Tab Content */}
            {contentTabValue === 0 && (
              <Card>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2 }}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</Typography>
                  <Box sx={{ display: 'grid', gap: 2 }}>
                    {[
                      { name: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ', email: 'somchai@email.com', role: 'Admin', status: 'active' },
                      { name: '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏£‡∏±‡∏Å‡∏î‡∏µ', email: 'somying@email.com', role: 'User', status: 'active' },
                      { name: '‡∏ô‡∏≤‡∏¢‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö', email: 'test@email.com', role: 'User', status: 'inactive' }
                    ].map((user, index) => (
                      <Paper key={index} sx={{ p: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                          <Avatar sx={{ bgcolor: 'primary.main' }}>
                            {user.name.charAt(0)}
                          </Avatar>
                          <Box>
                            <Typography variant="subtitle1" sx={{ fontWeight: 600 }}>
                              {user.name}
                            </Typography>
                            <Typography variant="body2" color="text.secondary">
                              {user.email}
                            </Typography>
                          </Box>
                        </Box>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                          <Chip 
                            label={user.role} 
                            color={user.role === 'Admin' ? 'secondary' : 'default'}
                            size="small"
                          />
                          <Chip 
                            label={user.status === 'active' ? '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'} 
                            color={user.status === 'active' ? 'success' : 'default'}
                            size="small"
                          />
                        </Box>
                      </Paper>
                    ))}
                  </Box>
                </CardContent>
              </Card>
            )}

            {contentTabValue === 1 && (
              <Card>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2 }}>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà</Typography>
                  <Typography variant="body2" color="text.secondary">
                    üìù ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                  </Typography>
                </CardContent>
              </Card>
            )}

            {contentTabValue === 2 && (
              <Card>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2 }}>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</Typography>
                  <Typography variant="body2" color="text.secondary">
                    üîß ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                  </Typography>
                </CardContent>
              </Card>
            )}
          </Box>
        );

      case 'reports':
        return (
          <Box>
            <Typography variant="h4" sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
              <BarChart color="primary" />
              ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
            </Typography>
            
            <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3 }}>
              <Card>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2 }}>üìà ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô</Typography>
                  <Box sx={{ 
                    height: 150, 
                    bgcolor: 'primary.light', 
                    borderRadius: 1, 
                    display: 'flex', 
                    alignItems: 'center', 
                    justifyContent: 'center',
                    color: 'white'
                  }}>
                    <Typography variant="h4">‡∏ø 12,345</Typography>
                  </Box>
                  <Typography variant="body2" color="text.secondary" sx={{ mt: 1 }}>
                    ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 15% ‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô
                  </Typography>
                </CardContent>
              </Card>
              
              <Card>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2 }}>üë• ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà</Typography>
                  <Box sx={{ 
                    height: 150, 
                    bgcolor: 'success.light', 
                    borderRadius: 1, 
                    display: 'flex', 
                    alignItems: 'center', 
                    justifyContent: 'center',
                    color: 'white'
                  }}>
                    <Typography variant="h4">+42</Typography>
                  </Box>
                  <Typography variant="body2" color="text.secondary" sx={{ mt: 1 }}>
                    ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ
                  </Typography>
                </CardContent>
              </Card>
              
              <Card sx={{ gridColumn: { md: '1 / -1' } }}>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2 }}>üî• ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°</Typography>
                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>
                    {[
                      { name: 'iPhone 15 Pro', sales: 156 },
                      { name: 'MacBook Air M2', sales: 89 },
                      { name: 'AirPods Pro', sales: 234 }
                    ].map((product, index) => (
                      <Box key={index} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', p: 1 }}>
                        <Typography>{product.name}</Typography>
                        <Chip label={`${product.sales} ‡∏ä‡∏¥‡πâ‡∏ô`} color="primary" size="small" />
                      </Box>
                    ))}
                  </Box>
                </CardContent>
              </Card>
            </Box>
          </Box>
        );

      case 'messages':
        return (
          <Box>
            <Typography variant="h4" sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
              <Mail color="primary" />
              ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            </Typography>
            
            <Card>
              <CardContent>
                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>
                  <Typography variant="h6">‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</Typography>
                  <Badge badgeContent={5} color="error">
                    <Mail />
                  </Badge>
                </Box>
                
                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
                  {[
                    { 
                      from: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ A', 
                      subject: '‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ iPhone 15', 
                      time: '10:30',
                      unread: true 
                    },
                    { 
                      from: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ B', 
                      subject: '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå', 
                      time: '09:15',
                      unread: true 
                    },
                    { 
                      from: '‡∏ã‡∏±‡∏û‡∏û‡∏≠‡∏£‡πå‡∏ï', 
                      subject: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô', 
                      time: '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô',
                      unread: false 
                    }
                  ].map((message, index) => (
                    <Paper 
                      key={index} 
                      sx={{ 
                        p: 2, 
                        display: 'flex', 
                        justifyContent: 'space-between', 
                        alignItems: 'center',
                        bgcolor: message.unread ? 'primary.light' : 'background.paper',
                        color: message.unread ? 'primary.contrastText' : 'text.primary'
                      }}
                    >
                      <Box>
                        <Typography variant="subtitle1" sx={{ fontWeight: message.unread ? 600 : 400 }}>
                          {message.subject}
                        </Typography>
                        <Typography variant="body2" sx={{ opacity: 0.8 }}>
                          ‡∏à‡∏≤‡∏Å: {message.from}
                        </Typography>
                      </Box>
                      <Box sx={{ textAlign: 'right' }}>
                        <Typography variant="caption">{message.time}</Typography>
                        {message.unread && (
                          <Box sx={{ mt: 0.5 }}>
                            <Chip label="‡πÉ‡∏´‡∏°‡πà" size="small" color="error" />
                          </Box>
                        )}
                      </Box>
                    </Paper>
                  ))}
                </Box>
              </CardContent>
            </Card>
          </Box>
        );

      case 'settings':
        return (
          <Box>
            <Typography variant="h4" sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 1 }}>
              <Settings color="primary" />
              ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö
            </Typography>
            
            <Box sx={{ display: 'grid', gap: 3 }}>
              <Card>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2 }}>üîî ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</Typography>
                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
                    <FormControlLabel
                      control={<Switch defaultChecked />}
                      label="‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
                    />
                    <FormControlLabel
                      control={<Switch defaultChecked />}
                      label="‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà"
                    />
                    <FormControlLabel
                      control={<Switch />}
                      label="‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô"
                    />
                  </Box>
                </CardContent>
              </Card>
              
              <Card>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2 }}>üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</Typography>
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
                    <Avatar sx={{ width: 56, height: 56, bgcolor: 'primary.main' }}>
                      A
                    </Avatar>
                    <Box>
                      <Typography variant="h6">Admin User</Typography>
                      <Typography variant="body2" color="text.secondary">
                        admin@myapp.com
                      </Typography>
                    </Box>
                  </Box>
                  <Button variant="outlined" startIcon={<Person />}>
                    ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
                  </Button>
                </CardContent>
              </Card>
              
              <Card>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2 }}>üîí ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</Typography>
                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
                    <Button variant="outlined" fullWidth>
                      ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
                    </Button>
                    <Button variant="outlined" fullWidth>
                      ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ö‡∏ö 2 ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô
                    </Button>
                    <Button variant="outlined" fullWidth color="error">
                      ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏∏‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
                    </Button>
                  </Box>
                </CardContent>
              </Card>
            </Box>
          </Box>
        );

      default:
        return (
          <Box>
            <Typography variant="h5">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤</Typography>
          </Box>
        );
    }
  };

  return (
    <Box sx={{ border: '2px solid', borderColor: 'grey.300', borderRadius: 2, overflow: 'hidden', height: 700 }}>
      <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>
        {/* Compact AppBar Header */}
        <AppBar position="static" sx={{ borderRadius: 0, flexShrink: 0 }}>
          <Toolbar sx={{ minHeight: 56 }}>
            <IconButton
              color="inherit"
              edge="start"
              onClick={handleDemoDrawerToggle}
              sx={{ mr: 2, display: { sm: 'none' } }}
            >
              <MenuIcon />
            </IconButton>
            
            <Typography variant="h6" noWrap sx={{ flexGrow: 1 }}>
              üìä MyApp Dashboard
            </Typography>
            
            <IconButton color="inherit" size="small">
              <Badge badgeContent={4} color="error">
                <Notifications />
              </Badge>
            </IconButton>
            
            <IconButton color="inherit" size="small" onClick={handleDemoMenu}>
              <AccountCircle />
            </IconButton>
            
            <Menu anchorEl={demoAnchorEl} open={Boolean(demoAnchorEl)} onClose={handleDemoCloseMenu}>
              <MenuItem onClick={handleDemoCloseMenu}>
                <Person sx={{ mr: 1 }} /> ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
              </MenuItem>
              <MenuItem onClick={handleDemoCloseMenu}>
                <Settings sx={{ mr: 1 }} /> ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
              </MenuItem>
              <MenuItem onClick={handleDemoCloseMenu}>
                <Logout sx={{ mr: 1 }} /> ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
              </MenuItem>
            </Menu>
          </Toolbar>
        </AppBar>

        {/* Main Layout Area */}
        <Box sx={{ display: 'flex', flex: 1, overflow: 'hidden' }}>
          {/* Drawer for Desktop */}
          <Box sx={{ display: { xs: 'none', sm: 'block' }, width: drawerWidth, flexShrink: 0 }}>
            <Box sx={{ width: drawerWidth, height: '100%', borderRight: '1px solid', borderColor: 'divider', overflow: 'auto' }}>
              {demoDrawer}
            </Box>
          </Box>

          {/* Mobile Drawer */}
          <Drawer
            variant="temporary"
            open={demoDrawerOpen}
            onClose={handleDemoDrawerToggle}
            ModalProps={{ keepMounted: true }}
            sx={{
              display: { xs: 'block', sm: 'none' },
              '& .MuiDrawer-paper': {
                boxSizing: 'border-box',
                width: drawerWidth,
              },
            }}
          >
            {demoDrawer}
          </Drawer>

          {/* Main Content */}
          <Box component="main" sx={{ flexGrow: 1, overflow: 'auto', height: '100%' }}>
            <Box sx={{ p: 3 }}>
              {/* Enhanced Breadcrumbs */}
              <Breadcrumbs 
                sx={{ mb: 3 }}
                separator={<NavigateNext fontSize="small" />}
              >
                <Typography 
                  color="inherit"
                  sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}
                >
                  <Home sx={{ fontSize: 16 }} />
                  ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
                </Typography>
                <Typography 
                  color="text.primary"
                  sx={{ display: 'flex', alignItems: 'center', gap: 0.5, fontWeight: 600 }}
                >
                  {menuItems[selectedMenu].icon}
                  {menuItems[selectedMenu].text}
                </Typography>
                {contentTabValue > 0 && (
                  <Typography color="text.secondary">
                    {(() => {
                      const tabLabels = {
                        0: ['‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°', '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥', '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°'], // Dashboard
                        1: ['‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà', '‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£'], // Users
                        2: ['‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢', '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'], // Reports
                        3: ['‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°', '‡∏™‡πà‡∏á', '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥'], // Messages
                        4: ['‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢', '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô'] // Settings
                      };
                      return tabLabels[selectedMenu as keyof typeof tabLabels]?.[contentTabValue] || '';
                    })()}
                  </Typography>
                )}
              </Breadcrumbs>
              
              {/* Dynamic Content Based on Selected Menu */}
              {renderSelectedContent()}
            </Box>
          </Box>
        </Box>
      </Box>
    </Box>
  );
}

export default function MUILesson6Page() {
  const [activeTab, setActiveTab] = useState(0);
  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
  const [mobileOpen, setMobileOpen] = useState(false);
  const [drawerOpen, setDrawerOpen] = useState(false);
  const [tabValue, setTabValue] = useState(0);

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setActiveTab(newValue);
  };

  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorEl(event.currentTarget);
  };

  const handleClose = () => {
    setAnchorEl(null);
  };

  const handleDrawerToggle = () => {
    setMobileOpen(!mobileOpen);
  };

  const handleTabValueChange = (event: React.SyntheticEvent, newValue: number) => {
    setTabValue(newValue);
  };

  return (
    <Container maxWidth="lg">
      <Box sx={{ py: 4 }}>
        {/* Header */}
        <Box sx={{ mb: 4 }}>
          <Button
            startIcon={<ArrowBack />}
            component={Link}
            href="/mui-tutorial"
            sx={{ mb: 2 }}
          >
            ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
          </Button>
          
          <Typography variant="h1" sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 2 }}>
            <Navigation color="primary" sx={{ fontSize: '3rem' }} />
            ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 6: Navigation Components
          </Typography>
          
          <Typography variant="h5" color="text.secondary" sx={{ mb: 3 }}>
            ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏î‡πâ‡∏ß‡∏¢ MUI ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà! üóÇÔ∏è
          </Typography>
          
          <Box sx={{ display: 'flex', gap: 2, mb: 3, flexWrap: 'wrap' }}>
            <Chip icon={<Navigation />} label="AppBar & Toolbar" color="primary" />
            <Chip icon={<MenuIcon />} label="Drawer & Menu" color="secondary" />
            <Chip icon={<Assignment />} label="Tabs" color="success" />
            <Chip icon={<NavigateNext />} label="Breadcrumbs" color="warning" />
          </Box>
          
          <Alert severity="info" sx={{ mb: 3 }}>
            <Typography variant="body2">
              üéØ <strong>‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏µ‡πâ:</strong> ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö web app
              <br />
              ‚è±Ô∏è <strong>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤:</strong> 35 ‡∏ô‡∏≤‡∏ó‡∏µ | 
              üìä <strong>‡∏£‡∏∞‡∏î‡∏±‡∏ö:</strong> ‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á
            </Typography>
          </Alert>

          {/* Why Navigation Components Matter */}
          <Paper sx={{ p: 3, mb: 4, bgcolor: 'info.50', border: '2px solid', borderColor: 'info.200' }}>
            <Typography variant="h6" sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1 }}>
              <Lightbulb color="info" /> üí° ‡∏ó‡∏≥‡πÑ‡∏° Navigation ‡∏ñ‡∏∂‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç?
            </Typography>
            
            <Box sx={{ pl: 2, borderLeft: '3px solid', borderColor: 'info.main', mb: 2 }}>
              <Typography variant="body2" sx={{ mb: 1 }}>
                ‚Ä¢ üß≠ <strong>User Orientation:</strong> ‡∏ä‡πà‡∏ß‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ
              </Typography>
              <Typography variant="body2" sx={{ mb: 1 }}>
                ‚Ä¢ üöÄ <strong>Easy Access:</strong> ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß
              </Typography>
              <Typography variant="body2" sx={{ mb: 1 }}>
                ‚Ä¢ üì± <strong>Responsive Design:</strong> ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏á‡∏ï‡∏±‡∏ß
              </Typography>
              <Typography variant="body2">
                ‚Ä¢ ‚ú® <strong>Professional Look:</strong> ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏õ‡∏î‡∏π‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
              </Typography>
            </Box>

            <Alert severity="info" sx={{ mt: 2 }}>
              <Typography variant="body2">
                ‚ú® <strong>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:</strong> Navigation ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏° UX ‡πÅ‡∏•‡∏∞‡∏•‡∏î bounce rate ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ!
              </Typography>
            </Alert>
          </Paper>
        </Box>

        {/* Learning Objectives */}
        <Paper sx={{ p: 3, mb: 4 }}>
          <Typography variant="h6" sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1 }}>
            <CheckCircle color="primary" /> üéØ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏ö‡∏ö‡∏ó‡∏ô‡∏µ‡πâ ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ:
          </Typography>
          
          <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 4 }}>
            <Box sx={{ flex: 1 }}>
              <List dense>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText 
                    primary="‡∏™‡∏£‡πâ‡∏≤‡∏á AppBar ‡πÅ‡∏•‡∏∞ Toolbar" 
                    secondary="navigation bar ‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢"
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText 
                    primary="‡πÉ‡∏ä‡πâ Drawer ‡πÅ‡∏•‡∏∞ Menu" 
                    secondary="sidebar ‡πÅ‡∏•‡∏∞ dropdown menu"
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText 
                    primary="‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Tabs navigation" 
                    secondary="‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡πÅ‡∏ó‡πá‡∏ö"
                  />
                </ListItem>
              </List>
            </Box>
            
            <Box sx={{ flex: 1 }}>
              <List dense>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText 
                    primary="‡∏™‡∏£‡πâ‡∏≤‡∏á Breadcrumbs" 
                    secondary="‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText 
                    primary="Responsive Navigation" 
                    secondary="navigation ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏≠"
                  />
                </ListItem>
                <ListItem>
                  <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                  <ListItemText 
                    primary="Complete App Layout" 
                    secondary="layout ‡πÅ‡∏≠‡∏õ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå"
                  />
                </ListItem>
              </List>
            </Box>
          </Box>
        </Paper>

        {/* Tabs */}
        <Box sx={{ width: '100%' }}>
          <Tabs 
            value={activeTab} 
            onChange={handleTabChange}
            variant="scrollable"
            scrollButtons="auto"
            sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}
          >
            <Tab 
              label="üß≠ AppBar & Toolbar" 
              icon={<Navigation />}
              iconPosition="start"
            />
            <Tab 
              label="üìÇ Drawer & Menu" 
              icon={<MenuIcon />}
              iconPosition="start"
            />
            <Tab 
              label="üìë Tabs Navigation" 
              icon={<Assignment />}
              iconPosition="start"
            />
            <Tab 
              label="üîó Breadcrumbs" 
              icon={<NavigateNext />}
              iconPosition="start"
            />
            <Tab 
              label="üöÄ Complete Layout" 
              icon={<PlayArrow />}
              iconPosition="start"
            />
          </Tabs>
        </Box>

        {/* Tab 1: AppBar & Toolbar */}
        <TabPanel value={activeTab} index={0}>
          <Typography variant="h3" sx={{ mb: 3 }}>üß≠ AppBar & Toolbar</Typography>
          
          <Typography variant="body1" sx={{ mb: 3 }}>
            AppBar ‡πÄ‡∏õ‡πá‡∏ô navigation bar ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö Toolbar ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á elements
          </Typography>

          <Typography variant="h5" sx={{ mb: 2 }}>üéØ AppBar Variants</Typography>

          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: 'repeat(3, 1fr)' }, gap: 3, mb: 4 }}>
            {appBarVariants.map((variant, index) => (
              <Card key={variant.variant}>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2, fontWeight: 600, textTransform: 'capitalize' }}>
                    {variant.variant}
                  </Typography>
                  
                  <Typography variant="body2" sx={{ mb: 2 }}>
                    {variant.description}
                  </Typography>
                  
                  <Typography variant="subtitle2" sx={{ mb: 1, color: 'primary.main', fontWeight: 600 }}>
                    ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
                  </Typography>
                  <Typography variant="body2" sx={{ mb: 2, color: 'text.secondary' }}>
                    {variant.usage}
                  </Typography>
                  
                  <Box sx={{ mb: 2 }}>
                    <Typography variant="subtitle2" sx={{ mb: 1, color: 'success.main' }}>
                      ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ:
                    </Typography>
                    {variant.pros.map((pro, i) => (
                      <Typography key={i} variant="body2" sx={{ fontSize: '0.8rem', color: 'text.secondary' }}>
                        ‚Ä¢ {pro}
                      </Typography>
                    ))}
                  </Box>
                  
                  <Box>
                    <Typography variant="subtitle2" sx={{ mb: 1, color: 'error.main' }}>
                      ‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á:
                    </Typography>
                    {variant.cons.map((con, i) => (
                      <Typography key={i} variant="body2" sx={{ fontSize: '0.8rem', color: 'text.secondary' }}>
                        ‚Ä¢ {con}
                      </Typography>
                    ))}
                  </Box>
                </CardContent>
              </Card>
            ))}
          </Box>

          <Typography variant="h5" sx={{ mb: 2 }}>üíª AppBar ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á</Typography>
          
          <Card sx={{ mb: 3 }}>
            <CardContent>
              <Typography variant="h6" sx={{ mb: 2 }}>
                üé® Basic AppBar
              </Typography>
              
              <Box sx={{ mb: 3 }}>
                <AppBar position="static" sx={{ borderRadius: 1 }}>
                  <Toolbar>
                    <IconButton
                      size="large"
                      edge="start"
                      color="inherit"
                      sx={{ mr: 2 }}
                    >
                      <MenuIcon />
                    </IconButton>
                    <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
                      My App
                    </Typography>
                    <Button color="inherit">Login</Button>
                  </Toolbar>
                </AppBar>
              </Box>

              <Box>
                <AppBar position="static" sx={{ borderRadius: 1 }}>
                  <Toolbar>
                    <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
                      Dashboard
                    </Typography>
                    <IconButton
                      size="large"
                      color="inherit"
                    >
                      <Search />
                    </IconButton>
                    <IconButton
                      size="large"
                      color="inherit"
                    >
                      <Badge badgeContent={4} color="error">
                        <Notifications />
                      </Badge>
                    </IconButton>
                    <IconButton
                      size="large"
                      edge="end"
                      color="inherit"
                      onClick={handleMenu}
                    >
                      <AccountCircle />
                    </IconButton>
                    <Menu
                      anchorEl={anchorEl}
                      open={Boolean(anchorEl)}
                      onClose={handleClose}
                      anchorOrigin={{
                        vertical: 'bottom',
                        horizontal: 'right',
                      }}
                      transformOrigin={{
                        vertical: 'top',
                        horizontal: 'right',
                      }}
                    >
                      <MenuItem onClick={handleClose}>
                        <Person sx={{ mr: 1 }} /> Profile
                      </MenuItem>
                      <MenuItem onClick={handleClose}>
                        <Settings sx={{ mr: 1 }} /> Settings
                      </MenuItem>
                      <Divider />
                      <MenuItem onClick={handleClose}>
                        Logout
                      </MenuItem>
                    </Menu>
                  </Toolbar>
                </AppBar>
              </Box>
            </CardContent>
          </Card>
        </TabPanel>

        {/* Tab 2: Drawer & Menu */}
        <TabPanel value={activeTab} index={1}>
          <Typography variant="h3" sx={{ mb: 3 }}>üìÇ Drawer & Menu</Typography>
          
          <Typography variant="body1" sx={{ mb: 3 }}>
            Drawer ‡πÄ‡∏õ‡πá‡∏ô sidebar ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏™‡πà‡∏ß‡∏ô Menu ‡πÄ‡∏õ‡πá‡∏ô dropdown ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏ô‡∏π
          </Typography>

          <Typography variant="h5" sx={{ mb: 2 }}>üéØ Drawer Types</Typography>

          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: 'repeat(3, 1fr)' }, gap: 3, mb: 4 }}>
            {drawerTypes.map((type, index) => (
              <Card key={type.type}>
                <CardContent>
                  <Typography variant="h6" sx={{ mb: 2, fontWeight: 600, textTransform: 'capitalize' }}>
                    {type.type}
                  </Typography>
                  
                  <Typography variant="body2" sx={{ mb: 2 }}>
                    {type.description}
                  </Typography>
                  
                  <Typography variant="subtitle2" sx={{ mb: 1, color: 'primary.main', fontWeight: 600 }}>
                    ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:
                  </Typography>
                  <Typography variant="body2" sx={{ mb: 2, color: 'text.secondary' }}>
                    {type.usage}
                  </Typography>
                  
                  <Box sx={{ mb: 2 }}>
                    <Typography variant="subtitle2" sx={{ mb: 1, color: 'success.main' }}>
                      üåü ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
                    </Typography>
                    {type.examples.map((example, i) => (
                      <Typography key={i} variant="body2" sx={{ fontSize: '0.8rem', color: 'text.secondary' }}>
                        ‚Ä¢ {example}
                      </Typography>
                    ))}
                  </Box>
                  
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                    <Typography variant="subtitle2" sx={{ color: 'primary.main', fontWeight: 600 }}>
                      üìå ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô:
                    </Typography>
                    {type.icon}
                  </Box>
                </CardContent>
              </Card>
            ))}
          </Box>

          <Button variant="contained" onClick={() => setDrawerOpen(true)} sx={{ mb: 3 }}>
            ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î Drawer
          </Button>

          <Drawer
            anchor="left"
            open={drawerOpen}
            onClose={() => setDrawerOpen(false)}
          >
            <Box sx={{ width: 250 }} role="presentation">
              <List>
                <ListItem>
                  <ListItemIcon><Home /></ListItemIcon>
                  <ListItemText primary="‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Person /></ListItemIcon>
                  <ListItemText primary="‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå" />
                </ListItem>
                <ListItem>
                  <ListItemIcon><Settings /></ListItemIcon>
                  <ListItemText primary="‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤" />
                </ListItem>
                <Divider />
                <ListItem>
                  <ListItemIcon><Mail /></ListItemIcon>
                  <ListItemText primary="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°" />
                  <Badge badgeContent={4} color="primary" />
                </ListItem>
              </List>
            </Box>
          </Drawer>
        </TabPanel>

        {/* Tab 3: Tabs Navigation */}
        <TabPanel value={activeTab} index={2}>
          <Typography variant="h3" sx={{ mb: 3 }}>üìë Tabs Navigation</Typography>
          
          <Typography variant="body1" sx={{ mb: 3 }}>
            Tabs ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
          </Typography>

          <Card sx={{ mb: 3 }}>
            <CardContent>
              <Typography variant="h6" sx={{ mb: 2 }}>
                üìë Basic Tabs
              </Typography>

              <Box sx={{ width: '100%' }}>
                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>
                  <Tabs value={tabValue} onChange={handleTabValueChange}>
                    <Tab label="‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î" />
                    <Tab label="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô" />
                    <Tab label="‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤" />
                  </Tabs>
                </Box>
                <Box sx={{ p: 3 }}>
                  {tabValue === 0 && (
                    <Typography>
                      üè† <strong>‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î:</strong> ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
                    </Typography>
                  )}
                  {tabValue === 1 && (
                    <Typography>
                      üìä <strong>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô:</strong> ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                    </Typography>
                  )}
                  {tabValue === 2 && (
                    <Typography>
                      ‚öôÔ∏è <strong>‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤:</strong> ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö
                    </Typography>
                  )}
                </Box>
              </Box>
            </CardContent>
          </Card>
        </TabPanel>

        {/* Tab 4: Breadcrumbs */}
        <TabPanel value={activeTab} index={3}>
          <Typography variant="h3" sx={{ mb: 3 }}>üîó Breadcrumbs</Typography>
          
          <Typography variant="body1" sx={{ mb: 3 }}>
            Breadcrumbs ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ
          </Typography>

          <Card sx={{ mb: 3 }}>
            <CardContent>
              <Typography variant="h6" sx={{ mb: 2 }}>
                üîó Basic Breadcrumbs
              </Typography>

              <Box sx={{ mb: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>
                <Breadcrumbs aria-label="breadcrumb">
                  <Link href="/" style={{ textDecoration: 'none' }}>
                    ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
                  </Link>
                  <Link href="/products" style={{ textDecoration: 'none' }}>
                    ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                  </Link>
                  <Typography color="text.primary">
                    iPhone 15 Pro
                  </Typography>
                </Breadcrumbs>
              </Box>

              <Box sx={{ p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>
                <Breadcrumbs 
                  separator={<NavigateNext fontSize="small" />}
                  aria-label="breadcrumb"
                >
                  <Link 
                    href="/" 
                    style={{ 
                      textDecoration: 'none', 
                      display: 'flex', 
                      alignItems: 'center',
                      color: 'inherit'
                    }}
                  >
                    <Home sx={{ mr: 0.5, fontSize: 20 }} />
                    ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
                  </Link>
                  <Link 
                    href="/dashboard" 
                    style={{ 
                      textDecoration: 'none', 
                      display: 'flex', 
                      alignItems: 'center',
                      color: 'inherit'
                    }}
                  >
                    <Dashboard sx={{ mr: 0.5, fontSize: 20 }} />
                    ‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î
                  </Link>
                  <Typography 
                    color="text.primary"
                    sx={{ display: 'flex', alignItems: 'center' }}
                  >
                    <Person sx={{ mr: 0.5, fontSize: 20 }} />
                    ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
                  </Typography>
                </Breadcrumbs>
              </Box>
            </CardContent>
          </Card>
        </TabPanel>

        {/* Tab 5: Complete Layout */}
        <TabPanel value={activeTab} index={4}>
          <Typography variant="h3" sx={{ mb: 3 }}>üöÄ Complete Layout</Typography>
          
          <Typography variant="body1" sx={{ mb: 3 }}>
            ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Layout ‡πÅ‡∏≠‡∏õ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏£‡∏ß‡∏° Navigation ‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó <strong>‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á!</strong>
          </Typography>

          {/* Working Demo */}
          <Card sx={{ mb: 4 }}>
            <CardContent>
              <Typography variant="h5" sx={{ mb: 3, textAlign: 'center' }}>
                üì± Interactive Dashboard Demo
              </Typography>
              
              <Alert severity="success" sx={{ mb: 2 }}>
                <Typography variant="body2">
                  ‚ú® <strong>Demo ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á:</strong> ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏ã‡πâ‡∏≤‡∏¢ ‚ûú ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Tab ‡πÉ‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ ‚ûú ‡∏î‡∏π Breadcrumbs ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô!
                  <br />
                  üéØ <strong>‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡πà‡∏á:</strong> AppBar + Drawer + Tabs + Breadcrumbs ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
                </Typography>
              </Alert>
              
              <WorkingLayoutDemo />
              
              {/* Show Code Section */}
              <Box sx={{ mt: 4 }}>
                <Typography variant="h6" sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 1 }}>
                  üíª Source Code
                  <Chip label="Copy & Paste ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!" color="success" size="small" />
                </Typography>
                
                <Alert severity="info" sx={{ mb: 2 }}>
                  <Typography variant="body2">
                    üìù <strong>‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:</strong> Copy code ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!
                  </Typography>
                </Alert>

                <Paper 
                  sx={{ 
                    p: 2, 
                    bgcolor: 'grey.900', 
                    color: 'grey.100', 
                    fontFamily: 'monospace',
                    fontSize: '0.875rem',
                    overflow: 'auto',
                    maxHeight: 400,
                    border: '1px solid',
                    borderColor: 'grey.300'
                  }}
                >
                  <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>
{`// Complete Navigation Layout Demo
import {
  Box, AppBar, Toolbar, Typography, IconButton, 
  Drawer, List, ListItemButton, ListItemIcon, 
  ListItemText, Tabs, Tab, Breadcrumbs, Badge,
  Menu, MenuItem, Card, CardContent, Paper,
  Avatar, Chip, useTheme, useMediaQuery
} from '@mui/material';
import {
  Menu as MenuIcon, Home, Person, Settings, 
  BarChart, Mail, Notifications, AccountCircle,
  NavigateNext, Dashboard, CheckCircle, ShoppingCart
} from '@mui/icons-material';
import { useState } from 'react';

function NavigationDemo() {
  const theme = useTheme();
  const [drawerOpen, setDrawerOpen] = useState(false);
  const [selectedMenu, setSelectedMenu] = useState(0);
  const [contentTabValue, setContentTabValue] = useState(0);
  const [anchorEl, setAnchorEl] = useState(null);

  const menuItems = [
    { 
      text: '‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å', 
      icon: <Home />, 
      content: 'dashboard',
      description: '‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ'
    },
    { 
      text: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô', 
      icon: <Person />, 
      content: 'users',
      description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
    },
    { 
      text: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô', 
      icon: <BarChart />, 
      content: 'reports',
      description: '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå'
    }
  ];

  const handleMenuClick = (index) => {
    setSelectedMenu(index);
    setDrawerOpen(false);
    setContentTabValue(0);
  };

  const renderContent = () => {
    return (
      <Box>
        <Typography variant="h4" sx={{ mb: 3 }}>
          üìä Dashboard
        </Typography>
        
        {/* Tabs Navigation */}
        <Tabs 
          value={contentTabValue} 
          onChange={(e, newValue) => setContentTabValue(newValue)}
          sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}
        >
          <Tab label="üìà ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°" />
          <Tab label="üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥" />
          <Tab label="üïí ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°" />
        </Tabs>

        {/* Tab Content */}
        {contentTabValue === 0 && (
          <Card>
            <CardContent>
              <Typography variant="h6">‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏î‡πà‡∏ß‡∏ô</Typography>
              <Typography>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö</Typography>
            </CardContent>
          </Card>
        )}
        
        {contentTabValue === 1 && (
          <Card>
            <CardContent>
              <Typography variant="h6">‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å</Typography>
              <Typography>‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</Typography>
            </CardContent>
          </Card>
        )}
        
        {contentTabValue === 2 && (
          <Card>
            <CardContent>
              <Typography variant="h6">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</Typography>
              <Typography>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</Typography>
            </CardContent>
          </Card>
        )}
      </Box>
    );
  };

  return (
    <Box sx={{ height: 600, border: '1px solid', borderColor: 'grey.300' }}>
      <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>
        {/* AppBar */}
        <AppBar position="static">
          <Toolbar>
            <IconButton 
              color="inherit" 
              onClick={() => setDrawerOpen(!drawerOpen)}
              sx={{ mr: 2, display: { sm: 'none' } }}
            >
              <MenuIcon />
            </IconButton>
            
            <Typography variant="h6" sx={{ flexGrow: 1 }}>
              üìä MyApp Dashboard
            </Typography>
            
            <IconButton color="inherit">
              <Badge badgeContent={4} color="error">
                <Notifications />
              </Badge>
            </IconButton>
            
            <IconButton 
              color="inherit" 
              onClick={(e) => setAnchorEl(e.currentTarget)}
            >
              <AccountCircle />
            </IconButton>
            
            <Menu 
              anchorEl={anchorEl} 
              open={Boolean(anchorEl)} 
              onClose={() => setAnchorEl(null)}
            >
              <MenuItem>‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</MenuItem>
              <MenuItem>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</MenuItem>
              <MenuItem>‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</MenuItem>
            </Menu>
          </Toolbar>
        </AppBar>

        {/* Main Layout */}
        <Box sx={{ display: 'flex', flex: 1 }}>
          {/* Desktop Drawer */}
          <Box sx={{ display: { xs: 'none', sm: 'block' }, width: 240 }}>
            <List>
              {menuItems.map((item, index) => (
                <ListItemButton
                  key={item.text}
                  selected={selectedMenu === index}
                  onClick={() => handleMenuClick(index)}
                >
                  <ListItemIcon>{item.icon}</ListItemIcon>
                  <ListItemText 
                    primary={item.text}
                    secondary={selectedMenu === index ? item.description : undefined}
                  />
                </ListItemButton>
              ))}
            </List>
          </Box>

          {/* Mobile Drawer */}
          <Drawer
            open={drawerOpen}
            onClose={() => setDrawerOpen(false)}
            sx={{ display: { xs: 'block', sm: 'none' } }}
          >
            <List sx={{ width: 240 }}>
              {menuItems.map((item, index) => (
                <ListItemButton
                  key={item.text}
                  onClick={() => handleMenuClick(index)}
                >
                  <ListItemIcon>{item.icon}</ListItemIcon>
                  <ListItemText primary={item.text} />
                </ListItemButton>
              ))}
            </List>
          </Drawer>

          {/* Main Content */}
          <Box sx={{ flexGrow: 1, p: 3, overflow: 'auto' }}>
            {/* Breadcrumbs */}
            <Breadcrumbs sx={{ mb: 3 }}>
              <Typography color="inherit">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</Typography>
              <Typography color="text.primary">
                {menuItems[selectedMenu].text}
              </Typography>
              {contentTabValue > 0 && (
                <Typography color="text.secondary">
                  {['‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°', '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥', '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°'][contentTabValue]}
                </Typography>
              )}
            </Breadcrumbs>
            
            {/* Dynamic Content */}
            {renderContent()}
          </Box>
        </Box>
      </Box>
    </Box>
  );
}

export default NavigationDemo;`}
                  </pre>
                </Paper>

                <Box sx={{ mt: 2, p: 2, bgcolor: 'warning.light', borderRadius: 1 }}>
                  <Typography variant="body2" sx={{ fontWeight: 600 }}>
                    üí° <strong>Tips ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:</strong>
                  </Typography>
                  <Typography variant="body2" sx={{ mt: 1 }}>
                    ‚Ä¢ ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á <code>menuItems</code> ‡∏ï‡∏≤‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£<br />
                    ‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏° Tab ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô <code>Tabs</code> component<br />
                    ‚Ä¢ ‡∏õ‡∏£‡∏±‡∏ö responsive ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà <code>sx</code> properties<br />
                    ‚Ä¢ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡πÅ‡∏•‡∏∞ theme ‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏° MUI theme
                  </Typography>
                </Box>
              </Box>
            </CardContent>
          </Card>

          {/* Features Highlight */}
          <Card sx={{ mb: 4 }}>
            <CardContent>
              <Typography variant="h5" sx={{ mb: 3 }}>
                ‚≠ê ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô Demo
              </Typography>
              
              <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3 }}>
                <Box>
                  <Typography variant="h6" sx={{ mb: 2, color: 'success.main' }}>
                    ‚úÖ Navigation Features:
                  </Typography>
                  <List dense>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                      <ListItemText primary="Responsive AppBar" secondary="‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏ï‡∏≤‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠" />
                    </ListItem>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                      <ListItemText primary="Interactive Sidebar" secondary="‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ö‡∏ö vertical ‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ" />
                    </ListItem>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                      <ListItemText primary="Tab Navigation" secondary="‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤" />
                    </ListItem>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                      <ListItemText primary="Dynamic Breadcrumbs" secondary="‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏•‡∏∞ Tab" />
                    </ListItem>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemIcon><CheckCircle color="success" sx={{ fontSize: 20 }} /></ListItemIcon>
                      <ListItemText primary="Mobile Drawer" secondary="‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ö‡∏ö slide-out ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠" />
                    </ListItem>
                  </List>
                </Box>
                
                <Box>
                  <Typography variant="h6" sx={{ mb: 2, color: 'info.main' }}>
                    üéØ Content Pages:
                  </Typography>
                  <List dense>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemText 
                        primary="üìä Dashboard" 
                        secondary="‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° | ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ | ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (3 tabs)" 
                      />
                    </ListItem>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemText 
                        primary="üë• User Management" 
                        secondary="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ | ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà | ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ (3 tabs)" 
                      />
                    </ListItem>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemText 
                        primary="üìà Reports" 
                        secondary="‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ | ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ | ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (3 tabs)" 
                      />
                    </ListItem>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemText 
                        primary="üí¨ Messages" 
                        secondary="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° | ‡∏™‡πà‡∏á | ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ (3 tabs)" 
                      />
                    </ListItem>
                    <ListItem sx={{ py: 0.5 }}>
                      <ListItemText 
                        primary="‚öôÔ∏è Settings" 
                        secondary="‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ | ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ | ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (3 tabs)" 
                      />
                    </ListItem>
                  </List>
                </Box>
              </Box>
            </CardContent>
          </Card>
        </TabPanel>

        {/* Navigation */}
        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 6 }}>
          <Button
            startIcon={<ArrowBack />}
            component={Link}
            href="/mui-tutorial/lesson-5"
            variant="outlined"
          >
            ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 5: Forms ‡πÅ‡∏•‡∏∞ Inputs
          </Button>
          
          <Chip 
            label="6 / 8"
            color="primary"
            variant="filled"
          />
          
          <Button
            endIcon={<ArrowForward />}
            component={Link}
            href="/mui-tutorial/lesson-7"
            variant="contained"
          >
            ‡∏ö‡∏ó‡∏ó‡∏µ‡πà 7: Data Display
          </Button>
        </Box>
      </Box>
    </Container>
  );
} 